%implements s44_b0_9euqc_0_ForcingFunction "C"

%function ForcingFunction(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

boolean_T lsat;
boolean_T usat;
%closefile localVarDecl
if (localDW->Distanceintogusty_MODE) {
    /* {S!d16}ForcingFunction for Integrator: '<S44>/Distance into Gust (x) (Limited to gust length d) ' */
    lsat = (localX->DistanceintoGustxLimitedtogustl <= localP->DistanceintoGustxLimitedtogus_f);
    usat = (localX->DistanceintoGustxLimitedtogustl >= rtp_d_m);
    if (((!lsat) && (!usat)) || (lsat && (rtu_V > 0.0)) || (usat && (rtu_V < 0.0))) {
        localXdot->DistanceintoGustxLimitedtogustl = rtu_V;
    } else {
        /* in saturation */
        localXdot->DistanceintoGustxLimitedtogustl = 0.0;
    }
    /* {E!d16}End of ForcingFunction for Integrator: '<S44>/Distance into Gust (x) (Limited to gust length d) ' */
} else {
%<SLibCGIRZeroOutDerivativesForSystem(20, 43, 90)>\
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("ForcingFunction", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "ForcingFunction"))
%<SLibCG_AccessArg(0, 4, 0)>
%endif
%if SLibCG_ArgAccessed(0, 4, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "ForcingFunction", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "ForcingFunction"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 4, 0)>
%endif
%<LibSetSystemField(system, "CachedForcingFunctionLocalVars", localVarDecl)>
%endfunction
%function ForcingFunctionFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void AirRefuel_Distanceintogusty_ForcingFunction(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 4, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%assign rtmArgSys = SLibGetModuleFileNameOwnerSystemIdx(0)
%assign sourceFile = SLibGetFullFileNameForSystemCode("sys_fcn_defn", rtmArgSys)
%<SLibUpdateLocalSymbolTableForFile(sourceFile, SLibGetFcnDefinitionRTMSymbolName())>\
%endif
%<comma>real_T rtu_V\
%assign comma = ", "
%<comma>DW_Distanceintogusty_AirRefue_T *localDW\
%assign comma = ", "
%<comma>P_Distanceintogusty_AirRefuel_T *localP\
%assign comma = ", "
%<comma>X_Distanceintogusty_AirRefuel_T *localX\
%assign comma = ", "
%<comma>XDot_Distanceintogusty_AirRef_T *localXdot\
%assign comma = ", "
%<comma>real_T rtp_d_m\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%endfunction
