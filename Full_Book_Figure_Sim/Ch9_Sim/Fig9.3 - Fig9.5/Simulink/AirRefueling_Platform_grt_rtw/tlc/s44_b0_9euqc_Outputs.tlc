%implements s44_b0_9euqc_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%<SLibCGIRAccessLocalVar(137, 0, "")> %% rtb_kxi
%<SLibCGIRAccessLocalVar(142, 0, "")> %% rtb_jxk
%<SLibCGIRAccessLocalVar(144, 0, "")> %% rtb_Gain_h
%<SLibCGIRAccessLocalVar(133, 0, "")> %% rtb_Sum1_m
%<SLibCGIRAccessLocalVar(131, 0, "")> %% rtb_ixj
%<SLibCGIRAccessLocalVar(86, 0, "")> %% rtb_Integrator_e
%<SLibCGIRAccessLocalVar(87, 0, "")> %% rtb_Integrator_d
%<SLibCGIRAccessLocalVar(88, 0, "")> %% rtb_Integrator_k
%<SLibCGIRAccessLocalVar(128, 0, "")> %% rtb_UnitConversion_n
%<SLibCGIRAccessLocalVar(138, 0, "")> %% rtb_Sum_ah
%<SLibCGIRAccessLocalVar(126, 0, "")> %% rtb_InterpretedMATLABFunction
%<SLibCGIRAccessLocalVar(48, 0, "")> %% rtb_y_p
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

static const real_T e[14] = { 0.0, 0.0, 0.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.71428571428571419, 0.857142857142857, 1.0, 1.0, 1.0, 1.0 };
emxArray_real_T_AirRefueling__T *X;
emxArray_real_T_AirRefueling__T *Y;
emxArray_real_T_AirRefueling__T *Z;
real_T rtb_T[100];
real_T VrAngle[66];
real_T VrPos[66];
real_T rtb_P_hose_dr[63];
real_T P_link20[60];
real_T rtb_Derivative[30];
real_T rtb_vr[30];
real_T vn[30];
real_T (*lastU)[30];
real_T rtb_Sum5[18];
real_T y[16];
real_T Nik_u[10];
real_T sina[10];
real_T V[9];
real_T rtb_y[6];
real_T rtb_Divide[4];
real_T rtb_WhiteNoise[4];
real_T rtb_Gain1_d[3];
real_T rtb_Sum[3];
real_T rtb_Sum_2[3];
real_T rtb_Sum_3[3];
real_T rtb_Sum_4[3];
real_T rtb_Sum_5[3];
real_T rtb_Sum_m2[3];
real_T (*lastU_0)[3];
real_T frac[2];
real_T rtb_Product2_i[2];
real_T TVorT;
real_T pX_idx_2;
real_T pY_idx_1;
real_T pY_idx_2;
real_T pZ_idx_0;
real_T pZ_idx_1;
real_T rVorCoreT;
real_T rtb_Fy;
real_T rtb_LimitFunction10ftto1000ft;
real_T rtb_LimitFunction10ftto1000ft_t;
real_T rtb_LowAltitudeScaleLength;
real_T rtb_Lv_idx_0;
real_T rtb_Lv_idx_1;
real_T rtb_Lw_idx_0;
real_T rtb_Lw_idx_1;
real_T rtb_UnitConversion;
real_T rtb_UnitConversion_au;
real_T rtb_UnitConversion_f;
real_T rtb_dl1out;
real_T rtb_jxi;
real_T rtb_jxi_tmp;
real_T rtb_l1out;
real_T rtb_u2rhoV2;
real_T vVorT;
real_T vVorW;
int32_T CkSum;
int32_T i;
int32_T idx;
int32_T n_tmp;
uint32_T bpIndex[2];
int8_T rtAction;
boolean_T p;
ZCEventType zcEvent;
%closefile localVarDecl
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(1,34,19,0)
%<SLibCGIRAccessLocalVar(138, 0, "")> %% rtb_Sum_ah
%endif
%if SLibCG_FcnCallArgAccessed(1,34,19,1)
%<SLibCGIRAccessLocalVar(138, 0, "")> %% rtb_Sum_ah
%endif

%assign tlcOutputsFcnOfS43B14 = OpaqueTLCBlockFcn("Outputs", 43, 14, 1, 34, 0)
%assign tlcOutputsFcnOfS43B15 = OpaqueTLCBlockFcn("Outputs", 43, 15, 1, 34, 1)
%assign tlcOutputsFcnOfS43B25 = OpaqueTLCBlockFcn("Outputs", 43, 25, 1, 34, 2)
%assign tlcOutputsFcnOfS43B30 = OpaqueTLCBlockFcn("Outputs", 43, 30, 1, 34, 3)
%assign tlcOutputsFcnOfS43B36 = OpaqueTLCBlockFcn("Outputs", 43, 36, 1, 34, 4)
%assign tlcOutputsFcnOfS43B42 = OpaqueTLCBlockFcn("Outputs", 43, 42, 1, 34, 5)
%assign tlcOutputsFcnOfS43B45 = OpaqueTLCBlockFcn("Outputs", 43, 45, 1, 34, 6)
%assign tlcOutputsFcnOfS43B57 = OpaqueTLCBlockFcn("Outputs", 43, 57, 1, 34, 7)
%assign tlcOutputsFcnOfS43B62 = OpaqueTLCBlockFcn("Outputs", 43, 62, 1, 34, 8)
%assign tlcOutputsFcnOfS43B95 = OpaqueTLCBlockFcn("Outputs", 43, 95, 1, 34, 9)
%assign tlcOutputsFcnOfS43B96 = OpaqueTLCBlockFcn("Outputs", 43, 96, 1, 34, 10)
%assign tlcOutputsFcnOfS43B97 = OpaqueTLCBlockFcn("Outputs", 43, 97, 1, 34, 11)
%assign tlcOutputsFcnOfS43B98 = OpaqueTLCBlockFcn("Outputs", 43, 98, 1, 34, 12)
%assign tlcOutputsFcnOfS43B99 = OpaqueTLCBlockFcn("Outputs", 43, 99, 1, 34, 13)
%assign tlcOutputsFcnOfS43B100 = OpaqueTLCBlockFcn("Outputs", 43, 100, 1, 34, 14)
%assign tlcOutputsFcnOfS43B101 = OpaqueTLCBlockFcn("Outputs", 43, 101, 1, 34, 15)
%assign tlcOutputsFcnOfS43B102 = OpaqueTLCBlockFcn("Outputs", 43, 102, 1, 34, 16)
%assign tlcOutputsFcnOfS43B103 = OpaqueTLCBlockFcn("Outputs", 43, 103, 1, 34, 17)
%assign tlcOutputsFcnOfS43B104 = OpaqueTLCBlockFcn("Outputs", 43, 104, 1, 34, 18)
%assign tlcOutputsFcnOfS43B111 = OpaqueTLCBlockFcn("Outputs", 43, 111, 1, 34, 19)
%assign tlcOutputsFcnOfS43B112 = OpaqueTLCBlockFcn("Outputs", 43, 112, 1, 34, 20)
%assign tlcOutputsFcnOfS43B115 = OpaqueTLCBlockFcn("Outputs", 43, 115, 1, 34, 21)
%assign tlcOutputsFcnOfS43B121 = OpaqueTLCBlockFcn("Outputs", 43, 121, 1, 34, 22)
%assign tlcOutputsFcnOfS43B129 = OpaqueTLCBlockFcn("Outputs", 43, 129, 1, 34, 23)
%assign tlcOutputsFcnOfS43B130 = OpaqueTLCBlockFcn("Outputs", 43, 130, 1, 34, 24)
%assign tlcOutputsFcnOfS43B131 = OpaqueTLCBlockFcn("Outputs", 43, 131, 1, 34, 25)
%assign tlcOutputsFcnOfS43B132 = OpaqueTLCBlockFcn("Outputs", 43, 132, 1, 34, 26)
%assign tlcOutputsFcnOfS43B133 = OpaqueTLCBlockFcn("Outputs", 43, 133, 1, 34, 27)
%assign tlcOutputsFcnOfS43B134 = OpaqueTLCBlockFcn("Outputs", 43, 134, 1, 34, 28)
%assign tlcOutputsFcnOfS43B135 = OpaqueTLCBlockFcn("Outputs", 43, 135, 1, 34, 29)
%assign tlcOutputsFcnOfS43B136 = OpaqueTLCBlockFcn("Outputs", 43, 136, 1, 34, 30)
%assign tlcOutputsFcnOfS43B137 = OpaqueTLCBlockFcn("Outputs", 43, 137, 1, 34, 31)
%assign tlcOutputsFcnOfS43B138 = OpaqueTLCBlockFcn("Outputs", 43, 138, 1, 34, 32)
%assign tlcOutputsFcnOfS43B140 = OpaqueTLCBlockFcn("Outputs", 43, 140, 1, 34, 33)
%assign tlcOutputsFcnOfS43B142 = OpaqueTLCBlockFcn("Outputs", 43, 142, 1, 34, 34)
%assign tlcOutputsFcnOfS43B143 = OpaqueTLCBlockFcn("Outputs", 43, 143, 1, 34, 35)
%assign tlcOutputsFcnOfS43B144 = OpaqueTLCBlockFcn("Outputs", 43, 144, 1, 34, 36)
%assign tlcOutputsFcnOfS43B145 = OpaqueTLCBlockFcn("Outputs", 43, 145, 1, 34, 37)
%assign tlcOutputsFcnOfS43B146 = OpaqueTLCBlockFcn("Outputs", 43, 146, 1, 34, 38)
%assign tlcOutputsFcnOfS43B147 = OpaqueTLCBlockFcn("Outputs", 43, 147, 1, 34, 39)
%assign tlcOutputsFcnOfS43B148 = OpaqueTLCBlockFcn("Outputs", 43, 148, 1, 34, 40)
%assign tlcOutputsFcnOfS43B149 = OpaqueTLCBlockFcn("Outputs", 43, 149, 1, 34, 41)
%assign tlcOutputsFcnOfS43B150 = OpaqueTLCBlockFcn("Outputs", 43, 150, 1, 34, 42)
%assign tlcOutputsFcnOfS43B151 = OpaqueTLCBlockFcn("Outputs", 43, 151, 1, 34, 43)
%assign tlcOutputsFcnOfS43B152 = OpaqueTLCBlockFcn("Outputs", 43, 152, 1, 34, 44)
%assign tlcOutputsFcnOfS43B153 = OpaqueTLCBlockFcn("Outputs", 43, 153, 1, 34, 45)
%assign tlcOutputsFcnOfS43B154 = OpaqueTLCBlockFcn("Outputs", 43, 154, 1, 34, 46)
%assign tlcOutputsFcnOfS43B155 = OpaqueTLCBlockFcn("Outputs", 43, 155, 1, 34, 47)
%assign tlcOutputsFcnOfS43B156 = OpaqueTLCBlockFcn("Outputs", 43, 156, 1, 34, 48)
%assign tlcOutputsFcnOfS43B157 = OpaqueTLCBlockFcn("Outputs", 43, 157, 1, 34, 49)
%assign tlcOutputsFcnOfS43B169 = OpaqueTLCBlockFcn("Outputs", 43, 169, 1, 34, 50)
%assign tlcOutputsFcnOfS43B170 = OpaqueTLCBlockFcn("Outputs", 43, 170, 1, 34, 51)
%assign tlcOutputsFcnOfS43B171 = OpaqueTLCBlockFcn("Outputs", 43, 171, 1, 34, 52)
%assign tlcOutputsFcnOfS43B172 = OpaqueTLCBlockFcn("Outputs", 43, 172, 1, 34, 53)
%assign tlcOutputsFcnOfS43B173 = OpaqueTLCBlockFcn("Outputs", 43, 173, 1, 34, 54)
%assign tlcOutputsFcnOfS43B179 = OpaqueTLCBlockFcn("Outputs", 43, 179, 1, 34, 55)
%assign tlcOutputsFcnOfS43B180 = OpaqueTLCBlockFcn("Outputs", 43, 180, 1, 34, 56)
%assign tlcOutputsFcnOfS43B181 = OpaqueTLCBlockFcn("Outputs", 43, 181, 1, 34, 57)
%assign tlcOutputsFcnOfS43B182 = OpaqueTLCBlockFcn("Outputs", 43, 182, 1, 34, 58)
%assign tlcOutputsFcnOfS43B183 = OpaqueTLCBlockFcn("Outputs", 43, 183, 1, 34, 59)
%assign tlcOutputsFcnOfS43B184 = OpaqueTLCBlockFcn("Outputs", 43, 184, 1, 34, 60)
%assign tlcOutputsFcnOfS43B187 = OpaqueTLCBlockFcn("Outputs", 43, 187, 1, 34, 61)
%assign tlcOutputsFcnOfS43B188 = OpaqueTLCBlockFcn("Outputs", 43, 188, 1, 34, 62)
%assign tlcOutputsFcnOfS43B190 = OpaqueTLCBlockFcn("Outputs", 43, 190, 1, 34, 63)
%assign tlcOutputsFcnOfS43B193 = OpaqueTLCBlockFcn("Outputs", 43, 193, 1, 34, 64)
%assign tlcOutputsFcnOfS43B194 = OpaqueTLCBlockFcn("Outputs", 43, 194, 1, 34, 65)
%assign tlcOutputsFcnOfS43B195 = OpaqueTLCBlockFcn("Outputs", 43, 195, 1, 34, 66)
%assign tlcOutputsFcnOfS43B196 = OpaqueTLCBlockFcn("Outputs", 43, 196, 1, 34, 67)
%assign tlcOutputsFcnOfS43B199 = OpaqueTLCBlockFcn("Outputs", 43, 199, 1, 34, 68)
%assign tlcOutputsFcnOfS43B201 = OpaqueTLCBlockFcn("Outputs", 43, 201, 1, 34, 69)
%assign tlcOutputsFcnOfS43B211 = OpaqueTLCBlockFcn("Outputs", 43, 211, 1, 34, 70)
/* {S!d528}Product: '<S142>/k x i' incorporates:
 *  Gain: '<S87>/Gain1'
 *  Integrator: '<S87>/Integrator1'
 */
rtb_kxi = AirRefueling_Platform_P.Gain1_Gain * AirRefueling_Platform_X.Integrator1_CSTATE[2];
/* {S!d530}Sum: '<S95>/Sum' incorporates:
 *  Integrator: '<S98>/phi theta psi'
 */
rtb_Sum_ah[0] = AirRefueling_Platform_X.phithetapsi_CSTATE[0];
/* {S!d532}Sum: '<S87>/Sum' incorporates:
 *  Constant: '<S87>/TrimState2'
 */
AirRefueling_Platform_B.Sum[0] = AirRefueling_Platform_P.trim_state1[3] + rtb_Sum_ah[0];
/* {S!d534}Integrator: '<S91>/ub,vb,wb' */
AirRefueling_Platform_B.ubvbwb[0] = AirRefueling_Platform_X.ubvbwb_CSTATE[0];
/* {S!d536}Sum: '<S95>/Sum' incorporates:
 *  Integrator: '<S98>/phi theta psi'
 */
rtb_Sum_ah[1] = AirRefueling_Platform_X.phithetapsi_CSTATE[1];
/* {S!d538}Sum: '<S87>/Sum' incorporates:
 *  Constant: '<S87>/TrimState2'
 */
AirRefueling_Platform_B.Sum[1] = AirRefueling_Platform_P.trim_state1[4] + rtb_Sum_ah[1];
/* {S!d540}Integrator: '<S91>/ub,vb,wb' */
AirRefueling_Platform_B.ubvbwb[1] = AirRefueling_Platform_X.ubvbwb_CSTATE[1];
/* {S!d542}Sum: '<S95>/Sum' incorporates:
 *  Integrator: '<S98>/phi theta psi'
 */
rtb_Sum_ah[2] = AirRefueling_Platform_X.phithetapsi_CSTATE[2];
/* {S!d544}Sum: '<S87>/Sum' incorporates:
 *  Constant: '<S87>/TrimState2'
 */
AirRefueling_Platform_B.Sum[2] = AirRefueling_Platform_P.trim_state1[5] + rtb_Sum_ah[2];
/* {S!d546}Integrator: '<S91>/ub,vb,wb' */
AirRefueling_Platform_B.ubvbwb[2] = AirRefueling_Platform_X.ubvbwb_CSTATE[2];
/* {S!d548}Product: '<S142>/j x k' incorporates:
 *  Product: '<S146>/Product'
 *  Product: '<S146>/Product1'
 *  Product: '<S146>/Product2'
 *  Sqrt: '<S96>/Airspeed'
 *  Sum: '<S146>/Sum'
 */
rtb_jxk = AirRefueling_Platform_B.ubvbwb[0] * AirRefueling_Platform_B.ubvbwb[0];
rtb_jxk = (AirRefueling_Platform_B.ubvbwb[1] * AirRefueling_Platform_B.ubvbwb[1] + rtb_jxk) + AirRefueling_Platform_B.ubvbwb[2] * AirRefueling_Platform_B.ubvbwb[2];
rtb_jxk = sqrt(rtb_jxk);
/* {S!d550}Product: '<S96>/Product' */
rtb_u2rhoV2 = AirRefueling_Platform_B.ubvbwb[1] / rtb_jxk;
/* {S!d552}Integrator: '<S148>/Integrator ' */
rtb_Integrator_e = AirRefueling_Platform_X.Integrator_CSTATE_j;
/* {S!d554}Integrator: '<S147>/Integrator ' */
rtb_Integrator_d = AirRefueling_Platform_X.Integrator_CSTATE_b;
/* {S!d556}Integrator: '<S149>/Integrator ' */
rtb_Integrator_k = AirRefueling_Platform_X.Integrator_CSTATE_f;
/* {S!d558}Sum: '<S87>/Sum5' incorporates:
 *  Constant: '<S87>/TrimState1'
 *  Integrator: '<S87>/Integrator1'
 *  Trigonometry: '<S96>/Incidence'
 */
rtb_Sum5[0] = AirRefueling_Platform_X.Integrator1_CSTATE[0] - AirRefueling_Platform_P.trim_state1[0];
rtb_Sum5[1] = AirRefueling_Platform_X.Integrator1_CSTATE[1] - AirRefueling_Platform_P.trim_state1[1];
rtb_Sum5[2] = rtb_kxi - AirRefueling_Platform_P.trim_state1[2];
rtb_Sum5[6] = rtb_jxk - AirRefueling_Platform_P.trim_state1[6];
rtb_Sum5[7] = %<(SLibCGCallSubFcn("rt_atan2d_snf", ["AirRefueling_Platform_B.ubvbwb[2]", "AirRefueling_Platform_B.ubvbwb[0]"], 1, 34, 20))> - AirRefueling_Platform_P.trim_state1[7];
/* {S!d560}Trigonometry: '<S96>/Sideslip' */
if (rtb_u2rhoV2 > 1.0) {
    rtb_u2rhoV2 = 1.0;
} else {
    if (rtb_u2rhoV2 < -1.0) {
        rtb_u2rhoV2 = -1.0;
    }
}
/* {S!d562}Sum: '<S87>/Sum5' incorporates:
 *  Constant: '<S87>/Constant3'
 *  Constant: '<S87>/TrimState1'
 *  Integrator: '<S150>/Integrator '
 *  Integrator: '<S91>/p,q,r '
 *  Trigonometry: '<S96>/Sideslip'
 */
rtb_Sum5[8] = asin(rtb_u2rhoV2) - AirRefueling_Platform_P.trim_state1[8];
rtb_Sum5[3] = rtb_Sum_ah[0] - AirRefueling_Platform_P.trim_state1[3];
rtb_Sum5[9] = AirRefueling_Platform_X.pqr_CSTATE[0] - AirRefueling_Platform_P.trim_state1[9];
rtb_Sum5[4] = rtb_Sum_ah[1] - AirRefueling_Platform_P.trim_state1[4];
rtb_Sum5[10] = AirRefueling_Platform_X.pqr_CSTATE[1] - AirRefueling_Platform_P.trim_state1[10];
rtb_Sum5[5] = rtb_Sum_ah[2] - AirRefueling_Platform_P.trim_state1[5];
rtb_Sum5[11] = AirRefueling_Platform_X.pqr_CSTATE[2] - AirRefueling_Platform_P.trim_state1[11];
rtb_Sum5[12] = AirRefueling_Platform_X.Integrator_CSTATE - AirRefueling_Platform_P.trim_state1[12];
rtb_Sum5[13] = rtb_Integrator_e - AirRefueling_Platform_P.trim_state1[13];
rtb_Sum5[14] = rtb_Integrator_d - AirRefueling_Platform_P.trim_state1[14];
rtb_Sum5[15] = rtb_Integrator_k - AirRefueling_Platform_P.trim_state1[15];
rtb_Sum5[16] = AirRefueling_Platform_P.Constant3_Value_n[0] - AirRefueling_Platform_P.trim_state1[16];
rtb_Sum5[17] = AirRefueling_Platform_P.Constant3_Value_n[1] - AirRefueling_Platform_P.trim_state1[17];
/* Unit Conversion - from: ft to: m
 Expression: output = (0.3048*input) + (0) */
for (i = 0; i < 3; i++) {
    /* {S!d564}Gain: '<S3>/C2m' */
    rtb_Sum_2[i] = 0.0;
    for (n_tmp = 0; n_tmp < 18; n_tmp++) {
        rtb_Sum_2[i] += AirRefueling_Platform_P.C2m[3 * n_tmp + i] * rtb_Sum5[n_tmp];
    }
    /* {E!d564}End of Gain: '<S3>/C2m' */

    /* {S!d566}UnitConversion: '<S88>/Unit Conversion' */
    AirRefueling_Platform_B.UnitConversion[i] = 0.3048 * rtb_Sum_2[i];
    /* {S!d568}Sum: '<S3>/Sum' incorporates:
 *  Constant: '<S3>/Constant5'
 */
    rtb_Sum[i] = AirRefueling_Platform_P.p0_rc[i] + AirRefueling_Platform_B.UnitConversion[i];
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d570}Memory: '<S1>/Memory2' */
    AirRefueling_Platform_B.Memory2[0] = AirRefueling_Platform_DW.Memory2_PreviousInput[0];
    AirRefueling_Platform_B.Memory2[1] = AirRefueling_Platform_DW.Memory2_PreviousInput[1];
    AirRefueling_Platform_B.Memory2[2] = AirRefueling_Platform_DW.Memory2_PreviousInput[2];
}
/* {S!d572}Integrator: '<S5>/Integrator' */
AirRefueling_Platform_B.Integrator[0] = AirRefueling_Platform_X.Integrator_CSTATE_m[0];
AirRefueling_Platform_B.Integrator[1] = AirRefueling_Platform_X.Integrator_CSTATE_m[1];
AirRefueling_Platform_B.Integrator[2] = AirRefueling_Platform_X.Integrator_CSTATE_m[2];
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Orientation of the Links1/MATLAB Function': '<S37>:1' */
/* '<S37>:1:1' */
/* '<S37>:1:7' */
for (i = 0; i < 10; i++) {
    /* {S!d574}Integrator: '<S23>/Integrator1' */
    AirRefueling_Platform_B.Integrator1[i] = AirRefueling_Platform_X.Integrator1_CSTATE_b[i];
    /* {S!d576}Integrator: '<S23>/Integrator3' */
    AirRefueling_Platform_B.Integrator3[i] = AirRefueling_Platform_X.Integrator3_CSTATE[i];
    /* {S!d578}MATLAB Function: '<S23>/MATLAB Function' */
    /* '<S37>:1:7' */
    /* '<S37>:1:8' */
    rtb_jxi = cos(AirRefueling_Platform_B.Integrator3[i]);
    rtb_Fy = cos(AirRefueling_Platform_B.Integrator1[i]);
    rtb_l1out = sin(AirRefueling_Platform_B.Integrator3[i]);
    rtb_dl1out = sin(AirRefueling_Platform_B.Integrator1[i]);
    AirRefueling_Platform_B.n[3 * i] = rtb_Fy * rtb_jxi;
    n_tmp = 3 * i + 1;
    AirRefueling_Platform_B.n[n_tmp] = rtb_l1out;
    idx = 3 * i + 2;
    AirRefueling_Platform_B.n[idx] = -rtb_dl1out * rtb_jxi;
    /* '<S37>:1:9' */
    AirRefueling_Platform_B.nd1[3 * i] = -sin(AirRefueling_Platform_B.Integrator1[i]) * cos(AirRefueling_Platform_B.Integrator3[i]);
    AirRefueling_Platform_B.nd1[n_tmp] = 0.0;
    AirRefueling_Platform_B.nd1[idx] = -rtb_Fy * rtb_jxi;
    /* '<S37>:1:10' */
    AirRefueling_Platform_B.nd2[3 * i] = -rtb_Fy * rtb_l1out;
    AirRefueling_Platform_B.nd2[n_tmp] = rtb_jxi;
    AirRefueling_Platform_B.nd2[idx] = rtb_dl1out * rtb_l1out;
}
/* {S!d580}Derivative: '<S23>/Derivative' incorporates:
 *  Clock: '<S159>/Clock'
 *  Clock: '<S3>/Clock'
 */
rtb_jxi_tmp = %<(SLibCG_SE(LibGetT()))>;
if ((AirRefueling_Platform_DW.TimeStampA >= rtb_jxi_tmp) && (AirRefueling_Platform_DW.TimeStampB >= rtb_jxi_tmp)) {
    memset(&rtb_Derivative[0], 0, 30U * sizeof(real_T));
} else {
    rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampA;
    lastU = &AirRefueling_Platform_DW.LastUAtTimeA;
    if (AirRefueling_Platform_DW.TimeStampA < AirRefueling_Platform_DW.TimeStampB) {
        if (AirRefueling_Platform_DW.TimeStampB < rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB;
        }
    } else {
        if (AirRefueling_Platform_DW.TimeStampA >= rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB;
        }
    }
    rtb_u2rhoV2 = rtb_jxi_tmp - rtb_u2rhoV2;
    for (n_tmp = 0; n_tmp < 30; n_tmp++) {
        rtb_Derivative[n_tmp] = (AirRefueling_Platform_B.n[n_tmp] - (*lastU)[n_tmp]) / rtb_u2rhoV2;
    }
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d582}Memory: '<S16>/Memory3' */
    AirRefueling_Platform_B.Memory3 = AirRefueling_Platform_DW.Memory3_PreviousInput;
}
/* {S!d584}Integrator: '<S16>/Integrator1' */
if (%<(LibIsMajorTimeStep())>) {
    zcEvent = %<(SLibCG_SE(SLibCGIRZCFcn("RISING_ZERO_CROSSING", "AirRefueling_Platform_PrevZCX.Integrator1_Reset_ZCE", "AirRefueling_Platform_B.Memory3", 0)))>;
    /* evaluate zero-crossings */
    if (zcEvent != NO_ZCEVENT) {
        AirRefueling_Platform_X.Integrator1_CSTATE_h = AirRefueling_Platform_P.l1;
    }
}
/* {S!d586}Integrator: '<S16>/Integrator1' */
AirRefueling_Platform_B.Integrator1_o = AirRefueling_Platform_X.Integrator1_CSTATE_h;
/* {S!d588}Integrator: '<S16>/Integrator' */
if (%<(LibIsMajorTimeStep())>) {
    zcEvent = %<(SLibCG_SE(SLibCGIRZCFcn("RISING_ZERO_CROSSING", "AirRefueling_Platform_PrevZCX.Integrator_Reset_ZCE", "AirRefueling_Platform_B.Memory3", 0)))>;
    /* evaluate zero-crossings */
    if (zcEvent != NO_ZCEVENT) {
        AirRefueling_Platform_X.Integrator_CSTATE_h = AirRefueling_Platform_P.Integrator_IC;
    }
}
/* {S!d590}Integrator: '<S16>/Integrator' */
AirRefueling_Platform_B.dl_k = AirRefueling_Platform_X.Integrator_CSTATE_h;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d592}Memory: '<S16>/Memory2' */
    AirRefueling_Platform_B.Memory2_g = AirRefueling_Platform_DW.Memory2_PreviousInput_h;
    /* {S!d594}Memory: '<S10>/Memory' */
    AirRefueling_Platform_B.Memory = AirRefueling_Platform_DW.Memory_PreviousInput;
}
/* {S!d596}MATLAB Function: '<S16>/MATLAB Function2' incorporates:
 *  Constant: '<S16>/t_reel'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/HDU/MATLAB Function2': '<S19>:1' */
/* '<S19>:1:2' */
/* '<S19>:1:3' */
AirRefueling_Platform_B.Tt = (AirRefueling_Platform_B.Memory - %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Memory2_g / AirRefueling_Platform_l1", "AirRefueling_Platform_P.k_reel"], 1, 34, 1))> * AirRefueling_Platform_P.T_reel_initial) - AirRefueling_Platform_P.kd * AirRefueling_Platform_B.dl_k;
/* {S!d598}Product: '<S16>/Divide' incorporates:
 *  Constant: '<S16>/m_reel'
 */
AirRefueling_Platform_B.ddl_1 = AirRefueling_Platform_B.Tt / AirRefueling_Platform_P.m_reel_Value;
/* {S!d606}Saturate: '<S16>/Saturation' */
if (AirRefueling_Platform_B.ddl_1 > AirRefueling_Platform_P.Saturation_UpperSat) {
    /* {S!d600}Saturate: '<S16>/Saturation' */
    AirRefueling_Platform_B.Saturation = AirRefueling_Platform_P.Saturation_UpperSat;
} else if (AirRefueling_Platform_B.ddl_1 < AirRefueling_Platform_P.Saturation_LowerSat) {
    /* {S!d602}Saturate: '<S16>/Saturation' */
    AirRefueling_Platform_B.Saturation = AirRefueling_Platform_P.Saturation_LowerSat;
} else {
    /* {S!d604}Saturate: '<S16>/Saturation' */
    AirRefueling_Platform_B.Saturation = AirRefueling_Platform_B.ddl_1;
}
/* {E!d606}End of Saturate: '<S16>/Saturation' */

/* {S!d608}MATLAB Function: '<S16>/MATLAB Function1' incorporates:
 *  Constant: '<S16>/l1 initial1'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/HDU/MATLAB Function1': '<S18>:1' */
if ((AirRefueling_Platform_B.Integrator1_o > AirRefueling_Platform_P.l1) || ((AirRefueling_Platform_B.Integrator1_o == AirRefueling_Platform_P.l1) && (AirRefueling_Platform_B.dl_k > 0.0))) {
    /* '<S18>:1:3' */
    /* '<S18>:1:4' */
    AirRefueling_Platform_B.flag1 = 1.0;
    /* '<S18>:1:5' */
    rtb_l1out = AirRefueling_Platform_P.l1;
    /* '<S18>:1:6' */
    rtb_dl1out = 0.0;
    /* '<S18>:1:7' */
    AirRefueling_Platform_B.ddl1out = 0.0;
} else {
    /* '<S18>:1:9' */
    AirRefueling_Platform_B.flag1 = 0.0;
    /* '<S18>:1:10' */
    rtb_l1out = AirRefueling_Platform_B.Integrator1_o;
    /* '<S18>:1:11' */
    rtb_dl1out = AirRefueling_Platform_B.dl_k;
    /* '<S18>:1:12' */
    AirRefueling_Platform_B.ddl1out = AirRefueling_Platform_B.Saturation;
}
/* {E!d608}End of MATLAB Function: '<S16>/MATLAB Function1' */

/* {S!d610}MATLAB Function: '<S23>/MATLAB Function5' incorporates:
 *  Constant: '<S10>/length2'
 *  Derivative: '<S23>/Derivative'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Orientation of the Links1/MATLAB Function5': '<S39>:1' */
/* '<S39>:1:9' */
/* '<S39>:1:8' */
memset(&rtb_vr[0], 0, 30U * sizeof(real_T));
/* '<S39>:1:9' */
rtb_vr[0] = (AirRefueling_Platform_B.Integrator[0] - rtb_dl1out * AirRefueling_Platform_B.n[0]) - rtb_l1out * rtb_Derivative[0];
rtb_vr[1] = (AirRefueling_Platform_B.Integrator[1] - rtb_dl1out * AirRefueling_Platform_B.n[1]) - rtb_l1out * rtb_Derivative[1];
rtb_vr[2] = (AirRefueling_Platform_B.Integrator[2] - rtb_dl1out * AirRefueling_Platform_B.n[2]) - rtb_l1out * rtb_Derivative[2];
/* '<S39>:1:10' */
for (i = 0; i < 9; i++) {
    /* '<S39>:1:10' */
    /* '<S39>:1:11' */
    n_tmp = (i + 1) * 3;
    rtb_vr[n_tmp] = rtb_vr[3 * i] - rtb_Derivative[n_tmp] * AirRefueling_Platform_l0;
    rtb_vr[n_tmp + 1] = rtb_vr[3 * i + 1] - rtb_Derivative[n_tmp + 1] * AirRefueling_Platform_l0;
    rtb_vr[n_tmp + 2] = rtb_vr[3 * i + 2] - rtb_Derivative[n_tmp + 2] * AirRefueling_Platform_l0;
}
/* '<S39>:1:13' */
/* '<S39>:1:15' */
for (i = 0; i < 30; i++) {
    AirRefueling_Platform_B.p[i] = 0.0;
    rtb_vr[i] -= AirRefueling_Platform_P.length2_Value[i];
}
/* '<S39>:1:16' */
AirRefueling_Platform_B.p[0] = 0.0 - rtb_l1out * AirRefueling_Platform_B.n[0];
AirRefueling_Platform_B.p[1] = 0.0 - rtb_l1out * AirRefueling_Platform_B.n[1];
AirRefueling_Platform_B.p[2] = 0.0 - rtb_l1out * AirRefueling_Platform_B.n[2];
/* '<S39>:1:17' */
for (i = 0; i < 9; i++) {
    /* '<S39>:1:17' */
    /* '<S39>:1:18' */
    n_tmp = (i + 1) * 3;
    AirRefueling_Platform_B.p[n_tmp] = AirRefueling_Platform_B.p[3 * i] - AirRefueling_Platform_B.n[n_tmp] * AirRefueling_Platform_l0;
    n_tmp = (i + 1) * 3 + 1;
    AirRefueling_Platform_B.p[n_tmp] = AirRefueling_Platform_B.p[3 * i + 1] - AirRefueling_Platform_B.n[n_tmp] * AirRefueling_Platform_l0;
    n_tmp = (i + 1) * 3 + 2;
    AirRefueling_Platform_B.p[n_tmp] = AirRefueling_Platform_B.p[3 * i + 2] - AirRefueling_Platform_B.n[n_tmp] * AirRefueling_Platform_l0;
}
/* {E!d610}End of MATLAB Function: '<S23>/MATLAB Function5' */
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxInit_real_T", ["&X", "2"], 1, 34, 27))>;
/* {S!d612}MATLAB Function: '<S1>/MATLAB Function' */
/* '<S39>:1:20' */
/* MATLAB Function 'Hose-Drogue System/MATLAB Function': '<S12>:1' */
/* '<S12>:1:45' */
/* '<S12>:1:29' */
/* '<S12>:1:30' */
/* '<S12>:1:31' */
/* '<S12>:1:36' */
X->size[0] = 1;
X->size[1] = 0;
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxInit_real_T", ["&Y", "2"], 1, 34, 28))>;
/* {S!d614}MATLAB Function: '<S1>/MATLAB Function' */
/* '<S12>:1:37' */
Y->size[0] = 1;
Y->size[1] = 0;
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxInit_real_T", ["&Z", "2"], 1, 34, 29))>;
/* {S!d616}MATLAB Function: '<S1>/MATLAB Function' */
/* '<S12>:1:38' */
Z->size[0] = 1;
Z->size[1] = 0;
/* '<S12>:1:43' */
for (i = 0; i < 100; i++) {
    /* '<S12>:1:43' */
    rtb_u2rhoV2 = (real_T)i * 0.01;
    /* '<S12>:1:40' */
    /* '<S12>:1:44' */
    for (idx = 0; idx < 10; idx++) {
        /* '<S12>:1:44' */
        /* '<S12>:1:45' */
        Nik_u[idx] = %<(SLibCGCallSubFcn("AirRefueling_Platf_BaseFunction", ["(real_T)idx + 1.0", "4.0", "rtb_u2rhoV2", "e"], 1, 34, 2))>;
    }
    /* '<S12>:1:48' */
    idx = X->size[1];
    n_tmp = X->size[0] * X->size[1];
    X->size[1] = idx + 1;
    %<(SLibCGCallSubFcn("AirRef_emxEnsureCapacity_real_T", ["X", "n_tmp"], 1, 34, 24))>;
    pY_idx_1 = 0.0;
    for (n_tmp = 0; n_tmp < 10; n_tmp++) {
        pY_idx_1 += AirRefueling_Platform_B.p[3 * n_tmp] * Nik_u[n_tmp];
    }
    X->data[idx] = pY_idx_1;
    /* '<S12>:1:49' */
    idx = Y->size[1];
    n_tmp = Y->size[0] * Y->size[1];
    Y->size[1] = idx + 1;
    %<(SLibCGCallSubFcn("AirRef_emxEnsureCapacity_real_T", ["Y", "n_tmp"], 1, 34, 25))>;
    pY_idx_1 = 0.0;
    for (n_tmp = 0; n_tmp < 10; n_tmp++) {
        pY_idx_1 += AirRefueling_Platform_B.p[3 * n_tmp + 1] * Nik_u[n_tmp];
    }
    Y->data[idx] = pY_idx_1;
    /* '<S12>:1:50' */
    idx = Z->size[1];
    n_tmp = Z->size[0] * Z->size[1];
    Z->size[1] = idx + 1;
    %<(SLibCGCallSubFcn("AirRef_emxEnsureCapacity_real_T", ["Z", "n_tmp"], 1, 34, 26))>;
    pY_idx_1 = 0.0;
    for (n_tmp = 0; n_tmp < 10; n_tmp++) {
        pY_idx_1 += AirRefueling_Platform_B.p[3 * n_tmp + 2] * Nik_u[n_tmp];
    }
    Z->data[idx] = pY_idx_1;
}
/* '<S12>:1:53' */
memset(&P_link20[0], 0, 60U * sizeof(real_T));
/* '<S12>:1:54' */
rtb_u2rhoV2 = 1.0;
rtb_Fy = (real_T)X->size[1] / 20.0;
idx = (int32_T)(((rtb_Fy - 1.0) + 100.0) / rtb_Fy);
/* '<S12>:1:55' */
for (i = 0; i < idx; i++) {
    /* '<S12>:1:55' */
    pY_idx_1 = (real_T)i * rtb_Fy + 1.0;
    /* '<S12>:1:56' */
    n_tmp = 3 * ((int32_T)rtb_u2rhoV2 - 1);
    P_link20[n_tmp] = X->data[(int32_T)pY_idx_1 - 1];
    P_link20[n_tmp + 1] = Y->data[(int32_T)pY_idx_1 - 1];
    P_link20[n_tmp + 2] = Z->data[(int32_T)pY_idx_1 - 1];
    /* '<S12>:1:57' */
    rtb_u2rhoV2++;
}
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxFree_real_T", ["&Z"], 1, 34, 32))>;
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxFree_real_T", ["&Y"], 1, 34, 31))>;
%<(SLibCGCallSubFcn("AirRefueling_Pla_emxFree_real_T", ["&X"], 1, 34, 30))>;
/* {S!d618}MATLAB Function: '<S1>/MATLAB Function' */
/* '<S12>:1:60' */
/* '<S12>:1:62' */
memcpy(&rtb_P_hose_dr[0], &P_link20[0], 60U * sizeof(real_T));
rtb_P_hose_dr[60] = AirRefueling_Platform_B.Memory2[0];
/* {S!d620}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  MATLAB Function: '<Root>/SimToUE'
 *  SignalConversion generated from: '<S4>/ SFunction '
 */
rtb_InterpretedMATLABFunction[3] = rtb_Sum[0];
/* {S!d622}MATLAB Function: '<S1>/MATLAB Function' */
rtb_P_hose_dr[61] = AirRefueling_Platform_B.Memory2[1];
/* {S!d624}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  MATLAB Function: '<Root>/SimToUE'
 *  SignalConversion generated from: '<S4>/ SFunction '
 */
rtb_InterpretedMATLABFunction[4] = rtb_Sum[1];
/* {S!d626}MATLAB Function: '<S1>/MATLAB Function' */
rtb_P_hose_dr[62] = AirRefueling_Platform_B.Memory2[2];
/* {S!d628}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  MATLAB Function: '<Root>/SimToUE'
 *  SignalConversion generated from: '<S4>/ SFunction '
 */
rtb_InterpretedMATLABFunction[5] = rtb_Sum[2];
/* {S!d630}MATLAB Function: '<Root>/SimToUE' */
/* MATLAB Function 'SimToUE': '<S4>:1' */
/* '<S4>:1:54' */
/* '<S4>:1:11' */
/* '<S4>:1:16' */
/* '<S4>:1:22' */
/* '<S4>:1:23' */
memset(&VrAngle[0], 0, 66U * sizeof(real_T));
memset(&VrPos[0], 0, 66U * sizeof(real_T));
/* '<S4>:1:27' */
/* '<S4>:1:28' */
/* '<S4>:1:29' */
/* '<S4>:1:35' */
/* '<S4>:1:36' */
/* '<S4>:1:52' */
/* '<S4>:1:33' */
rtb_y[0] = 0.0;
rtb_y[2] = 0.0;
rtb_y[4] = -1.0;
for (idx = 0; idx < 21; idx++) {
    /* '<S4>:1:33' */
    if (idx + 1 == 1) {
        /* '<S4>:1:34' */
        /* '<S4>:1:35' */
        /* '<S4>:1:36' */
        rtb_jxi = 0.0;
        rtb_Fy = rtb_P_hose_dr[0];
        rtb_u2rhoV2 = 0.0;
        pY_idx_1 = rtb_P_hose_dr[1];
        pX_idx_2 = 0.0;
        pY_idx_2 = rtb_P_hose_dr[2];
    } else if (idx + 1 == 21) {
        /* '<S4>:1:38' */
        /* '<S4>:1:39' */
        rtb_jxi = rtb_P_hose_dr[57];
        rtb_u2rhoV2 = rtb_P_hose_dr[58];
        pX_idx_2 = rtb_P_hose_dr[59];
        /* '<S4>:1:40' */
        rtb_Fy = rtb_P_hose_dr[57] - 0.70932901763958689;
        pY_idx_1 = rtb_P_hose_dr[58];
        pY_idx_2 = rtb_P_hose_dr[59] + 0.099689692217694886;
    } else {
        /* '<S4>:1:42' */
        n_tmp = (idx + 1) * 3;
        /* '<S4>:1:43' */
        rtb_jxi = rtb_P_hose_dr[n_tmp - 6];
        rtb_Fy = rtb_P_hose_dr[n_tmp - 3];
        rtb_u2rhoV2 = rtb_P_hose_dr[n_tmp - 5];
        pY_idx_1 = rtb_P_hose_dr[n_tmp - 2];
        pX_idx_2 = rtb_P_hose_dr[n_tmp - 4];
        pY_idx_2 = rtb_P_hose_dr[n_tmp - 1];
    }
    /* '<S4>:1:46' */
    /* '<S4>:1:49' */
    /* '<S4>:1:52' */
    /* '<S4>:1:54' */
    pZ_idx_0 = (rtb_jxi + rtb_Fy) / 2.0;
    rtb_jxi = rtb_Fy - rtb_jxi;
    rtb_y[1] = rtb_jxi;
    rtb_Fy = rtb_jxi;
    pZ_idx_1 = (rtb_u2rhoV2 + pY_idx_1) / 2.0;
    rtb_jxi = pY_idx_1 - rtb_u2rhoV2;
    rtb_y[3] = rtb_jxi;
    pY_idx_1 = rtb_jxi;
    rtb_jxi = pY_idx_2 - pX_idx_2;
    rtb_y[5] = rtb_jxi;
    p = true;
    for (i = 0; i < 6; i++) {
        rtb_u2rhoV2 = rtb_y[i];
        if (p && ((!rtIsInf(rtb_u2rhoV2)) && (!rtIsNaN(rtb_u2rhoV2)))) {
        } else {
            p = false;
        }
    }
    if (p) {
        %<(SLibCGCallSubFcn("AirRefueling_Platform_svd", ["rtb_y", "rtb_WhiteNoise", "rtb_Product2_i", "V"], 1, 34, 3))>;
        rtb_u2rhoV2 = fabs(rtb_Product2_i[0]);
        if ((!rtIsInf(rtb_u2rhoV2)) && (!rtIsNaN(rtb_u2rhoV2)) && (!(rtb_u2rhoV2 <= 2.2250738585072014E-308))) {
            frexp(rtb_u2rhoV2, &CkSum);
        }
    }
    /* '<S4>:1:61' */
    /* '<S4>:1:62' */
    /* '<S4>:1:65' */
    n_tmp = (idx + 1) * 3 - 3;
    VrAngle[n_tmp] = asin(pY_idx_1 / sqrt((rtb_Fy * rtb_Fy + pY_idx_1 * pY_idx_1) + rtb_jxi * rtb_jxi));
    VrAngle[n_tmp + 1] = 3.1415926535897931 - atan(rtb_jxi / rtb_Fy);
    VrAngle[n_tmp + 2] = 0.0;
    /* '<S4>:1:67' */
    n_tmp = (idx + 1) * 3 - 3;
    VrPos[n_tmp] = pZ_idx_0;
    VrPos[n_tmp + 1] = pZ_idx_1;
    VrPos[n_tmp + 2] = (pX_idx_2 + pY_idx_2) / 2.0 + -1.0;
}
/* '<S4>:1:70' */
/* '<S4>:1:73' */
/* '<S4>:1:74' */
VrPos[63] = rtb_InterpretedMATLABFunction[3];
VrPos[64] = rtb_InterpretedMATLABFunction[4];
VrPos[65] = rtb_InterpretedMATLABFunction[5];
/* '<S4>:1:77' */
/* '<S4>:1:78' */
VrAngle[63] = 0.0;
AirRefueling_Platform_B.Pos_dr2tx[0] = VrPos[60];
VrAngle[64] = 0.1156;
AirRefueling_Platform_B.Pos_dr2tx[1] = VrPos[61];
VrAngle[65] = 0.0;
AirRefueling_Platform_B.Pos_dr2tx[2] = VrPos[62] + 0.04;
/* '<S4>:1:79' */
/* '<S4>:1:80' */
/* '<S4>:1:82' */
/* '<S4>:1:84' */
/* '<S4>:1:85' */
/* '<S4>:1:86' */
/* '<S4>:1:87' */
for (i = 0; i < 60; i++) {
    AirRefueling_Platform_B.y_c[i] = VrPos[i];
    AirRefueling_Platform_B.y_c[i + 60] = VrAngle[i];
}
AirRefueling_Platform_B.y_c[120] = AirRefueling_Platform_B.Pos_dr2tx[0];
AirRefueling_Platform_B.y_c[123] = VrAngle[57];
AirRefueling_Platform_B.y_c[126] = rtb_InterpretedMATLABFunction[3];
AirRefueling_Platform_B.y_c[129] = 0.0;
AirRefueling_Platform_B.y_c[121] = AirRefueling_Platform_B.Pos_dr2tx[1];
AirRefueling_Platform_B.y_c[124] = VrAngle[58];
AirRefueling_Platform_B.y_c[127] = rtb_InterpretedMATLABFunction[4];
AirRefueling_Platform_B.y_c[130] = 0.1156;
AirRefueling_Platform_B.y_c[122] = AirRefueling_Platform_B.Pos_dr2tx[2];
AirRefueling_Platform_B.y_c[125] = VrAngle[59];
AirRefueling_Platform_B.y_c[128] = rtb_InterpretedMATLABFunction[5];
AirRefueling_Platform_B.y_c[131] = 0.0;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B14)
    /* {S!d632}Scope: '<S7>/Scope38' */
%<tlcOutputsFcnOfS43B14>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B15)
    /* {S!d634}Scope: '<S7>/Scope40' */
%<tlcOutputsFcnOfS43B15>\
%endif
    /* {S!d636}DataTypeConversion: '<S158>/Data Type Conversion3' incorporates:
 *  Constant: '<S158>/checksum'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.checksum_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d638}DataTypeConversion: '<S158>/Data Type Conversion3' */
    AirRefueling_Platform_B.DataTypeConversion3_i[0] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d640}DataTypeConversion: '<S158>/Data Type Conversion3' incorporates:
 *  Constant: '<S158>/CopterID'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.CopterID_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d642}DataTypeConversion: '<S158>/Data Type Conversion3' */
    AirRefueling_Platform_B.DataTypeConversion3_i[1] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d648}ManualSwitch: '<S7>/FaultSwitch' */
    if (AirRefueling_Platform_P.FaultSwitch_CurrentSetting == 1) {
        /* {S!d644}ManualSwitch: '<S7>/FaultSwitch' incorporates:
 *  Constant: '<S7>/DisableFault'
 */
        AirRefueling_Platform_B.FaultSwitch = AirRefueling_Platform_P.DisableFault_Value;
    } else {
        /* {S!d646}ManualSwitch: '<S7>/FaultSwitch' incorporates:
 *  Constant: '<S7>/EnableFault'
 */
        AirRefueling_Platform_B.FaultSwitch = AirRefueling_Platform_P.EnableFault_Value;
    }
    /* {E!d648}End of ManualSwitch: '<S7>/FaultSwitch' */

    /* {S!d654}MultiPortSwitch: '<S7>/Index Vector' */
    if ((int32_T)AirRefueling_Platform_B.FaultSwitch == 0) {
        /* {S!d650}MultiPortSwitch: '<S7>/Index Vector' incorporates:
 *  Constant: '<S7>/inSILIntsCMD'
 */
        for (i = 0; i < 8; i++) {
            AirRefueling_Platform_B.IndexVector[i] = AirRefueling_Platform_P.inSILIntsCMD_Value[i];
        }
    } else {
        /* {S!d652}MultiPortSwitch: '<S7>/Index Vector' incorporates:
 *  Constant: '<S7>/inSILIntsCMD1'
 */
        for (i = 0; i < 8; i++) {
            AirRefueling_Platform_B.IndexVector[i] = AirRefueling_Platform_P.inSILIntsCMD1_Value[i];
        }
    }
    /* {E!d654}End of MultiPortSwitch: '<S7>/Index Vector' */
}
/* {S!d660}MultiPortSwitch: '<S7>/Index Vector1' */
if ((int32_T)AirRefueling_Platform_B.FaultSwitch == 0) {
    /* {S!d656}MultiPortSwitch: '<S7>/Index Vector1' incorporates:
 *  Constant: '<S7>/inSILFloatsCMD3'
 *  DataTypeConversion: '<S7>/Pos of tanker'
 *  DataTypeConversion: '<S7>/Pos of tanker1'
 */
    AirRefueling_Platform_B.IndexVector1[0] = (real32_T)AirRefueling_Platform_B.y_c[120];
    AirRefueling_Platform_B.IndexVector1[3] = (real32_T)AirRefueling_Platform_B.y_c[123];
    AirRefueling_Platform_B.IndexVector1[1] = (real32_T)AirRefueling_Platform_B.y_c[121];
    AirRefueling_Platform_B.IndexVector1[4] = (real32_T)AirRefueling_Platform_B.y_c[124];
    AirRefueling_Platform_B.IndexVector1[2] = (real32_T)AirRefueling_Platform_B.y_c[122];
    AirRefueling_Platform_B.IndexVector1[5] = (real32_T)AirRefueling_Platform_B.y_c[125];
    for (i = 0; i < 14; i++) {
        AirRefueling_Platform_B.IndexVector1[i + 6] = AirRefueling_Platform_P.inSILFloatsCMD3_Value[i];
    }
} else {
    /* {S!d658}MultiPortSwitch: '<S7>/Index Vector1' incorporates:
 *  Constant: '<S7>/inSILFloatsCMD1'
 */
    memcpy(&AirRefueling_Platform_B.IndexVector1[0], &AirRefueling_Platform_P.inSILFloatsCMD1_Value[0], 20U * sizeof(real32_T));
}
/* {E!d660}End of MultiPortSwitch: '<S7>/Index Vector1' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B25)
    /* {S!d662}S-Function (any2byte): '<S158>/PayLoad' */
%<tlcOutputsFcnOfS43B25>\
%endif
    /* {S!d664}DataTypeConversion: '<S155>/Data Type Conversion5' incorporates:
 *  Constant: '<S155>/Constant7'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant7_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d666}DataTypeConversion: '<S155>/Data Type Conversion5' */
    AirRefueling_Platform_B.DataTypeConversion5_p = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
}
for (i = 0; i < 60; i++) {
    /* {S!d668}DataTypeConversion: '<S155>/Data Type Conversion2' */
    AirRefueling_Platform_B.DataTypeConversion2[i] = (real32_T)AirRefueling_Platform_B.y_c[i];
    /* {S!d670}DataTypeConversion: '<S155>/Data Type Conversion3' */
    AirRefueling_Platform_B.DataTypeConversion3[i] = (real32_T)AirRefueling_Platform_B.y_c[i + 60];
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    for (i = 0; i < 60; i++) {
        /* {S!d672}Saturate: '<S155>/Saturation' incorporates:
 *  Constant: '<S7>/Vehicle 3D scales'
 */
        rtb_u2rhoV2 = AirRefueling_Platform_P.Vehicle3Dscales_Value[i];
        if (rtb_u2rhoV2 > AirRefueling_Platform_P.Saturation_UpperSat_i) {
            rtb_u2rhoV2 = AirRefueling_Platform_P.Saturation_UpperSat_i;
        } else {
            if (rtb_u2rhoV2 < AirRefueling_Platform_P.Saturation_LowerSat_g) {
                rtb_u2rhoV2 = AirRefueling_Platform_P.Saturation_LowerSat_g;
            }
        }
        /* {E!d672}End of Saturate: '<S155>/Saturation' */

        /* {S!d674}DataTypeConversion: '<S155>/Data Type Conversion4' incorporates:
 *  Gain: '<S155>/Gain'
 */
        pY_idx_1 = floor(AirRefueling_Platform_P.Gain_Gain_a * rtb_u2rhoV2);
        if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
            pY_idx_1 = 0.0;
        } else {
            pY_idx_1 = fmod(pY_idx_1, 65536.0);
        }
        /* {S!d676}DataTypeConversion: '<S155>/Data Type Conversion4' */
        AirRefueling_Platform_B.DataTypeConversion4_g[i] = (uint16_T)(pY_idx_1 < 0.0 ? (int32_T)(uint16_T)-(int16_T)(uint16_T)-pY_idx_1 : (int32_T)(uint16_T)pY_idx_1);
    }
%if !WHITE_SPACE(tlcOutputsFcnOfS43B30)
    /* {S!d678}S-Function (any2byte): '<S155>/PayLoad' incorporates:
 *  Constant: '<S7>/Vehicle IDs from 1 to 1'
 *  Constant: '<S7>/VehicleType from 1 to 4'
 */
%<tlcOutputsFcnOfS43B30>\
%endif
    /* {S!d680}DataTypeConversion: '<S157>/Data Type Conversion' incorporates:
 *  Constant: '<S157>/Constant7'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant7_Value_a);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d682}DataTypeConversion: '<S157>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_h[0] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d684}DataTypeConversion: '<S157>/Data Type Conversion' incorporates:
 *  Constant: '<S7>/Constant2'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant2_Value_m);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d686}DataTypeConversion: '<S157>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_h[1] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d688}DataTypeConversion: '<S157>/Data Type Conversion' incorporates:
 *  Constant: '<S7>/ID3'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.ID3_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d690}DataTypeConversion: '<S157>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_h[2] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
}
/* {S!d692}DataTypeConversion: '<S157>/Data Type Conversion1' incorporates:
 *  Constant: '<S157>/PWMs'
 *  Constant: '<S7>/Constant3'
 */
AirRefueling_Platform_B.DataTypeConversion1[0] = (real32_T)AirRefueling_Platform_P.PWMs_Value;
for (i = 0; i < 6; i++) {
    AirRefueling_Platform_B.DataTypeConversion1[i + 1] = (real32_T)AirRefueling_Platform_B.y_c[i + 126];
}
AirRefueling_Platform_B.DataTypeConversion1[7] = (real32_T)AirRefueling_Platform_P.Constant3_Value_d[0];
AirRefueling_Platform_B.DataTypeConversion1[8] = (real32_T)AirRefueling_Platform_P.Constant3_Value_d[1];
AirRefueling_Platform_B.DataTypeConversion1[9] = (real32_T)AirRefueling_Platform_P.Constant3_Value_d[2];
/* {E!d692}End of DataTypeConversion: '<S157>/Data Type Conversion1' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B36)
    /* {S!d694}S-Function (any2byte): '<S157>/PayLoad' */
%<tlcOutputsFcnOfS43B36>\
%endif
    /* {S!d696}DataTypeConversion: '<S156>/Data Type Conversion' incorporates:
 *  Constant: '<S156>/Constant7'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant7_Value_c);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d698}DataTypeConversion: '<S156>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_m[0] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d700}DataTypeConversion: '<S156>/Data Type Conversion' incorporates:
 *  Constant: '<S7>/Constant21'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant21_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d702}DataTypeConversion: '<S156>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_m[1] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d704}DataTypeConversion: '<S156>/Data Type Conversion' incorporates:
 *  Constant: '<S7>/ID'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.ID_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d706}DataTypeConversion: '<S156>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion_m[2] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
}
/* {S!d708}DataTypeConversion: '<S156>/Data Type Conversion1' incorporates:
 *  Constant: '<S156>/PWMs'
 *  Constant: '<S7>/Constant22'
 */
AirRefueling_Platform_B.DataTypeConversion1_j[0] = (real32_T)AirRefueling_Platform_P.PWMs_Value_i;
for (i = 0; i < 6; i++) {
    AirRefueling_Platform_B.DataTypeConversion1_j[i + 1] = (real32_T)AirRefueling_Platform_B.y_c[i + 120];
}
AirRefueling_Platform_B.DataTypeConversion1_j[7] = (real32_T)AirRefueling_Platform_P.Constant22_Value[0];
AirRefueling_Platform_B.DataTypeConversion1_j[8] = (real32_T)AirRefueling_Platform_P.Constant22_Value[1];
AirRefueling_Platform_B.DataTypeConversion1_j[9] = (real32_T)AirRefueling_Platform_P.Constant22_Value[2];
/* {E!d708}End of DataTypeConversion: '<S156>/Data Type Conversion1' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B42)
    /* {S!d710}S-Function (any2byte): '<S156>/PayLoad' */
%<tlcOutputsFcnOfS43B42>\
%endif
    /* {S!d712}DataTypeConversion: '<S161>/Data Type Conversion' incorporates:
 *  Constant: '<S161>/TargetType'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.TargetType_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d714}DataTypeConversion: '<S161>/Data Type Conversion' */
    AirRefueling_Platform_B.DataTypeConversion = pY_idx_1 < 0.0 ? (uint32_T)-(int32_T)(uint32_T)-pY_idx_1 : (uint32_T)pY_idx_1;
    /* {S!d716}DataTypeConversion: '<S161>/Data Type Conversion1' incorporates:
 *  Constant: '<S161>/len'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.len_Value);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d718}DataTypeConversion: '<S161>/Data Type Conversion1' */
    AirRefueling_Platform_B.DataTypeConversion1_m = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
%if !WHITE_SPACE(tlcOutputsFcnOfS43B45)
    /* {S!d720}S-Function (any2byte): '<S161>/Package Head' */
%<tlcOutputsFcnOfS43B45>\
%endif
    /* {S!d722}DataTypeConversion: '<S161>/Data Type Conversion2' incorporates:
 *  Constant: '<S7>/Constant7'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant7_Value_h);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d724}SignalConversion generated from: '<S161>/PayLoad' incorporates:
 *  DataTypeConversion: '<S161>/Data Type Conversion2'
 */
    AirRefueling_Platform_B.TmpSignalConversionAtPayLoadInp[0] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    /* {S!d726}DataTypeConversion: '<S161>/Data Type Conversion3' incorporates:
 *  Constant: '<S7>/Type 3 (Quadcopter), default model (F450)'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Type3QuadcopterdefaultmodelF450);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d728}SignalConversion generated from: '<S161>/PayLoad' incorporates:
 *  DataTypeConversion: '<S161>/Data Type Conversion3'
 */
    AirRefueling_Platform_B.TmpSignalConversionAtPayLoadInp[1] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
}
/* {S!d730}Clock: '<S159>/Clock' */
AirRefueling_Platform_B.Clock = rtb_jxi_tmp;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d732}DataTypeConversion: '<S161>/Data Type Conversion5' incorporates:
 *  Constant: '<S159>/Constant1'
 *  Constant: '<S159>/Constant3'
 *  Constant: '<S159>/Constant4'
 *  Constant: '<S159>/MotorPWMs1'
 *  Constant: '<S7>/Constant1'
 *  Constant: '<S7>/Constant8'
 *  Constant: '<S7>/offset5'
 */
    AirRefueling_Platform_B.DataTypeConversion5[0] = (real32_T)AirRefueling_Platform_P.Constant8_Value[0];
    AirRefueling_Platform_B.DataTypeConversion5[3] = (real32_T)AirRefueling_Platform_P.offset5_Value[0];
    AirRefueling_Platform_B.DataTypeConversion5[6] = (real32_T)AirRefueling_Platform_P.Constant1_Value_g[0];
    AirRefueling_Platform_B.DataTypeConversion5[1] = (real32_T)AirRefueling_Platform_P.Constant8_Value[1];
    AirRefueling_Platform_B.DataTypeConversion5[4] = (real32_T)AirRefueling_Platform_P.offset5_Value[1];
    AirRefueling_Platform_B.DataTypeConversion5[7] = (real32_T)AirRefueling_Platform_P.Constant1_Value_g[1];
    AirRefueling_Platform_B.DataTypeConversion5[2] = (real32_T)AirRefueling_Platform_P.Constant8_Value[2];
    AirRefueling_Platform_B.DataTypeConversion5[5] = (real32_T)AirRefueling_Platform_P.offset5_Value[2];
    AirRefueling_Platform_B.DataTypeConversion5[8] = (real32_T)AirRefueling_Platform_P.Constant1_Value_g[2];
    AirRefueling_Platform_B.DataTypeConversion5[9] = (real32_T)AirRefueling_Platform_P.Constant1_Value_c[0];
    AirRefueling_Platform_B.DataTypeConversion5[10] = (real32_T)AirRefueling_Platform_P.Constant1_Value_c[1];
    AirRefueling_Platform_B.DataTypeConversion5[11] = (real32_T)AirRefueling_Platform_P.Constant1_Value_c[2];
    AirRefueling_Platform_B.DataTypeConversion5[12] = (real32_T)AirRefueling_Platform_P.Constant1_Value_c[3];
    for (i = 0; i < 8; i++) {
        AirRefueling_Platform_B.DataTypeConversion5[i + 13] = (real32_T)AirRefueling_Platform_P.MotorPWMs1_Value[i];
    }
    AirRefueling_Platform_B.DataTypeConversion5[21] = (real32_T)AirRefueling_Platform_P.Constant3_Value_g[0];
    AirRefueling_Platform_B.DataTypeConversion5[24] = (real32_T)AirRefueling_Platform_P.Constant4_Value[0];
    AirRefueling_Platform_B.DataTypeConversion5[22] = (real32_T)AirRefueling_Platform_P.Constant3_Value_g[1];
    AirRefueling_Platform_B.DataTypeConversion5[25] = (real32_T)AirRefueling_Platform_P.Constant4_Value[1];
    AirRefueling_Platform_B.DataTypeConversion5[23] = (real32_T)AirRefueling_Platform_P.Constant3_Value_g[2];
    AirRefueling_Platform_B.DataTypeConversion5[26] = (real32_T)AirRefueling_Platform_P.Constant4_Value[2];
    /* {E!d732}End of DataTypeConversion: '<S161>/Data Type Conversion5' */
%if !WHITE_SPACE(tlcOutputsFcnOfS43B57)

    /* {S!d734}S-Function (any2byte): '<S161>/PayLoad' incorporates:
 *  Constant: '<S159>/Constant5'
 *  Constant: '<S161>/reserve'
 */
%<tlcOutputsFcnOfS43B57>\
%endif
    for (i = 0; i < 8; i++) {
        /* {S!d736}SignalConversion generated from: '<S7>/UDP Send1' */
        AirRefueling_Platform_B.TmpSignalConversionAtUDPSend1In[i] = AirRefueling_Platform_B.PackageHead[i];
    }
    /* {S!d738}SignalConversion generated from: '<S7>/UDP Send1' */
    memcpy(&AirRefueling_Platform_B.TmpSignalConversionAtUDPSend1In[8], &AirRefueling_Platform_B.PayLoad_k[0], 192U * sizeof(uint8_T));
    /* {S!d740}DataTypeConversion: '<S160>/Data Type Conversion4' incorporates:
 *  Constant: '<S160>/Constant7'
 */
    pY_idx_1 = floor(AirRefueling_Platform_P.Constant7_Value_ak);
    if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
        pY_idx_1 = 0.0;
    } else {
        pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
    }
    /* {S!d742}DataTypeConversion: '<S160>/Data Type Conversion4' */
    AirRefueling_Platform_B.DataTypeConversion4 = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    for (i = 0; i < 25; i++) {
        /* {S!d744}DataTypeConversion: '<S160>/Data Type Conversion' incorporates:
 *  Constant: '<S7>/Constant9'
 */
        pY_idx_1 = floor(AirRefueling_Platform_P.Constant9_Value[i]);
        if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
            pY_idx_1 = 0.0;
        } else {
            pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
        }
        /* {S!d746}DataTypeConversion: '<S160>/Data Type Conversion' */
        AirRefueling_Platform_B.DataTypeConversion_c[i] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
        /* {S!d748}DataTypeConversion: '<S160>/Data Type Conversion1' incorporates:
 *  Constant: '<S7>/Constant10'
 */
        pY_idx_1 = floor(AirRefueling_Platform_P.Constant10_Value[i]);
        if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
            pY_idx_1 = 0.0;
        } else {
            pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
        }
        /* {S!d750}DataTypeConversion: '<S160>/Data Type Conversion1' */
        AirRefueling_Platform_B.DataTypeConversion1_a[i] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
        /* {S!d752}DataTypeConversion: '<S160>/Data Type Conversion2' incorporates:
 *  Constant: '<S7>/Constant11'
 */
        pY_idx_1 = floor(AirRefueling_Platform_P.Constant11_Value[i]);
        if (rtIsNaN(pY_idx_1) || rtIsInf(pY_idx_1)) {
            pY_idx_1 = 0.0;
        } else {
            pY_idx_1 = fmod(pY_idx_1, 4.294967296E+9);
        }
        /* {S!d754}DataTypeConversion: '<S160>/Data Type Conversion2' */
        AirRefueling_Platform_B.DataTypeConversion2_b[i] = pY_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pY_idx_1 : (int32_T)(uint32_T)pY_idx_1;
    }
%if !WHITE_SPACE(tlcOutputsFcnOfS43B62)
    /* {S!d756}S-Function (any2byte): '<S160>/PayLoad' */
%<tlcOutputsFcnOfS43B62>\
%endif
    /* {S!d762}ManualSwitch: '<S1>/Manual Switch2' */
    if (AirRefueling_Platform_P.ManualSwitch2_CurrentSetting == 1) {
        /* {S!d758}ManualSwitch: '<S1>/Manual Switch2' */
        AirRefueling_Platform_B.ManualSwitch2 = AirRefueling_Platform_B.Memory2[0];
    } else {
        /* {S!d760}ManualSwitch: '<S1>/Manual Switch2' incorporates:
 *  Constant: '<S1>/k3'
 */
        AirRefueling_Platform_B.ManualSwitch2 = AirRefueling_Platform_P.k3_Value;
    }
    /* {E!d762}End of ManualSwitch: '<S1>/Manual Switch2' */

    /* {S!d768}ManualSwitch: '<S1>/Manual Switch1' */
    if (AirRefueling_Platform_P.ManualSwitch1_CurrentSetting == 1) {
        /* {S!d764}ManualSwitch: '<S1>/Manual Switch1' */
        AirRefueling_Platform_B.ManualSwitch1 = AirRefueling_Platform_B.Memory2[1];
    } else {
        /* {S!d766}ManualSwitch: '<S1>/Manual Switch1' incorporates:
 *  Constant: '<S1>/k4'
 */
        AirRefueling_Platform_B.ManualSwitch1 = AirRefueling_Platform_P.k4_Value;
    }
    /* {E!d768}End of ManualSwitch: '<S1>/Manual Switch1' */
}
/* {S!d770}Gain: '<S8>/Gain4' incorporates:
 *  Constant: '<S8>/Px_fl_rc'
 *  Sum: '<S8>/Sum'
 */
pY_idx_1 = ((AirRefueling_Platform_B.ManualSwitch2 - rtb_Sum[0]) - AirRefueling_Platform_P.d_f_rc[0]) * AirRefueling_Platform_P.Gain4_Gain;
/* {S!d772}Gain: '<S8>/Gain1' incorporates:
 *  Constant: '<S8>/Py_fl_rc'
 *  Sum: '<S8>/Sum1'
 */
pY_idx_2 = ((AirRefueling_Platform_B.ManualSwitch1 - rtb_Sum[1]) - AirRefueling_Platform_P.d_f_rc[1]) * AirRefueling_Platform_P.Gain1_Gain_a;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d778}ManualSwitch: '<S1>/Manual Switch' */
    if (AirRefueling_Platform_P.ManualSwitch_CurrentSetting == 1) {
        /* {S!d774}ManualSwitch: '<S1>/Manual Switch' */
        AirRefueling_Platform_B.ManualSwitch = AirRefueling_Platform_B.Memory2[2];
    } else {
        /* {S!d776}ManualSwitch: '<S1>/Manual Switch' incorporates:
 *  Constant: '<S1>/k5'
 */
        AirRefueling_Platform_B.ManualSwitch = AirRefueling_Platform_P.k5_Value;
    }
    /* {E!d778}End of ManualSwitch: '<S1>/Manual Switch' */
}
/* {S!d780}Gain: '<S8>/Gain2' incorporates:
 *  Constant: '<S8>/Pz_fl_rc1'
 *  Sum: '<S8>/Sum2'
 */
pX_idx_2 = ((AirRefueling_Platform_B.ManualSwitch - rtb_Sum[2]) - AirRefueling_Platform_P.d_f_rc[2]) * AirRefueling_Platform_P.Gain2_Gain;
/* {S!d782}MATLAB Function: '<S8>/Bow Wave Effect Function' */
/* MATLAB Function 'Hose-Drogue System/Bow Wave Effect/Bow Wave Effect Function': '<S14>:1' */
/* '<S14>:1:2' */
/* '<S14>:1:3' */
/* '<S14>:1:4' */
/* '<S14>:1:7' */
/* '<S14>:1:8' */
/* '<S14>:1:12' */
/* '<S14>:1:13' */
/* '<S14>:1:17' */
/* '<S14>:1:18' */
if (pY_idx_1 > 5.6493) {
    /* '<S14>:1:22' */
    /* '<S14>:1:23' */
    rtb_u2rhoV2 = 0.0;
} else if (pY_idx_1 > 3.0893) {
    /* '<S14>:1:24' */
    /* '<S14>:1:25' */
    rtb_u2rhoV2 = (1.0 - (pY_idx_1 - 3.887) * (pY_idx_1 - 3.887) * 0.322) * 91.617 * exp(-(pY_idx_2 * pY_idx_2) / 2.7359) * exp(pX_idx_2 / 2.4939);
} else {
    /* '<S14>:1:27' */
    rtb_Fy = -(pY_idx_2 * pY_idx_2);
    rtb_u2rhoV2 = (1.0 - (pY_idx_1 - 3.887) * (pY_idx_1 - 3.887) * 0.322) * 91.617 * exp(rtb_Fy / 2.7359) * exp(pX_idx_2 / 2.4939) + (1.0 - 0.3237 * pY_idx_1) * 309.7709 * exp(rtb_Fy / 0.3851) * exp(pX_idx_2 / 1.1471);
}
if (pY_idx_1 > 4.8031) {
    /* '<S14>:1:31' */
    /* '<S14>:1:32' */
    rtb_Fy = 0.0;
} else {
    /* '<S14>:1:34' */
    rtb_Fy = (1.0 - 0.2082 * pY_idx_1) * 223.321 * (exp(-(pY_idx_2 * pY_idx_2) / 0.8102) * pY_idx_2) * exp(pX_idx_2 / 0.6555);
}
if (pY_idx_1 > 4.6275) {
    /* '<S14>:1:37' */
    /* '<S14>:1:38' */
    pY_idx_1 = 0.0;
} else {
    /* '<S14>:1:40' */
    pY_idx_1 = (1.0 - 0.2141 * pY_idx_1) * -173.2021 * exp(-(pY_idx_2 * pY_idx_2) / 0.5697) * exp(pX_idx_2 / 0.7038);
}
/* {E!d782}End of MATLAB Function: '<S8>/Bow Wave Effect Function' */

/* {S!d784}Gain: '<S8>/Gain6' */
AirRefueling_Platform_B.Gain6 = AirRefueling_Platform_P.Gain6_Gain * rtb_u2rhoV2;
/* {S!d786}Gain: '<S8>/Gain3' */
AirRefueling_Platform_B.Gain3 = AirRefueling_Platform_P.Gain3_Gain * rtb_Fy;
/* {S!d788}Gain: '<S8>/Gain5' */
AirRefueling_Platform_B.Gain5 = AirRefueling_Platform_P.Gain5_Gain * pY_idx_1;
/* {S!d790}Gain: '<S1>/  ' */
AirRefueling_Platform_B.u[0] = AirRefueling_Platform_P._Gain * AirRefueling_Platform_B.Gain6;
AirRefueling_Platform_B.u[1] = AirRefueling_Platform_P._Gain * AirRefueling_Platform_B.Gain3;
AirRefueling_Platform_B.u[2] = AirRefueling_Platform_P._Gain * AirRefueling_Platform_B.Gain5;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d792}UnitConversion: '<S50>/Unit Conversion' incorporates:
 *  Constant: '<S2>/constant'
 */
    /* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
    rtb_UnitConversion = 3.280839895013123 * AirRefueling_Platform_P.altitude;
    /* {S!d794}DotProduct: '<S2>/Dot Product2' incorporates:
 *  Constant: '<S2>/constan1'
 */
    rtb_LimitFunction10ftto1000ft = AirRefueling_Platform_P.airSpeed * AirRefueling_Platform_P.airSpeed;
    /* {S!d800}Math: '<S2>/V2'
 *
 * About '<S2>/V2':
 *  Operator: sqrt
 */
    if (rtb_LimitFunction10ftto1000ft < 0.0) {
        /* {S!d796}Math: '<S2>/V2'
 *
 * About '<S2>/V2':
 *  Operator: sqrt
 */
        AirRefueling_Platform_B.V2 = -sqrt(fabs(rtb_LimitFunction10ftto1000ft));
    } else {
        /* {S!d798}Math: '<S2>/V2'
 *
 * About '<S2>/V2':
 *  Operator: sqrt
 */
        AirRefueling_Platform_B.V2 = sqrt(rtb_LimitFunction10ftto1000ft);
    }
    /* {E!d800}End of Math: '<S2>/V2' */

    /* {S!d802}UnitConversion: '<S56>/Unit Conversion' incorporates:
 *  UnitConversion generated from: '<S2>/Dryden Wind Turbulence Model  (Continuous (+q -r))'
 */
    /* Unit Conversion - from: ft/s to: m/s
 Expression: output = (0.3048*input) + (0) */
    /* Unit Conversion - from: m/s to: ft/s
 Expression: output = (3.28084*input) + (0) */
    AirRefueling_Platform_B.UnitConversion_d = 0.3048 * AirRefueling_Platform_B.V2 * 3.280839895013123;
    /* {S!d804}Saturate: '<S83>/Limit Function 10ft to 1000ft' */
    if (rtb_UnitConversion > AirRefueling_Platform_P.LimitFunction10ftto1000ft_Upper) {
        rtb_LimitFunction10ftto1000ft = AirRefueling_Platform_P.LimitFunction10ftto1000ft_Upper;
    } else if (rtb_UnitConversion < AirRefueling_Platform_P.LimitFunction10ftto1000ft_Lower) {
        rtb_LimitFunction10ftto1000ft = AirRefueling_Platform_P.LimitFunction10ftto1000ft_Lower;
    } else {
        rtb_LimitFunction10ftto1000ft = rtb_UnitConversion;
    }
    /* {E!d804}End of Saturate: '<S83>/Limit Function 10ft to 1000ft' */

    /* {S!d806}Fcn: '<S83>/Low Altitude Scale Length' */
    rtb_u2rhoV2 = 0.000823 * rtb_LimitFunction10ftto1000ft + 0.177;
    if (rtb_u2rhoV2 < 0.0) {
        rtb_u2rhoV2 = -%<(SLibCGCallSubFcn("rt_powd_snf", ["-rtb_u2rhoV2", "1.2"], 1, 34, 39))>;
    } else {
        rtb_u2rhoV2 = %<(SLibCGCallSubFcn("rt_powd_snf", ["rtb_u2rhoV2", "1.2"], 1, 34, 35))>;
    }
    rtb_LowAltitudeScaleLength = rtb_LimitFunction10ftto1000ft / rtb_u2rhoV2;
    /* {E!d806}End of Fcn: '<S83>/Low Altitude Scale Length' */

    /* {S!d808}UnitConversion: '<S85>/Unit Conversion' incorporates:
 *  Constant: '<S84>/Medium//High Altitude'
 */
    /* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
    rtb_UnitConversion_au = 3.280839895013123 * AirRefueling_Platform_P.DrydenWindTurbulenceModelContin;
    /* {S!d810}Saturate: '<S66>/Limit Height h<1000ft' */
    if (rtb_UnitConversion > AirRefueling_Platform_P.LimitHeighth1000ft_UpperSat) {
        rtb_u2rhoV2 = AirRefueling_Platform_P.LimitHeighth1000ft_UpperSat;
    } else if (rtb_UnitConversion < AirRefueling_Platform_P.LimitHeighth1000ft_LowerSat) {
        rtb_u2rhoV2 = AirRefueling_Platform_P.LimitHeighth1000ft_LowerSat;
    } else {
        rtb_u2rhoV2 = rtb_UnitConversion;
    }
    /* {E!d810}End of Saturate: '<S66>/Limit Height h<1000ft' */

    /* {S!d812}Fcn: '<S66>/Low Altitude Intensity' */
    rtb_u2rhoV2 = 0.000823 * rtb_u2rhoV2 + 0.177;
    /* {S!d814}UnitConversion: '<S57>/Unit Conversion' incorporates:
 *  Constant: '<S41>/Windspeed at 20ft (6m)'
 */
    /* Unit Conversion - from: m/s to: ft/s
 Expression: output = (3.28084*input) + (0) */
    rtb_Fy = 3.280839895013123 * AirRefueling_Platform_P.DrydenWindTurbulenceModelCon_el;
    /* {S!d816}Gain: '<S66>/sigma_wg ' */
    AirRefueling_Platform_B.sigma_wg = AirRefueling_Platform_P.sigma_wg_Gain * rtb_Fy;
    /* {S!d818}Fcn: '<S66>/Low Altitude Intensity' */
    if (rtb_u2rhoV2 < 0.0) {
        rtb_u2rhoV2 = -%<(SLibCGCallSubFcn("rt_powd_snf", ["-rtb_u2rhoV2", "0.4"], 1, 34, 40))>;
    } else {
        rtb_u2rhoV2 = %<(SLibCGCallSubFcn("rt_powd_snf", ["rtb_u2rhoV2", "0.4"], 1, 34, 36))>;
    }
    /* {S!d820}Product: '<S66>/sigma_ug, sigma_vg' incorporates:
 *  Fcn: '<S66>/Low Altitude Intensity'
 */
    AirRefueling_Platform_B.sigma_ugsigma_vg = 1.0 / rtb_u2rhoV2 * AirRefueling_Platform_B.sigma_wg;
    /* {S!d822}Interpolation_n-D: '<S65>/Medium//High Altitude Intensity' incorporates:
 *  Constant: '<S65>/Probability of  Exceedance'
 *  PreLookup: '<S65>/PreLook-Up Index Search  (altitude)'
 *  PreLookup: '<S65>/PreLook-Up Index Search  (prob of exceed)'
 */
    bpIndex[0] = plook_bincpa(rtb_UnitConversion, AirRefueling_Platform_P.PreLookUpIndexSearchaltitude_Br, 11U, &rtb_Fy, &AirRefueling_Platform_DW.PreLookUpIndexSearchaltitude_DW);
    bpIndex[1] = plook_bincpa(AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_e, AirRefueling_Platform_P.PreLookUpIndexSearchprobofexcee, 6U, &frac[1], &AirRefueling_Platform_DW.PreLookUpIndexSearchprobofexcee);
    frac[0] = rtb_Fy;
    /* {S!d824}Interpolation_n-D: '<S65>/Medium//High Altitude Intensity' */
    AirRefueling_Platform_B.MediumHighAltitudeIntensity = intrp2d_la_pw(bpIndex, frac, AirRefueling_Platform_P.MediumHighAltitudeIntensity_Tab, 12U, AirRefueling_Platform_P.MediumHighAltitudeIntensity_max);
    /* {S!d826}Sqrt: '<S58>/Sqrt1' incorporates:
 *  Constant: '<S58>/Constant1'
 */
    rtb_u2rhoV2 = sqrt(AirRefueling_Platform_P.WhiteNoise_Ts);
    /* {S!d828}Product: '<S58>/Divide' incorporates:
 *  Constant: '<S58>/Constant'
 *  Product: '<S58>/Product'
 *  RandomNumber: '<S58>/White Noise'
 *  Sqrt: '<S58>/Sqrt'
 */
    rtb_Divide[0] = sqrt(AirRefueling_Platform_P.WhiteNoise_pwr[0]) / rtb_u2rhoV2 * AirRefueling_Platform_DW.NextOutput[0];
    rtb_Divide[1] = sqrt(AirRefueling_Platform_P.WhiteNoise_pwr[1]) / rtb_u2rhoV2 * AirRefueling_Platform_DW.NextOutput[1];
    rtb_Divide[2] = sqrt(AirRefueling_Platform_P.WhiteNoise_pwr[2]) / rtb_u2rhoV2 * AirRefueling_Platform_DW.NextOutput[2];
    rtb_Divide[3] = sqrt(AirRefueling_Platform_P.WhiteNoise_pwr[3]) / rtb_u2rhoV2 * AirRefueling_Platform_DW.NextOutput[3];
    /* {S!d481}Outputs for Enabled SubSystem: '<S49>/Hugw(s)' incorporates:
 *  EnablePort: '<S62>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* {S!d834}Constant: '<S49>/Constant' */
        if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
            if (!AirRefueling_Platform_DW.Hugws_MODE) {
                /* {S!d830}InitializeConditions for Integrator: '<S62>/ug_p' */
                AirRefueling_Platform_X.ug_p_CSTATE[0] = AirRefueling_Platform_P.ug_p_IC;
                AirRefueling_Platform_X.ug_p_CSTATE[1] = AirRefueling_Platform_P.ug_p_IC;
                AirRefueling_Platform_DW.Hugws_MODE = true;
            }
        } else {
            if (AirRefueling_Platform_DW.Hugws_MODE) {
                /* {S!d832}Disable for Product: '<S62>/w1' incorporates:
 *  Outport: '<S62>/ugw'
 */
                AirRefueling_Platform_B.w1_c[0] = AirRefueling_Platform_P.ugw_Y0;
                AirRefueling_Platform_B.w1_c[1] = AirRefueling_Platform_P.ugw_Y0;
                AirRefueling_Platform_DW.Hugws_MODE = false;
            }
        }
    }
    /* {E!d481}End of Outputs for SubSystem: '<S49>/Hugw(s)' */
}
/* {S!d483}Outputs for Enabled SubSystem: '<S49>/Hugw(s)' incorporates:
 *  EnablePort: '<S62>/Enable'
 */
if (AirRefueling_Platform_DW.Hugws_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 24))>) {
        /* {S!d836}Product: '<S62>/Lug//V' */
        AirRefueling_Platform_B.LugV[0] = rtb_LowAltitudeScaleLength / AirRefueling_Platform_B.UnitConversion_d;
        AirRefueling_Platform_B.LugV[1] = rtb_UnitConversion_au / AirRefueling_Platform_B.UnitConversion_d;
        /* {S!d838}Product: '<S62>/Lug//V1' incorporates:
 *  Gain: '<S62>/(2//pi)'
 *  Sqrt: '<S62>/sqrt'
 */
        AirRefueling_Platform_B.LugV1_jz[0] = sqrt(AirRefueling_Platform_P.upi_Gain * AirRefueling_Platform_B.LugV[0]) * rtb_Divide[0];
        AirRefueling_Platform_B.LugV1_jz[1] = sqrt(AirRefueling_Platform_P.upi_Gain * AirRefueling_Platform_B.LugV[1]) * rtb_Divide[0];
    }
    /* {S!d840}Product: '<S62>/w' incorporates:
 *  Integrator: '<S62>/ug_p'
 *  Sum: '<S62>/Sum'
 */
    AirRefueling_Platform_B.w_a[0] = (AirRefueling_Platform_B.LugV1_jz[0] - AirRefueling_Platform_X.ug_p_CSTATE[0]) / AirRefueling_Platform_B.LugV[0];
    AirRefueling_Platform_B.w_a[1] = (AirRefueling_Platform_B.LugV1_jz[1] - AirRefueling_Platform_X.ug_p_CSTATE[1]) / AirRefueling_Platform_B.LugV[1];
    /* {S!d842}Product: '<S62>/w1' incorporates:
 *  Integrator: '<S62>/ug_p'
 */
    AirRefueling_Platform_B.w1_c[0] = AirRefueling_Platform_X.ug_p_CSTATE[0] * AirRefueling_Platform_B.sigma_ugsigma_vg;
    AirRefueling_Platform_B.w1_c[1] = AirRefueling_Platform_X.ug_p_CSTATE[1] * AirRefueling_Platform_B.MediumHighAltitudeIntensity;
}
/* {E!d483}End of Outputs for SubSystem: '<S49>/Hugw(s)' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d844}Gain: '<S55>/Lv' */
    rtb_Lv_idx_0 = AirRefueling_Platform_P.Lv_Gain * rtb_LowAltitudeScaleLength;
    rtb_Lv_idx_1 = AirRefueling_Platform_P.Lv_Gain * rtb_UnitConversion_au;
    /* {S!d485}Outputs for Enabled SubSystem: '<S49>/Hvgw(s)' incorporates:
 *  EnablePort: '<S63>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* {S!d856}Constant: '<S49>/Constant' */
        if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
            if (!AirRefueling_Platform_DW.Hvgws_MODE) {
                /* {S!d846}InitializeConditions for Integrator: '<S63>/vg_p1' */
                AirRefueling_Platform_X.vg_p1_CSTATE[0] = AirRefueling_Platform_P.vg_p1_IC;
                /* {S!d848}InitializeConditions for Integrator: '<S63>/vgw_p2' */
                AirRefueling_Platform_X.vgw_p2_CSTATE[0] = AirRefueling_Platform_P.vgw_p2_IC;
                /* {S!d850}InitializeConditions for Integrator: '<S63>/vg_p1' */
                AirRefueling_Platform_X.vg_p1_CSTATE[1] = AirRefueling_Platform_P.vg_p1_IC;
                /* {S!d852}InitializeConditions for Integrator: '<S63>/vgw_p2' */
                AirRefueling_Platform_X.vgw_p2_CSTATE[1] = AirRefueling_Platform_P.vgw_p2_IC;
                AirRefueling_Platform_DW.Hvgws_MODE = true;
            }
        } else {
            if (AirRefueling_Platform_DW.Hvgws_MODE) {
                /* {S!d854}Disable for Product: '<S63>/w 1' incorporates:
 *  Outport: '<S63>/vgw'
 */
                AirRefueling_Platform_B.w1[0] = AirRefueling_Platform_P.vgw_Y0;
                AirRefueling_Platform_B.w1[1] = AirRefueling_Platform_P.vgw_Y0;
                AirRefueling_Platform_DW.Hvgws_MODE = false;
            }
        }
    }
    /* {E!d485}End of Outputs for SubSystem: '<S49>/Hvgw(s)' */
}
/* {S!d487}Outputs for Enabled SubSystem: '<S49>/Hvgw(s)' incorporates:
 *  EnablePort: '<S63>/Enable'
 */
if (AirRefueling_Platform_DW.Hvgws_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 25))>) {
        /* {S!d858}Product: '<S63>/Lvg//V' */
        AirRefueling_Platform_B.LvgV[0] = rtb_Lv_idx_0 / AirRefueling_Platform_B.UnitConversion_d;
        /* {S!d860}Product: '<S63>/Lug//V1' incorporates:
 *  Gain: '<S63>/(1//pi)'
 *  Sqrt: '<S63>/sqrt'
 */
        AirRefueling_Platform_B.LugV1_j[0] = sqrt(AirRefueling_Platform_P.upi_Gain_a * AirRefueling_Platform_B.LvgV[0]) * rtb_Divide[1];
        /* {S!d862}Product: '<S63>/Lvg//V' */
        AirRefueling_Platform_B.LvgV[1] = rtb_Lv_idx_1 / AirRefueling_Platform_B.UnitConversion_d;
        /* {S!d864}Product: '<S63>/Lug//V1' incorporates:
 *  Gain: '<S63>/(1//pi)'
 *  Sqrt: '<S63>/sqrt'
 */
        AirRefueling_Platform_B.LugV1_j[1] = sqrt(AirRefueling_Platform_P.upi_Gain_a * AirRefueling_Platform_B.LvgV[1]) * rtb_Divide[1];
    }
    /* {S!d866}Product: '<S63>/w' incorporates:
 *  Integrator: '<S63>/vg_p1'
 *  Sum: '<S63>/Sum'
 */
    AirRefueling_Platform_B.w_m[0] = (AirRefueling_Platform_B.LugV1_j[0] - AirRefueling_Platform_X.vg_p1_CSTATE[0]) / AirRefueling_Platform_B.LvgV[0];
    /* {S!d868}UnitConversion: '<S123>/Unit Conversion' incorporates:
 *  Integrator: '<S63>/vgw_p2'
 */
    rtb_UnitConversion_n[0] = AirRefueling_Platform_X.vgw_p2_CSTATE[0];
    /* {S!d870}Product: '<S63>/w ' incorporates:
 *  Gain: '<S63>/sqrt(3)'
 *  Integrator: '<S63>/vg_p1'
 *  Product: '<S63>/Lvg//V '
 *  Sum: '<S63>/Sum1'
 */
    AirRefueling_Platform_B.w_g[0] = (AirRefueling_Platform_B.w_m[0] * AirRefueling_Platform_B.LvgV[0] * AirRefueling_Platform_P.sqrt3_Gain + (AirRefueling_Platform_X.vg_p1_CSTATE[0] - rtb_UnitConversion_n[0])) / AirRefueling_Platform_B.LvgV[0];
    /* {S!d872}Product: '<S63>/w' incorporates:
 *  Integrator: '<S63>/vg_p1'
 *  Sum: '<S63>/Sum'
 */
    AirRefueling_Platform_B.w_m[1] = (AirRefueling_Platform_B.LugV1_j[1] - AirRefueling_Platform_X.vg_p1_CSTATE[1]) / AirRefueling_Platform_B.LvgV[1];
    /* {S!d874}UnitConversion: '<S123>/Unit Conversion' incorporates:
 *  Integrator: '<S63>/vgw_p2'
 */
    rtb_UnitConversion_n[1] = AirRefueling_Platform_X.vgw_p2_CSTATE[1];
    /* {S!d876}Product: '<S63>/w ' incorporates:
 *  Gain: '<S63>/sqrt(3)'
 *  Integrator: '<S63>/vg_p1'
 *  Product: '<S63>/Lvg//V '
 *  Sum: '<S63>/Sum1'
 */
    AirRefueling_Platform_B.w_g[1] = (AirRefueling_Platform_B.w_m[1] * AirRefueling_Platform_B.LvgV[1] * AirRefueling_Platform_P.sqrt3_Gain + (AirRefueling_Platform_X.vg_p1_CSTATE[1] - rtb_UnitConversion_n[1])) / AirRefueling_Platform_B.LvgV[1];
    /* {S!d878}Product: '<S63>/w 1' */
    AirRefueling_Platform_B.w1[0] = AirRefueling_Platform_B.sigma_ugsigma_vg * rtb_UnitConversion_n[0];
    AirRefueling_Platform_B.w1[1] = AirRefueling_Platform_B.MediumHighAltitudeIntensity * rtb_UnitConversion_n[1];
}
/* {E!d487}End of Outputs for SubSystem: '<S49>/Hvgw(s)' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d880}Gain: '<S55>/Lw' */
    rtb_Lw_idx_0 = AirRefueling_Platform_P.Lw_Gain * rtb_LimitFunction10ftto1000ft;
    rtb_Lw_idx_1 = AirRefueling_Platform_P.Lw_Gain * rtb_UnitConversion_au;
    /* {S!d489}Outputs for Enabled SubSystem: '<S49>/Hwgw(s)' incorporates:
 *  EnablePort: '<S64>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* {S!d892}Constant: '<S49>/Constant' */
        if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
            if (!AirRefueling_Platform_DW.Hwgws_MODE) {
                /* {S!d882}InitializeConditions for Integrator: '<S64>/wg_p1' */
                AirRefueling_Platform_X.wg_p1_CSTATE[0] = AirRefueling_Platform_P.wg_p1_IC;
                /* {S!d884}InitializeConditions for Integrator: '<S64>/wg_p2' */
                AirRefueling_Platform_X.wg_p2_CSTATE[0] = AirRefueling_Platform_P.wg_p2_IC;
                /* {S!d886}InitializeConditions for Integrator: '<S64>/wg_p1' */
                AirRefueling_Platform_X.wg_p1_CSTATE[1] = AirRefueling_Platform_P.wg_p1_IC;
                /* {S!d888}InitializeConditions for Integrator: '<S64>/wg_p2' */
                AirRefueling_Platform_X.wg_p2_CSTATE[1] = AirRefueling_Platform_P.wg_p2_IC;
                AirRefueling_Platform_DW.Hwgws_MODE = true;
            }
        } else {
            if (AirRefueling_Platform_DW.Hwgws_MODE) {
                /* {S!d890}Disable for Product: '<S64>/Lwg//V 1' incorporates:
 *  Outport: '<S64>/wgw'
 */
                AirRefueling_Platform_B.LwgV1[0] = AirRefueling_Platform_P.wgw_Y0;
                AirRefueling_Platform_B.LwgV1[1] = AirRefueling_Platform_P.wgw_Y0;
                AirRefueling_Platform_DW.Hwgws_MODE = false;
            }
        }
    }
    /* {E!d489}End of Outputs for SubSystem: '<S49>/Hwgw(s)' */
}
/* {S!d491}Outputs for Enabled SubSystem: '<S49>/Hwgw(s)' incorporates:
 *  EnablePort: '<S64>/Enable'
 */
if (AirRefueling_Platform_DW.Hwgws_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 26))>) {
        /* {S!d894}Product: '<S64>/Lwg//V' */
        AirRefueling_Platform_B.LwgV[0] = rtb_Lw_idx_0 / AirRefueling_Platform_B.UnitConversion_d;
        /* {S!d896}Product: '<S64>/Lug//V1' incorporates:
 *  Gain: '<S64>/1//pi'
 *  Sqrt: '<S64>/sqrt1'
 */
        AirRefueling_Platform_B.LugV1[0] = sqrt(AirRefueling_Platform_P.upi_Gain_p * AirRefueling_Platform_B.LwgV[0]) * rtb_Divide[2];
        /* {S!d898}Product: '<S64>/Lwg//V' */
        AirRefueling_Platform_B.LwgV[1] = rtb_Lw_idx_1 / AirRefueling_Platform_B.UnitConversion_d;
        /* {S!d900}Product: '<S64>/Lug//V1' incorporates:
 *  Gain: '<S64>/1//pi'
 *  Sqrt: '<S64>/sqrt1'
 */
        AirRefueling_Platform_B.LugV1[1] = sqrt(AirRefueling_Platform_P.upi_Gain_p * AirRefueling_Platform_B.LwgV[1]) * rtb_Divide[2];
        /* {S!d902}Sqrt: '<S64>/sqrt' incorporates:
 *  Constant: '<S64>/Constant'
 */
        AirRefueling_Platform_B.sqrt_l = sqrt(AirRefueling_Platform_P.Constant_Value);
    }
    /* {S!d904}UnitConversion: '<S123>/Unit Conversion' incorporates:
 *  Integrator: '<S64>/wg_p1'
 */
    rtb_UnitConversion_n[0] = AirRefueling_Platform_X.wg_p1_CSTATE[0];
    /* {S!d906}Product: '<S64>/w' incorporates:
 *  Sum: '<S64>/Sum'
 */
    AirRefueling_Platform_B.w[0] = (AirRefueling_Platform_B.LugV1[0] - rtb_UnitConversion_n[0]) / AirRefueling_Platform_B.LwgV[0];
    /* {S!d908}UnitConversion: '<S123>/Unit Conversion' incorporates:
 *  Integrator: '<S64>/wg_p1'
 */
    rtb_UnitConversion_n[1] = AirRefueling_Platform_X.wg_p1_CSTATE[1];
    /* {S!d910}Product: '<S64>/w' incorporates:
 *  Sum: '<S64>/Sum'
 */
    AirRefueling_Platform_B.w[1] = (AirRefueling_Platform_B.LugV1[1] - rtb_UnitConversion_n[1]) / AirRefueling_Platform_B.LwgV[1];
    /* {S!d912}Product: '<S64>/Lwg//V 1' incorporates:
 *  Integrator: '<S64>/wg_p2'
 */
    AirRefueling_Platform_B.LwgV1[0] = AirRefueling_Platform_B.sigma_wg * AirRefueling_Platform_X.wg_p2_CSTATE[0];
    AirRefueling_Platform_B.LwgV1[1] = AirRefueling_Platform_B.MediumHighAltitudeIntensity * AirRefueling_Platform_X.wg_p2_CSTATE[1];
    /* {S!d914}Product: '<S64>/w ' incorporates:
 *  Integrator: '<S64>/wg_p2'
 *  Product: '<S64>/Lwg//V '
 *  Sum: '<S64>/Sum1'
 */
    AirRefueling_Platform_B.w_j[0] = (AirRefueling_Platform_B.w[0] * AirRefueling_Platform_B.sqrt_l * AirRefueling_Platform_B.LwgV[0] + (rtb_UnitConversion_n[0] - AirRefueling_Platform_X.wg_p2_CSTATE[0])) / AirRefueling_Platform_B.LwgV[0];
    AirRefueling_Platform_B.w_j[1] = (AirRefueling_Platform_B.w[1] * AirRefueling_Platform_B.sqrt_l * AirRefueling_Platform_B.LwgV[1] + (rtb_UnitConversion_n[1] - AirRefueling_Platform_X.wg_p2_CSTATE[1])) / AirRefueling_Platform_B.LwgV[1];
}
/* {E!d491}End of Outputs for SubSystem: '<S49>/Hwgw(s)' */

/* {S!d916}Trigonometry: '<S105>/sincos' incorporates:
 *  SignalConversion generated from: '<S105>/sincos'
 *  Trigonometry: '<S106>/sincos'
 */
rtb_Sum_m2[0] = cos(rtb_Sum_ah[2]);
rtb_jxi = sin(rtb_Sum_ah[2]);
rtb_Sum_m2[1] = cos(rtb_Sum_ah[1]);
rtb_u2rhoV2 = sin(rtb_Sum_ah[1]);
rtb_Lv_idx_0 = cos(rtb_Sum_ah[0]);
rtb_Lv_idx_1 = sin(rtb_Sum_ah[0]);
/* {S!d918}Fcn: '<S105>/Fcn11' */
AirRefueling_Platform_B.VectorConcatenate[0] = rtb_Sum_m2[1] * rtb_Sum_m2[0];
/* {S!d920}Fcn: '<S105>/Fcn21' incorporates:
 *  Fcn: '<S105>/Fcn22'
 *  Trigonometry: '<S105>/sincos'
 */
rtb_LowAltitudeScaleLength = rtb_Lv_idx_1 * rtb_u2rhoV2;
AirRefueling_Platform_B.VectorConcatenate[1] = rtb_LowAltitudeScaleLength * rtb_Sum_m2[0] - rtb_Lv_idx_0 * rtb_jxi;
/* {S!d922}Fcn: '<S105>/Fcn31' incorporates:
 *  Fcn: '<S105>/Fcn32'
 *  Trigonometry: '<S105>/sincos'
 */
rtb_UnitConversion_au = rtb_Lv_idx_0 * rtb_u2rhoV2;
AirRefueling_Platform_B.VectorConcatenate[2] = rtb_UnitConversion_au * rtb_Sum_m2[0] + rtb_Lv_idx_1 * rtb_jxi;
/* {S!d924}Fcn: '<S105>/Fcn12' */
AirRefueling_Platform_B.VectorConcatenate[3] = rtb_Sum_m2[1] * rtb_jxi;
/* {S!d926}Fcn: '<S105>/Fcn22' incorporates:
 *  Trigonometry: '<S105>/sincos'
 */
AirRefueling_Platform_B.VectorConcatenate[4] = rtb_LowAltitudeScaleLength * rtb_jxi + rtb_Lv_idx_0 * rtb_Sum_m2[0];
/* {S!d928}Fcn: '<S105>/Fcn32' incorporates:
 *  Trigonometry: '<S105>/sincos'
 */
AirRefueling_Platform_B.VectorConcatenate[5] = rtb_UnitConversion_au * rtb_jxi - rtb_Lv_idx_1 * rtb_Sum_m2[0];
/* {S!d930}Fcn: '<S105>/Fcn13' */
AirRefueling_Platform_B.VectorConcatenate[6] = -rtb_u2rhoV2;
/* {S!d932}Fcn: '<S105>/Fcn23' incorporates:
 *  Trigonometry: '<S105>/sincos'
 */
AirRefueling_Platform_B.VectorConcatenate[7] = rtb_Lv_idx_1 * rtb_Sum_m2[1];
/* {S!d934}Fcn: '<S105>/Fcn33' incorporates:
 *  Trigonometry: '<S105>/sincos'
 */
AirRefueling_Platform_B.VectorConcatenate[8] = rtb_Lv_idx_0 * rtb_Sum_m2[1];
/* {S!d936}RelationalOperator: '<S40>/Gust Start' incorporates:
 *  Constant: '<S40>/Gust start time'
 *  Derivative: '<S23>/Derivative'
 */
rtb_u2rhoV2 = (rtb_jxi_tmp >= AirRefueling_Platform_P.DiscreteWindGustModelOn_t_0);
/* {S!d938}Logic: '<S40>/Logical Operator2' incorporates:
 *  Constant: '<S40>/Constant'
 */
AirRefueling_Platform_B.LogicalOperator2 = ((rtb_u2rhoV2 != 0.0) && (AirRefueling_Platform_P.DiscreteWindGustModelOn_Gx != 0.0));
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d940}UnitConversion: '<S47>/Unit Conversion' incorporates:
 *  Constant: '<S41>/Wind direction'
 */
    /* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
    rtb_UnitConversion_f = 0.017453292519943295 * AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_c;
    /* {S!d970}If: '<S54>/if Height < Max low altitude  elseif Height > Min isotropic altitude ' */
    if (%<(LibIsMajorTimeStep())>) {
        if (rtb_UnitConversion <= 1000.0) {
            rtAction = 0;
        } else if (rtb_UnitConversion >= 2000.0) {
            rtAction = 1;
        } else {
            rtAction = 2;
        }
        AirRefueling_Platform_DW.ifHeightMaxlowaltitudeelseifHei = rtAction;
    } else {
        rtAction = AirRefueling_Platform_DW.ifHeightMaxlowaltitudeelseifHei;
    }
    switch (rtAction) {
      case 0:
        /* {S!d493}Outputs for IfAction SubSystem: '<S54>/Low altitude  velocities' incorporates:
 *  ActionPort: '<S76>/Action Port'
 */
        /* {S!d942}SignalConversion generated from: '<S81>/Vector Concatenate' */
        rtb_Sum_m2[2] = AirRefueling_Platform_B.LwgV1[0];
        /* {S!d944}Trigonometry: '<S82>/Trigonometric Function' */
        rtb_LimitFunction10ftto1000ft = sin(rtb_UnitConversion_f);
        rtb_LowAltitudeScaleLength = cos(rtb_UnitConversion_f);
        /* {S!d946}Sum: '<S82>/Sum' incorporates:
 *  Product: '<S82>/Product1'
 *  Product: '<S82>/Product2'
 */
        rtb_Sum_m2[0] = AirRefueling_Platform_B.w1_c[0] * rtb_LowAltitudeScaleLength - rtb_LimitFunction10ftto1000ft * AirRefueling_Platform_B.w1[0];
        /* {S!d948}Sum: '<S82>/Sum1' incorporates:
 *  Product: '<S82>/Product1'
 *  Product: '<S82>/Product2'
 */
        rtb_Sum_m2[1] = AirRefueling_Platform_B.w1[0] * rtb_LowAltitudeScaleLength + rtb_LimitFunction10ftto1000ft * AirRefueling_Platform_B.w1_c[0];
        /* {S!d950}Reshape: '<S81>/Reshape1' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Concatenate: '<S81>/Vector Concatenate'
 *  Product: '<S81>/Product'
 */
        for (n_tmp = 0; n_tmp < 3; n_tmp++) {
            rtb_Gain1_d[n_tmp] = AirRefueling_Platform_B.VectorConcatenate[n_tmp + 6] * rtb_Sum_m2[2] + (AirRefueling_Platform_B.VectorConcatenate[n_tmp + 3] * rtb_Sum_m2[1] + AirRefueling_Platform_B.VectorConcatenate[n_tmp] * rtb_Sum_m2[0]);
        }
        /* {E!d950}End of Reshape: '<S81>/Reshape1' */
        /* {E!d493}End of Outputs for SubSystem: '<S54>/Low altitude  velocities' */
        break;
      case 1:
        /* {S!d495}Outputs for IfAction SubSystem: '<S54>/Medium//High  altitude velocities' incorporates:
 *  ActionPort: '<S77>/Action Port'
 */
        /* {S!d952}Gain: '<S77>/Gain' */
        rtb_Gain1_d[0] = AirRefueling_Platform_P.Gain_Gain_j * AirRefueling_Platform_B.w1_c[1];
        rtb_Gain1_d[1] = AirRefueling_Platform_P.Gain_Gain_j * AirRefueling_Platform_B.w1[1];
        rtb_Gain1_d[2] = AirRefueling_Platform_P.Gain_Gain_j * AirRefueling_Platform_B.LwgV1[1];
        /* {E!d495}End of Outputs for SubSystem: '<S54>/Medium//High  altitude velocities' */
        break;
      case 2:
        /* {S!d497}Outputs for IfAction SubSystem: '<S54>/Interpolate  velocities' incorporates:
 *  ActionPort: '<S75>/Action Port'
 */
        /* {S!d954}Trigonometry: '<S80>/Trigonometric Function' */
        rtb_LimitFunction10ftto1000ft = sin(rtb_UnitConversion_f);
        rtb_LowAltitudeScaleLength = cos(rtb_UnitConversion_f);
        /* {S!d956}Sum: '<S80>/Sum' incorporates:
 *  Product: '<S80>/Product1'
 *  Product: '<S80>/Product2'
 */
        rtb_Gain1_d[0] = AirRefueling_Platform_B.w1_c[0] * rtb_LowAltitudeScaleLength - rtb_LimitFunction10ftto1000ft * AirRefueling_Platform_B.w1[0];
        /* {S!d958}Sum: '<S80>/Sum1' incorporates:
 *  Product: '<S80>/Product1'
 *  Product: '<S80>/Product2'
 */
        rtb_Gain1_d[1] = AirRefueling_Platform_B.w1[0] * rtb_LowAltitudeScaleLength + rtb_LimitFunction10ftto1000ft * AirRefueling_Platform_B.w1_c[0];
        /* {S!d960}SignalConversion generated from: '<S79>/Vector Concatenate' */
        rtb_Gain1_d[2] = AirRefueling_Platform_B.LwgV1[0];
        /* {S!d962}Product: '<S79>/Product' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Concatenate: '<S79>/Vector Concatenate'
 */
        for (n_tmp = 0; n_tmp < 3; n_tmp++) {
            rtb_Sum_m2[n_tmp] = AirRefueling_Platform_B.VectorConcatenate[n_tmp + 6] * rtb_Gain1_d[2] + (AirRefueling_Platform_B.VectorConcatenate[n_tmp + 3] * rtb_Gain1_d[1] + AirRefueling_Platform_B.VectorConcatenate[n_tmp] * rtb_Gain1_d[0]);
        }
        /* {E!d962}End of Product: '<S79>/Product' */

        /* {S!d964}Sum: '<S75>/Sum1' incorporates:
 *  Constant: '<S75>/max_height_low'
 */
        rtb_LimitFunction10ftto1000ft = rtb_UnitConversion - AirRefueling_Platform_P.max_height_low_Value_i;
        /* {S!d966}Sum: '<S75>/Sum' incorporates:
 *  Constant: '<S75>/max_height_low'
 *  Constant: '<S75>/min_height_high'
 */
        rtb_LowAltitudeScaleLength = AirRefueling_Platform_P.min_height_high_Value_b - AirRefueling_Platform_P.max_height_low_Value_i;
        /* {S!d968}Sum: '<S75>/Sum3' incorporates:
 *  Product: '<S75>/Product1'
 *  Sum: '<S75>/Sum2'
 */
        rtb_Gain1_d[0] = (AirRefueling_Platform_B.w1_c[1] - rtb_Sum_m2[0]) * rtb_LimitFunction10ftto1000ft / rtb_LowAltitudeScaleLength + rtb_Sum_m2[0];
        rtb_Gain1_d[1] = (AirRefueling_Platform_B.w1[1] - rtb_Sum_m2[1]) * rtb_LimitFunction10ftto1000ft / rtb_LowAltitudeScaleLength + rtb_Sum_m2[1];
        rtb_Gain1_d[2] = (AirRefueling_Platform_B.LwgV1[1] - rtb_Sum_m2[2]) * rtb_LimitFunction10ftto1000ft / rtb_LowAltitudeScaleLength + rtb_Sum_m2[2];
        /* {E!d497}End of Outputs for SubSystem: '<S54>/Interpolate  velocities' */
        break;
    }
    /* {E!d970}End of If: '<S54>/if Height < Max low altitude  elseif Height > Min isotropic altitude ' */

    /* {S!d972}UnitConversion: '<S41>/Unit Conversion' */
    /* Unit Conversion - from: ft/s to: m/s
 Expression: output = (0.3048*input) + (0) */
    AirRefueling_Platform_B.UnitConversion_f[0] = 0.3048 * rtb_Gain1_d[0];
    AirRefueling_Platform_B.UnitConversion_f[1] = 0.3048 * rtb_Gain1_d[1];
    AirRefueling_Platform_B.UnitConversion_f[2] = 0.3048 * rtb_Gain1_d[2];
    /* {S!d974}SignalConversion generated from: '<S43>/Enable' */
    AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distancei = AirRefueling_Platform_B.LogicalOperator2;
    /* {S!d499}Outputs for Enabled SubSystem: '<S40>/Distance into gust (x)' incorporates:
 *  EnablePort: '<S43>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        if (AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distancei) {
            if (!AirRefueling_Platform_DW.Distanceintogustx_MODE) {
                /* {S!d976}InitializeConditions for Integrator: '<S43>/Distance into Gust (x) (Limited to gust length d)' */
                AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k = AirRefueling_Platform_P.DistanceintoGustxLimitedtogustl;
                AirRefueling_Platform_DW.Distanceintogustx_MODE = true;
            }
        } else {
            if (AirRefueling_Platform_DW.Distanceintogustx_MODE) {
                AirRefueling_Platform_DW.Distanceintogustx_MODE = false;
            }
        }
    }
    /* {E!d499}End of Outputs for SubSystem: '<S40>/Distance into gust (x)' */
}
/* {S!d501}Outputs for Enabled SubSystem: '<S40>/Distance into gust (x)' incorporates:
 *  EnablePort: '<S43>/Enable'
 */
if (AirRefueling_Platform_DW.Distanceintogustx_MODE) {
    /* {S!d502}Outputs for Enabled SubSystem: '<S40>/Distance into gust (x)' */
    /* {S!d978}Integrator: '<S43>/Distance into Gust (x) (Limited to gust length d)' */
    /* Limited  Integrator  */
    if (AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k >= AirRefueling_Platform_P.Distanceintogustx_d_m) {
        AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k = AirRefueling_Platform_P.Distanceintogustx_d_m;
    } else {
        if (AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k <= AirRefueling_Platform_P.DistanceintoGustxLimitedtogus_o) {
            AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k = AirRefueling_Platform_P.DistanceintoGustxLimitedtogus_o;
        }
    }
    /* {E!d502}End of Outputs for SubSystem: '<S40>/Distance into gust (x)' */

    /* {S!d980}Integrator: '<S43>/Distance into Gust (x) (Limited to gust length d)' */
    AirRefueling_Platform_B.DistanceintoGustxLimitedtogustl = AirRefueling_Platform_X.DistanceintoGustxLimitedtogus_k;
}
/* {E!d501}End of Outputs for SubSystem: '<S40>/Distance into gust (x)' */

/* {S!d982}Logic: '<S40>/Logical Operator1' incorporates:
 *  Constant: '<S40>/Constant1'
 */
AirRefueling_Platform_B.LogicalOperator1 = ((rtb_u2rhoV2 != 0.0) && (AirRefueling_Platform_P.DiscreteWindGustModelOn_Gy != 0.0));
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d984}SignalConversion generated from: '<S44>/Enable' */
    AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distanc_a = AirRefueling_Platform_B.LogicalOperator1;
}
/* {S!d505}Outputs for Enabled SubSystem: '<S40>/Distance into gust (y)' */
/* {S!d506}Outputs for Enabled SubSystem: '<S40>/Distance into gust (y)' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[20], "Output",0)
%if SLibCG_SystemFcnArgAccessed("AirRefuel_Distanceintogusty",20,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("AirRefuel_Distanceintogusty", ["%<_modelSS>", "AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distanc_a", "&AirRefueling_Platform_B.Distanceintogusty", "&AirRefueling_Platform_DW.Distanceintogusty", "&AirRefueling_Platform_P.Distanceintogusty", "&AirRefueling_Platform_X.Distanceintogusty", "AirRefueling_Platform_P.Distanceintogusty_d_m"], 20, 0, 6, 0, 6, 43)>\


%endif
/* {E!d506}End of Outputs for SubSystem: '<S40>/Distance into gust (y)' */
/* {E!d505}End of Outputs for SubSystem: '<S40>/Distance into gust (y)' */

/* {S!d986}Logic: '<S40>/Logical Operator3' incorporates:
 *  Constant: '<S40>/Constant2'
 */
AirRefueling_Platform_B.LogicalOperator3 = ((rtb_u2rhoV2 != 0.0) && (AirRefueling_Platform_P.DiscreteWindGustModelOn_Gz != 0.0));
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d988}SignalConversion generated from: '<S45>/Enable' */
    AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distanc_f = AirRefueling_Platform_B.LogicalOperator3;
}
/* {S!d509}Outputs for Enabled SubSystem: '<S40>/Distance into gust (z)' */
/* {S!d510}Outputs for Enabled SubSystem: '<S40>/Distance into gust (z)' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[20], "Output",0)
%if SLibCG_SystemFcnArgAccessed("AirRefuel_Distanceintogusty",20,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("AirRefuel_Distanceintogusty", ["%<_modelSS>", "AirRefueling_Platform_B.HiddenBuf_InsertedFor_Distanc_f", "&AirRefueling_Platform_B.Distanceintogustz", "&AirRefueling_Platform_DW.Distanceintogustz", "&AirRefueling_Platform_P.Distanceintogustz", "&AirRefueling_Platform_X.Distanceintogustz", "AirRefueling_Platform_P.Distanceintogustz_d_m"], 20, 1, 6, 0, 6, 43)>\


%endif
/* {E!d510}End of Outputs for SubSystem: '<S40>/Distance into gust (z)' */
/* {E!d509}End of Outputs for SubSystem: '<S40>/Distance into gust (z)' */

/* {S!d990}Sum: '<S2>/Sum' incorporates:
 *  Constant: '<S40>/2'
 *  Gain: '<S40>/Gust magnitude//2.0'
 *  Gain: '<S40>/pi//Gust length'
 *  Sum: '<S40>/Sum1'
 *  Trigonometry: '<S40>/cos(pi*x//dm)'
 */
AirRefueling_Platform_B.Sum_n[0] = (AirRefueling_Platform_P.u_Value - cos(3.1415926535897931 / AirRefueling_Platform_P.DiscreteWindGustModelOn_d_m[0] * AirRefueling_Platform_B.DistanceintoGustxLimitedtogustl)) * (AirRefueling_Platform_P.DiscreteWindGustModelOn_v_m[0] / 2.0) + AirRefueling_Platform_B.UnitConversion_f[0];
AirRefueling_Platform_B.Sum_n[1] = (AirRefueling_Platform_P.u_Value - cos(3.1415926535897931 / AirRefueling_Platform_P.DiscreteWindGustModelOn_d_m[1] * AirRefueling_Platform_B.Distanceintogusty.DistanceintoGustxLimitedtogustl)) * (AirRefueling_Platform_P.DiscreteWindGustModelOn_v_m[1] / 2.0) + AirRefueling_Platform_B.UnitConversion_f[1];
AirRefueling_Platform_B.Sum_n[2] = (AirRefueling_Platform_P.u_Value - cos(3.1415926535897931 / AirRefueling_Platform_P.DiscreteWindGustModelOn_d_m[2] * AirRefueling_Platform_B.Distanceintogustz.DistanceintoGustxLimitedtogustl)) * (AirRefueling_Platform_P.DiscreteWindGustModelOn_v_m[2] / 2.0) + AirRefueling_Platform_B.UnitConversion_f[2];
/* {S!d992}Gain: '<S1>/ ' incorporates:
 *  UnitConversion: '<S11>/Unit Conversion'
 */
/* Unit Conversion - from: ft to: m
 Expression: output = (0.3048*input) + (0) */
/* MATLAB Function 'Tanker System/  ': '<S152>:1' */
/* '<S152>:1:4' */
AirRefueling_Platform_B.u_n[0] = 0.3048 * AirRefueling_Platform_B.Sum_n[0] * AirRefueling_Platform_P._Gain_c;
AirRefueling_Platform_B.u_n[1] = 0.3048 * AirRefueling_Platform_B.Sum_n[1] * AirRefueling_Platform_P._Gain_c;
AirRefueling_Platform_B.u_n[2] = 0.3048 * AirRefueling_Platform_B.Sum_n[2] * AirRefueling_Platform_P._Gain_c;
/* {S!d994}MATLAB Function: '<S5>/  ' */
pZ_idx_0 = AirRefueling_Platform_B.Pos_dr2tx[2] * AirRefueling_Platform_B.Pos_dr2tx[2];
pX_idx_2 = sqrt((AirRefueling_Platform_B.Pos_dr2tx[1] - -20.0) * (AirRefueling_Platform_B.Pos_dr2tx[1] - -20.0) + pZ_idx_0);
rtb_jxi = -AirRefueling_Platform_B.Pos_dr2tx[0] / 120.0;
rtb_LowAltitudeScaleLength = sqrt(fabs(21.154437663412029 * rtb_jxi)) * 2.24;
rtb_LimitFunction10ftto1000ft_t = pX_idx_2 * pX_idx_2;
rtb_LimitFunction10ftto1000ft = 352.57396105686718 * pX_idx_2 / ((rtb_LimitFunction10ftto1000ft_t + rtb_LowAltitudeScaleLength * rtb_LowAltitudeScaleLength) * 6.2831853071795862) * (1.0 - exp(-rtb_LimitFunction10ftto1000ft_t / (84.617750653648116 * rtb_jxi)));
rtb_UnitConversion_au = atan(AirRefueling_Platform_B.Pos_dr2tx[2] / (AirRefueling_Platform_B.Pos_dr2tx[1] - -20.0));
rtb_LowAltitudeScaleLength = rtb_UnitConversion_au;
if (rtb_UnitConversion_au < 0.0) {
    rtb_LowAltitudeScaleLength = rtb_UnitConversion_au + 3.1415926535897931;
}
rtb_u2rhoV2 = sqrt((AirRefueling_Platform_B.Pos_dr2tx[1] - 20.0) * (AirRefueling_Platform_B.Pos_dr2tx[1] - 20.0) + pZ_idx_0);
pY_idx_1 = sqrt(fabs(21.154437663412029 * rtb_jxi)) * 2.24;
rtb_Fy = rtb_u2rhoV2 * rtb_u2rhoV2;
rtb_u2rhoV2 = 352.57396105686718 * rtb_u2rhoV2 / ((rtb_Fy + pY_idx_1 * pY_idx_1) * 6.2831853071795862) * (1.0 - exp(-rtb_Fy / (84.617750653648116 * rtb_jxi)));
rtb_Fy = atan(AirRefueling_Platform_B.Pos_dr2tx[2] / (-AirRefueling_Platform_B.Pos_dr2tx[1] + 20.0));
if (-AirRefueling_Platform_B.Pos_dr2tx[1] + 20.0 < 0.0) {
    rtb_Fy += 3.1415926535897931;
}
pY_idx_2 = AirRefueling_Platform_B.Pos_dr2tx[0] * AirRefueling_Platform_B.Pos_dr2tx[0];
pY_idx_1 = sqrt(pY_idx_2 + pZ_idx_0);
pZ_idx_0 = ((AirRefueling_Platform_B.Pos_dr2tx[1] - -15.707963267948966) / sqrt(((AirRefueling_Platform_B.Pos_dr2tx[1] - -15.707963267948966) * (AirRefueling_Platform_B.Pos_dr2tx[1] - -15.707963267948966) + pY_idx_2) + pZ_idx_0) + (-AirRefueling_Platform_B.Pos_dr2tx[1] + 15.707963267948966) / sqrt(((AirRefueling_Platform_B.Pos_dr2tx[1] - 15.707963267948966) * (AirRefueling_Platform_B.Pos_dr2tx[1] - 15.707963267948966) + pY_idx_2) + pZ_idx_0)) * 352.57396105686718 / 2.0 * 4.0 / 3.1415926535897931;
vVorW = 0.06 * pZ_idx_0;
pZ_idx_1 = sqrt(fabs(vVorW * rtb_jxi)) * 2.24;
pY_idx_2 = pY_idx_1 * pY_idx_1;
pY_idx_1 = pZ_idx_0 * pY_idx_1 / ((pY_idx_2 + pZ_idx_1 * pZ_idx_1) * 6.2831853071795862) * (1.0 - exp(-pY_idx_2 / (4.0 * vVorW * rtb_jxi)));
pY_idx_2 = atan(AirRefueling_Platform_B.Pos_dr2tx[2] / -AirRefueling_Platform_B.Pos_dr2tx[0]);
if (-AirRefueling_Platform_B.Pos_dr2tx[0] < 0.0) {
    pY_idx_2 += 3.1415926535897931;
}
vVorW = sqrt(fabs(0.70514792211373434 * rtb_jxi)) * 2.24;
pX_idx_2 = 11.752465368562239 * pX_idx_2 / ((rtb_LimitFunction10ftto1000ft_t + vVorW * vVorW) * 6.2831853071795862) * (1.0 - exp(-(pX_idx_2 * pX_idx_2) / (2.8205916884549374 * rtb_jxi)));
if (AirRefueling_Platform_B.Pos_dr2tx[1] - -20.0 < 0.0) {
    rtb_UnitConversion_au += 3.1415926535897931;
}
TVorT = (AirRefueling_Platform_B.Pos_dr2tx[2] - -1.27) * (AirRefueling_Platform_B.Pos_dr2tx[2] - -1.27);
pZ_idx_0 = sqrt((AirRefueling_Platform_B.Pos_dr2tx[1] - 6.515) * (AirRefueling_Platform_B.Pos_dr2tx[1] - 6.515) + TVorT);
pZ_idx_1 = sqrt(fabs(0.70514792211373434 * rtb_jxi)) * 2.24;
vVorW = pZ_idx_0 * pZ_idx_0;
pZ_idx_0 = 11.752465368562239 * pZ_idx_0 / ((vVorW + pZ_idx_1 * pZ_idx_1) * 6.2831853071795862) * (1.0 - exp(-vVorW / (2.8205916884549374 * rtb_jxi)));
vVorW = atan((AirRefueling_Platform_B.Pos_dr2tx[2] - -1.27) / (-AirRefueling_Platform_B.Pos_dr2tx[1] + 6.515));
if (-AirRefueling_Platform_B.Pos_dr2tx[1] + 6.515 < 0.0) {
    vVorW += 3.1415926535897931;
}
rtb_LimitFunction10ftto1000ft_t = (AirRefueling_Platform_B.Pos_dr2tx[0] - -12.44) * (AirRefueling_Platform_B.Pos_dr2tx[0] - -12.44);
pZ_idx_1 = sqrt(rtb_LimitFunction10ftto1000ft_t + TVorT);
TVorT = ((AirRefueling_Platform_B.Pos_dr2tx[1] - -5.1168690345343757) / sqrt((rtb_LimitFunction10ftto1000ft_t + (AirRefueling_Platform_B.Pos_dr2tx[1] - -5.1168690345343757) * (AirRefueling_Platform_B.Pos_dr2tx[1] - -5.1168690345343757)) + TVorT) + (-AirRefueling_Platform_B.Pos_dr2tx[1] + 5.1168690345343757) / sqrt((rtb_LimitFunction10ftto1000ft_t + (AirRefueling_Platform_B.Pos_dr2tx[1] - 5.1168690345343757) * (AirRefueling_Platform_B.Pos_dr2tx[1] - 5.1168690345343757)) + TVorT)) * 11.752465368562239 / 2.0 * 4.0 / 3.1415926535897931;
vVorT = 0.06 * TVorT;
rVorCoreT = sqrt(fabs(vVorT * rtb_jxi)) * 2.24;
rtb_LimitFunction10ftto1000ft_t = pZ_idx_1 * pZ_idx_1;
pZ_idx_1 = TVorT * pZ_idx_1 / ((rtb_LimitFunction10ftto1000ft_t + rVorCoreT * rVorCoreT) * 6.2831853071795862) * (1.0 - exp(-rtb_LimitFunction10ftto1000ft_t / (4.0 * vVorT * rtb_jxi)));
rtb_jxi = atan((AirRefueling_Platform_B.Pos_dr2tx[2] - -1.27) / (-AirRefueling_Platform_B.Pos_dr2tx[0] + -12.44));
if (-AirRefueling_Platform_B.Pos_dr2tx[0] + -12.44 < 0.0) {
    rtb_jxi += 3.1415926535897931;
}
AirRefueling_Platform_B.y[0] = pY_idx_1 * sin(pY_idx_2) + -pZ_idx_1 * sin(rtb_jxi);
AirRefueling_Platform_B.y[1] = ((-rtb_LimitFunction10ftto1000ft * sin(rtb_LowAltitudeScaleLength) + rtb_u2rhoV2 * sin(rtb_Fy)) + pX_idx_2 * sin(rtb_UnitConversion_au)) + -pZ_idx_0 * sin(vVorW);
AirRefueling_Platform_B.y[2] = ((((rtb_LimitFunction10ftto1000ft * cos(rtb_LowAltitudeScaleLength) + rtb_u2rhoV2 * cos(rtb_Fy)) + pY_idx_1 * cos(pY_idx_2)) + -pX_idx_2 * cos(rtb_UnitConversion_au)) + -pZ_idx_0 * cos(vVorW)) + -pZ_idx_1 * cos(rtb_jxi);
/* {E!d994}End of MATLAB Function: '<S5>/  ' */

/* {S!d996}MATLAB Function: '<S1>/Total Turbulence  ' incorporates:
 *  Gain: '<S1>/Gain'
 *  Sum: '<S1>/Sum'
 */
/* MATLAB Function 'Hose-Drogue System/Total Turbulence  ': '<S13>:1' */
/* '<S13>:1:4' */
/* '<S13>:1:5' */
/* '<S13>:1:6' */
/* '<S13>:1:7' */
/* '<S13>:1:8' */
/* '<S13>:1:10' */
/* '<S13>:1:11' */
/* '<S13>:1:12' */
/* '<S13>:1:17' */
/* '<S13>:1:19' */
/* '<S13>:1:20' */
/* '<S13>:1:21' */
/* '<S13>:1:24' */
rtb_Sum_m2[0] = (AirRefueling_Platform_P.Gain_Gain_i * AirRefueling_Platform_B.y[0] + AirRefueling_Platform_B.u_n[0]) * 28.957824000000009;
rtb_Sum_m2[1] = (AirRefueling_Platform_P.Gain_Gain_i * AirRefueling_Platform_B.y[1] + AirRefueling_Platform_B.u_n[1]) * 1066.881312 / 120.0;
rtb_Sum_m2[2] = (AirRefueling_Platform_P.Gain_Gain_i * AirRefueling_Platform_B.y[2] + AirRefueling_Platform_B.u_n[2]) * 1066.881312 / 120.0;
/* '<S13>:1:25' */
AirRefueling_Platform_B.y_g[0] = rtb_Sum_m2[0];
AirRefueling_Platform_B.y_g[3] = AirRefueling_Platform_B.u[0] + rtb_Sum_m2[0];
AirRefueling_Platform_B.y_g[1] = rtb_Sum_m2[1];
AirRefueling_Platform_B.y_g[4] = AirRefueling_Platform_B.u[1] + rtb_Sum_m2[1];
AirRefueling_Platform_B.y_g[2] = rtb_Sum_m2[2];
AirRefueling_Platform_B.y_g[5] = AirRefueling_Platform_B.u[2] + rtb_Sum_m2[2];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B95)
    /* {S!d998}Scope: '<S1>/Scope1' */
%<tlcOutputsFcnOfS43B95>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B96)
    /* {S!d1000}Scope: '<S1>/Scope10' */
%<tlcOutputsFcnOfS43B96>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B97)
    /* {S!d1002}Scope: '<S1>/Scope3' */
%<tlcOutputsFcnOfS43B97>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B98)
    /* {S!d1004}Scope: '<S1>/Scope4' */
%<tlcOutputsFcnOfS43B98>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B99)
    /* {S!d1006}Scope: '<S1>/Scope5' */
%<tlcOutputsFcnOfS43B99>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B100)
    /* {S!d1008}Scope: '<S1>/Scope6' */
%<tlcOutputsFcnOfS43B100>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B101)
    /* {S!d1010}Scope: '<S1>/Scope7' */
%<tlcOutputsFcnOfS43B101>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B102)
    /* {S!d1012}Scope: '<S1>/Scope8' */
%<tlcOutputsFcnOfS43B102>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B103)
    /* {S!d1014}Scope: '<S1>/Scope9' */
%<tlcOutputsFcnOfS43B103>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B104)
    /* {S!d1016}ToWorkspace: '<S1>/To Workspace2' */
%<tlcOutputsFcnOfS43B104>\
%endif
    /* {S!d1018}Sum: '<S9>/Sum5' incorporates:
 *  Constant: '<S9>/Constant6'
 *  Constant: '<S9>/drogue_delta_pos'
 *  Product: '<S9>/Product1'
 */
    AirRefueling_Platform_B.Sum5[0] = AirRefueling_Platform_P.Constant6_Value[0] * AirRefueling_Platform_B.Memory2[0] + AirRefueling_Platform_P.drogue_delta_pos_Value[0];
    AirRefueling_Platform_B.Sum5[1] = AirRefueling_Platform_P.Constant6_Value[1] * AirRefueling_Platform_B.Memory2[1] + AirRefueling_Platform_P.drogue_delta_pos_Value[1];
    AirRefueling_Platform_B.Sum5[2] = AirRefueling_Platform_P.Constant6_Value[2] * AirRefueling_Platform_B.Memory2[2] + AirRefueling_Platform_P.drogue_delta_pos_Value[2];
}
/* {S!d1020}Product: '<S9>/Product' incorporates:
 *  Constant: '<S9>/Constant'
 *  Constant: '<S9>/Constant2'
 *  Constant: '<S9>/Constant3'
 *  Sum: '<S9>/Sum2'
 *  Sum: '<S9>/Sum6'
 */
AirRefueling_Platform_B.Product[0] = ((rtb_Sum[0] + AirRefueling_Platform_P.Constant2_Value_i[0]) + AirRefueling_Platform_P.d_pr_rc[0]) * AirRefueling_Platform_P.Constant3_Value_m[0];
AirRefueling_Platform_B.Product[1] = ((rtb_Sum[1] + AirRefueling_Platform_P.Constant2_Value_i[1]) + AirRefueling_Platform_P.d_pr_rc[1]) * AirRefueling_Platform_P.Constant3_Value_m[1];
AirRefueling_Platform_B.Product[2] = ((rtb_Sum[2] + AirRefueling_Platform_P.Constant2_Value_i[2]) + AirRefueling_Platform_P.d_pr_rc[2]) * AirRefueling_Platform_P.Constant3_Value_m[2];
/* {S!d1022}Sum: '<S9>/Sum1' incorporates:
 *  Constant: '<S9>/修正数据让对接时误差为0'
 */
AirRefueling_Platform_B.Sum1[0] = (AirRefueling_Platform_P._Value[0] - AirRefueling_Platform_B.Product[0]) + AirRefueling_Platform_B.Sum5[0];
AirRefueling_Platform_B.Sum1[1] = (AirRefueling_Platform_P._Value[1] - AirRefueling_Platform_B.Product[1]) + AirRefueling_Platform_B.Sum5[1];
AirRefueling_Platform_B.Sum1[2] = (AirRefueling_Platform_P._Value[2] - AirRefueling_Platform_B.Product[2]) + AirRefueling_Platform_B.Sum5[2];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B111)
    /* {S!d1024}Scope: '<S9>/Scope1' */
%<tlcOutputsFcnOfS43B111>\
%endif
}
/* {S!d1026}Derivative: '<S9>/Derivative' incorporates:
 *  Derivative: '<S23>/Derivative'
 */
if ((AirRefueling_Platform_DW.TimeStampA_a >= rtb_jxi_tmp) && (AirRefueling_Platform_DW.TimeStampB_h >= rtb_jxi_tmp)) {
    rtb_Gain1_d[0] = 0.0;
    rtb_Gain1_d[1] = 0.0;
    rtb_Gain1_d[2] = 0.0;
} else {
    rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampA_a;
    lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeA_b;
    if (AirRefueling_Platform_DW.TimeStampA_a < AirRefueling_Platform_DW.TimeStampB_h) {
        if (AirRefueling_Platform_DW.TimeStampB_h < rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_h;
            lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeB_j;
        }
    } else {
        if (AirRefueling_Platform_DW.TimeStampA_a >= rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_h;
            lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeB_j;
        }
    }
    rtb_u2rhoV2 = rtb_jxi_tmp - rtb_u2rhoV2;
    rtb_Gain1_d[0] = (AirRefueling_Platform_B.Product[0] - (*lastU_0)[0]) / rtb_u2rhoV2;
    rtb_Gain1_d[1] = (AirRefueling_Platform_B.Product[1] - (*lastU_0)[1]) / rtb_u2rhoV2;
    rtb_Gain1_d[2] = (AirRefueling_Platform_B.Product[2] - (*lastU_0)[2]) / rtb_u2rhoV2;
}
/* {E!d1026}End of Derivative: '<S9>/Derivative' */

/* {S!d1028}Derivative: '<S9>/Derivative1' incorporates:
 *  Derivative: '<S23>/Derivative'
 */
if ((AirRefueling_Platform_DW.TimeStampA_k >= rtb_jxi_tmp) && (AirRefueling_Platform_DW.TimeStampB_c >= rtb_jxi_tmp)) {
    rtb_Sum_m2[0] = 0.0;
    rtb_Sum_m2[1] = 0.0;
    rtb_Sum_m2[2] = 0.0;
} else {
    rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampA_k;
    lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeA_n;
    if (AirRefueling_Platform_DW.TimeStampA_k < AirRefueling_Platform_DW.TimeStampB_c) {
        if (AirRefueling_Platform_DW.TimeStampB_c < rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_c;
            lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeB_n;
        }
    } else {
        if (AirRefueling_Platform_DW.TimeStampA_k >= rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_c;
            lastU_0 = &AirRefueling_Platform_DW.LastUAtTimeB_n;
        }
    }
    rtb_u2rhoV2 = rtb_jxi_tmp - rtb_u2rhoV2;
    rtb_Sum_m2[0] = (AirRefueling_Platform_B.Sum5[0] - (*lastU_0)[0]) / rtb_u2rhoV2;
    rtb_Sum_m2[1] = (AirRefueling_Platform_B.Sum5[1] - (*lastU_0)[1]) / rtb_u2rhoV2;
    rtb_Sum_m2[2] = (AirRefueling_Platform_B.Sum5[2] - (*lastU_0)[2]) / rtb_u2rhoV2;
}
/* {E!d1028}End of Derivative: '<S9>/Derivative1' */

/* {S!d1030}Sum: '<S9>/Sum3' */
AirRefueling_Platform_B.Sum3[0] = rtb_Gain1_d[0] - rtb_Sum_m2[0];
AirRefueling_Platform_B.Sum3[1] = rtb_Gain1_d[1] - rtb_Sum_m2[1];
AirRefueling_Platform_B.Sum3[2] = rtb_Gain1_d[2] - rtb_Sum_m2[2];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B112)
    /* {S!d1032}Scope: '<S9>/Scope2' */
%<tlcOutputsFcnOfS43B112>\
%endif
}
/* {S!d1034}MATLAB Function: '<S9>/MATLAB Function1' */
/* MATLAB Function 'Hose-Drogue System/Collision Detection/MATLAB Function1': '<S15>:1' */
/* '<S15>:1:33' */
AirRefueling_Platform_B.F[0] = 0.0;
AirRefueling_Platform_B.F[1] = 0.0;
AirRefueling_Platform_B.F[2] = 0.0;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B115)
    /* {S!d1036}Scope: '<S9>/Scope3' */
%<tlcOutputsFcnOfS43B115>\
%endif
}
/* {S!d1038}Product: '<S21>/Product' incorporates:
 *  Constant: '<S17>/link line density'
 *  MATLAB Function: '<S22>/MATLAB Function1'
 */
rtb_jxi = AirRefueling_Platform_P.l_density * rtb_l1out;
/* {S!d1040}MATLAB Function: '<S21>/MATLAB Function' incorporates:
 *  Product: '<S21>/Product'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Acceleration of the Links1/MATLAB Function': '<S31>:1' */
/* '<S31>:1:10' */
/* '<S31>:1:7' */
memset(&rtb_T[0], 0, 100U * sizeof(real_T));
/* '<S31>:1:9' */
rtb_T[0] = 1.0;
/* '<S31>:1:10' */
/* '<S31>:1:11' */
/* '<S31>:1:12' */
rtb_T[99] = 0.33771106941838652;
/* '<S31>:1:14' */
rtb_LowAltitudeScaleLength = -1.0 / rtb_jxi;
/* '<S31>:1:15' */
rtb_T[11] = 1.0 / rtb_jxi + 0.16885553470919326;
/* '<S31>:1:16' */
rtb_T[10] = (-AirRefueling_Platform_B.n[0] * AirRefueling_Platform_B.n[3] + -AirRefueling_Platform_B.n[1] * AirRefueling_Platform_B.n[4]) + -AirRefueling_Platform_B.n[2] * AirRefueling_Platform_B.n[5];
rtb_T[89] = (-0.16885553470919326 * AirRefueling_Platform_B.n[24] * AirRefueling_Platform_B.n[27] + -0.16885553470919326 * AirRefueling_Platform_B.n[25] * AirRefueling_Platform_B.n[28]) + -0.16885553470919326 * AirRefueling_Platform_B.n[26] * AirRefueling_Platform_B.n[29];
rtb_T[1] = (rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.n[0] * AirRefueling_Platform_B.n[3] + rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.n[1] * AirRefueling_Platform_B.n[4]) + rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.n[2] * AirRefueling_Platform_B.n[5];
rtb_T[21] = (-0.16885553470919326 * AirRefueling_Platform_B.n[3] * AirRefueling_Platform_B.n[6] + -0.16885553470919326 * AirRefueling_Platform_B.n[4] * AirRefueling_Platform_B.n[7]) + -0.16885553470919326 * AirRefueling_Platform_B.n[5] * AirRefueling_Platform_B.n[8];
/* '<S31>:1:18' */
for (i = 0; i < 7; i++) {
    /* '<S31>:1:18' */
    /* '<S31>:1:19' */
    /* '<S31>:1:20' */
    /* '<S31>:1:21' */
    CkSum = (i + 1) * 3;
    n_tmp = (i + 2) * 3;
    rtb_u2rhoV2 = AirRefueling_Platform_B.n[n_tmp + 1];
    rtb_LowAltitudeScaleLength = AirRefueling_Platform_B.n[n_tmp];
    rtb_UnitConversion_au = AirRefueling_Platform_B.n[n_tmp + 2];
    rtb_T[(i + 10 * (i + 1)) + 2] = (AirRefueling_Platform_B.n[CkSum + 1] * -0.16885553470919326 * rtb_u2rhoV2 + AirRefueling_Platform_B.n[CkSum] * -0.16885553470919326 * rtb_LowAltitudeScaleLength) + AirRefueling_Platform_B.n[CkSum + 2] * -0.16885553470919326 * rtb_UnitConversion_au;
    rtb_T[(i + 10 * (i + 2)) + 2] = 0.33771106941838652;
    CkSum = (i + 3) * 3;
    rtb_T[(i + 10 * (i + 3)) + 2] = (rtb_u2rhoV2 * -0.16885553470919326 * AirRefueling_Platform_B.n[CkSum + 1] + rtb_LowAltitudeScaleLength * -0.16885553470919326 * AirRefueling_Platform_B.n[CkSum]) + rtb_UnitConversion_au * -0.16885553470919326 * AirRefueling_Platform_B.n[CkSum + 2];
}
/* {E!d1040}End of MATLAB Function: '<S21>/MATLAB Function' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d1042}Lookup_n-D: '<S20>/1-D Lookup Table' incorporates:
 *  Constant: '<S17>/Height'
 */
    AirRefueling_Platform_B.uDLookupTable = look1_binlxpw(AirRefueling_Platform_P.height, AirRefueling_Platform_P.uDLookupTable_bp01Data, AirRefueling_Platform_P.uDLookupTable_tableData, 10U);
}
/* {S!d1044}MATLAB Function: '<S22>/MATLAB Function' incorporates:
 *  Constant: '<S17>/link radius'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the External Force of the Links/MATLAB Function': '<S35>:1' */
/* '<S35>:1:16' */
/* '<S35>:1:11' */
/* '<S35>:1:12' */
/* '<S35>:1:13' */
/* '<S35>:1:14' */
/* '<S35>:1:15' */
/* '<S35>:1:29' */
/* '<S35>:1:30' */
/* '<S35>:1:31' */
for (i = 0; i < 10; i++) {
    AirRefueling_Platform_B.Ref[i] = 0.0;
    AirRefueling_Platform_B.Red[i] = 0.0;
    /* '<S35>:1:15' */
    rtb_u2rhoV2 = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&rtb_vr[3 * i]"], 1, 34, 15))>;
    if (rtb_u2rhoV2 != 0.0) {
        /* '<S35>:1:16' */
        /* '<S35>:1:17' */
        CkSum = 3 * i + 1;
        n_tmp = 3 * i + 2;
        rtb_LowAltitudeScaleLength = ((rtb_vr[CkSum] * AirRefueling_Platform_B.n[CkSum] + rtb_vr[3 * i] * AirRefueling_Platform_B.n[3 * i]) + rtb_vr[n_tmp] * AirRefueling_Platform_B.n[n_tmp]) / rtb_u2rhoV2;
        /* '<S35>:1:18' */
        rtb_UnitConversion_au = sqrt(1.0 - rtb_LowAltitudeScaleLength * rtb_LowAltitudeScaleLength);
        if (rtb_UnitConversion_au != 0.0) {
            /* '<S35>:1:19' */
            /* '<S35>:1:20' */
            AirRefueling_Platform_B.Ref[i] = 3.1415926535897931 * AirRefueling_Platform_P.Rl / AirRefueling_Platform_B.uDLookupTable * rtb_u2rhoV2 / rtb_UnitConversion_au;
        } else {
            /* '<S35>:1:22' */
            AirRefueling_Platform_B.Ref[i] = 1.0E+11;
        }
        /* '<S35>:1:24' */
        AirRefueling_Platform_B.Red[i] = rtb_u2rhoV2 * 2.0 * AirRefueling_Platform_P.Rl / AirRefueling_Platform_B.uDLookupTable;
    }
    Nik_u[i] = 0.0;
    sina[i] = 0.0;
    /* '<S35>:1:31' */
    if (!(AirRefueling_Platform_B.Ref[i] <= 0.01)) {
        if ((AirRefueling_Platform_B.Ref[i] > 0.01) && (AirRefueling_Platform_B.Ref[i] <= 10000.0)) {
            /* '<S35>:1:35' */
            /* '<S35>:1:36' */
            Nik_u[i] = 4.6409 * %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Ref[i]", "-0.6667"], 1, 34, 4))>;
        } else if ((AirRefueling_Platform_B.Ref[i] > 10000.0) && (AirRefueling_Platform_B.Ref[i] <= 1.0E+10)) {
            /* '<S35>:1:37' */
            /* '<S35>:1:38' */
            Nik_u[i] = 0.0464 * %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Ref[i]", "-0.1667"], 1, 34, 5))>;
        } else {
            if (AirRefueling_Platform_B.Ref[i] > 1.0E+10) {
                /* '<S35>:1:39' */
                /* '<S35>:1:40' */
                Nik_u[i] = 0.001;
            }
        }
    } else {
        /* '<S35>:1:33' */
        /* '<S35>:1:34' */
    }
    if (!(AirRefueling_Platform_B.Red[i] <= 0.01)) {
        if ((AirRefueling_Platform_B.Red[i] > 0.01) && (AirRefueling_Platform_B.Red[i] <= 1.0)) {
            /* '<S35>:1:45' */
            /* '<S35>:1:46' */
            sina[i] = 10.0 * %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Red[i]", "-0.801"], 1, 34, 6))>;
        } else if ((AirRefueling_Platform_B.Red[i] > 1.0) && (AirRefueling_Platform_B.Red[i] <= 180.0)) {
            /* '<S35>:1:47' */
            /* '<S35>:1:48' */
            sina[i] = 10.0 * %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Red[i]", "-0.4083"], 1, 34, 7))>;
        } else if ((AirRefueling_Platform_B.Red[i] > 180.0) && (AirRefueling_Platform_B.Red[i] <= 400000.0)) {
            /* '<S35>:1:49' */
            /* '<S35>:1:50' */
            sina[i] = 1.2;
        } else if ((AirRefueling_Platform_B.Red[i] > 400000.0) && (AirRefueling_Platform_B.Red[i] <= 4.0E+6)) {
            /* '<S35>:1:51' */
            /* '<S35>:1:52' */
            sina[i] = 0.002128 * %<(SLibCGCallSubFcn("rt_powd_snf", ["AirRefueling_Platform_B.Red[i]", "0.3522"], 1, 34, 8))>;
        } else {
            if (AirRefueling_Platform_B.Red[i] > 4.0E+6) {
                /* '<S35>:1:53' */
                /* '<S35>:1:54' */
                sina[i] = 0.45;
            }
        }
    } else {
        /* '<S35>:1:43' */
        /* '<S35>:1:44' */
    }
}
/* {E!d1044}End of MATLAB Function: '<S22>/MATLAB Function' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B121)
    /* {S!d1046}S-Function (saeroatmos): '<S25>/S-Function' incorporates:
 *  Constant: '<S17>/Height'
 */
%<tlcOutputsFcnOfS43B121>\
%endif
}
/* {S!d1048}MATLAB Function: '<S22>/MATLAB Function1' incorporates:
 *  Constant: '<S17>/link line density'
 *  Constant: '<S17>/link radius'
 *  Constant: '<S22>/Drogue Coeffecint'
 *  Constant: '<S22>/Drogue Mass'
 *  Constant: '<S22>/Drogue Radius'
 *  Sum: '<S1>/Sum2'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the External Force of the Links/MATLAB Function1': '<S36>:1' */
/* '<S36>:1:28' */
/* '<S36>:1:21' */
/* '<S36>:1:25' */
/* '<S36>:1:1' */
/* '<S36>:1:26' */
for (i = 0; i < 10; i++) {
    rtb_UnitConversion_au = sina[i];
    AirRefueling_Platform_B.Dd_mid[i] = 0.0;
    /* '<S36>:1:26' */
    if (i + 1 == 1) {
        /* '<S36>:1:27' */
        /* '<S36>:1:28' */
        n_tmp = 3 * i + 1;
        CkSum = 3 * i + 2;
        rtb_u2rhoV2 = (rtb_vr[n_tmp] * AirRefueling_Platform_B.n[n_tmp] + rtb_vr[3 * i] * AirRefueling_Platform_B.n[3 * i]) + rtb_vr[CkSum] * AirRefueling_Platform_B.n[CkSum];
        AirRefueling_Platform_B.Df_mid[i] = AirRefueling_Platform_B.SFunction_o4 * 3.1415926535897931 * AirRefueling_Platform_P.Rl * rtb_l1out * Nik_u[i] * (rtb_u2rhoV2 * rtb_u2rhoV2);
    } else {
        /* '<S36>:1:30' */
        n_tmp = 3 * i + 1;
        CkSum = 3 * i + 2;
        rtb_u2rhoV2 = (rtb_vr[n_tmp] * AirRefueling_Platform_B.n[n_tmp] + rtb_vr[3 * i] * AirRefueling_Platform_B.n[3 * i]) + rtb_vr[CkSum] * AirRefueling_Platform_B.n[CkSum];
        AirRefueling_Platform_B.Df_mid[i] = AirRefueling_Platform_B.SFunction_o4 * 3.1415926535897931 * AirRefueling_Platform_P.Rl * AirRefueling_Platform_l0 * Nik_u[i] * (rtb_u2rhoV2 * rtb_u2rhoV2);
    }
    n_tmp = 3 * i + 1;
    CkSum = 3 * i + 2;
    if ((rtb_vr[n_tmp] * AirRefueling_Platform_B.n[n_tmp] + rtb_vr[3 * i] * AirRefueling_Platform_B.n[3 * i]) + rtb_vr[CkSum] * AirRefueling_Platform_B.n[CkSum] > 0.0) {
        /* '<S36>:1:32' */
        /* '<S36>:1:33' */
        pY_idx_1 = AirRefueling_Platform_B.Df_mid[i];
        AirRefueling_Platform_B.Df[3 * i] = AirRefueling_Platform_B.n[3 * i] * pY_idx_1;
        AirRefueling_Platform_B.Df[n_tmp] = AirRefueling_Platform_B.n[n_tmp] * pY_idx_1;
        AirRefueling_Platform_B.Df[CkSum] = AirRefueling_Platform_B.n[CkSum] * pY_idx_1;
    } else {
        /* '<S36>:1:35' */
        pY_idx_1 = -AirRefueling_Platform_B.Df_mid[i];
        AirRefueling_Platform_B.Df[3 * i] = AirRefueling_Platform_B.n[3 * i] * pY_idx_1;
        AirRefueling_Platform_B.Df[n_tmp] = AirRefueling_Platform_B.n[n_tmp] * pY_idx_1;
        AirRefueling_Platform_B.Df[CkSum] = AirRefueling_Platform_B.n[CkSum] * pY_idx_1;
    }
    /* '<S36>:1:40' */
    rtb_u2rhoV2 = (rtb_vr[n_tmp] * AirRefueling_Platform_B.n[n_tmp] + rtb_vr[3 * i] * AirRefueling_Platform_B.n[3 * i]) + rtb_vr[CkSum] * AirRefueling_Platform_B.n[CkSum];
    vn[3 * i] = rtb_vr[3 * i] - AirRefueling_Platform_B.n[3 * i] * rtb_u2rhoV2;
    vn[n_tmp] = rtb_vr[n_tmp] - AirRefueling_Platform_B.n[n_tmp] * rtb_u2rhoV2;
    vn[CkSum] = rtb_vr[CkSum] - AirRefueling_Platform_B.n[CkSum] * rtb_u2rhoV2;
    if (i + 1 == 1) {
        /* '<S36>:1:41' */
        rtb_LowAltitudeScaleLength = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&vn[3 * i]"], 1, 34, 17))>;
        if (rtb_LowAltitudeScaleLength != 0.0) {
            /* '<S36>:1:42' */
            /* '<S36>:1:43' */
            AirRefueling_Platform_B.Dd_mid[i] = AirRefueling_Platform_B.SFunction_o4 * AirRefueling_Platform_P.Rl * rtb_l1out * rtb_UnitConversion_au * (rtb_LowAltitudeScaleLength * rtb_LowAltitudeScaleLength);
            /* '<S36>:1:44' */
            pY_idx_1 = -AirRefueling_Platform_B.Dd_mid[i];
            rtb_UnitConversion_au = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&vn[3 * i]"], 1, 34, 22))>;
            AirRefueling_Platform_B.Dd[3 * i] = vn[3 * i] * pY_idx_1 / rtb_UnitConversion_au;
            AirRefueling_Platform_B.Dd[n_tmp] = vn[n_tmp] * pY_idx_1 / rtb_UnitConversion_au;
            AirRefueling_Platform_B.Dd[CkSum] = vn[CkSum] * pY_idx_1 / rtb_UnitConversion_au;
        } else {
            /* '<S36>:1:46' */
            AirRefueling_Platform_B.Dd[3 * i] = 0.0;
            AirRefueling_Platform_B.Dd[n_tmp] = 0.0;
            AirRefueling_Platform_B.Dd[CkSum] = 0.0;
        }
    } else {
        rtb_LowAltitudeScaleLength = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&vn[3 * i]"], 1, 34, 16))>;
        if (rtb_LowAltitudeScaleLength != 0.0) {
            /* '<S36>:1:49' */
            /* '<S36>:1:50' */
            AirRefueling_Platform_B.Dd_mid[i] = AirRefueling_Platform_B.SFunction_o4 * AirRefueling_Platform_P.Rl * AirRefueling_Platform_l0 * rtb_UnitConversion_au * (rtb_LowAltitudeScaleLength * rtb_LowAltitudeScaleLength);
            /* '<S36>:1:51' */
            pY_idx_1 = -AirRefueling_Platform_B.Dd_mid[i];
            AirRefueling_Platform_B.Dd[3 * i] = vn[3 * i] * pY_idx_1 / rtb_LowAltitudeScaleLength;
            AirRefueling_Platform_B.Dd[n_tmp] = vn[n_tmp] * pY_idx_1 / rtb_LowAltitudeScaleLength;
            AirRefueling_Platform_B.Dd[CkSum] = vn[CkSum] * pY_idx_1 / rtb_LowAltitudeScaleLength;
        } else {
            /* '<S36>:1:53' */
            AirRefueling_Platform_B.Dd[3 * i] = 0.0;
            AirRefueling_Platform_B.Dd[n_tmp] = 0.0;
            AirRefueling_Platform_B.Dd[CkSum] = 0.0;
        }
    }
    /* '<S36>:1:58' */
    AirRefueling_Platform_B.D[3 * i] = AirRefueling_Platform_B.Df[3 * i] + AirRefueling_Platform_B.Dd[3 * i];
    AirRefueling_Platform_B.D[n_tmp] = AirRefueling_Platform_B.Df[n_tmp] + AirRefueling_Platform_B.Dd[n_tmp];
    AirRefueling_Platform_B.D[CkSum] = AirRefueling_Platform_B.Df[CkSum] + AirRefueling_Platform_B.Dd[CkSum];
}
if ((rtb_vr[27] * rtb_vr[27] + rtb_vr[28] * rtb_vr[28]) + rtb_vr[29] * rtb_vr[29] != 0.0) {
    /* '<S36>:1:61' */
    /* '<S36>:1:62' */
    rtb_LowAltitudeScaleLength = -0.5 * AirRefueling_Platform_B.SFunction_o4;
    rtb_LowAltitudeScaleLength = ((rtb_LowAltitudeScaleLength * rtb_vr[27] * rtb_vr[27] + rtb_LowAltitudeScaleLength * rtb_vr[28] * rtb_vr[28]) + rtb_LowAltitudeScaleLength * rtb_vr[29] * rtb_vr[29]) * (AirRefueling_Platform_P.Rdr * AirRefueling_Platform_P.Rdr * 3.1415926535897931) * AirRefueling_Platform_P.Cdr_;
    pY_idx_1 = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&rtb_vr[27]"], 1, 34, 21))>;
    AirRefueling_Platform_B.Ddr[0] = rtb_LowAltitudeScaleLength * rtb_vr[27] / pY_idx_1;
    AirRefueling_Platform_B.Ddr[1] = rtb_LowAltitudeScaleLength * rtb_vr[28] / pY_idx_1;
    AirRefueling_Platform_B.Ddr[2] = rtb_LowAltitudeScaleLength * rtb_vr[29] / pY_idx_1;
} else {
    /* '<S36>:1:64' */
    AirRefueling_Platform_B.Ddr[0] = 0.0;
    AirRefueling_Platform_B.Ddr[1] = 0.0;
    AirRefueling_Platform_B.Ddr[2] = 0.0;
}
/* '<S36>:1:72' */
/* '<S36>:1:73' */
memset(&AirRefueling_Platform_B.fen_norm[0], 0, 10U * sizeof(real_T));
/* '<S36>:1:74' */
memset(&AirRefueling_Platform_B.fen[0], 0, 30U * sizeof(real_T));
/* '<S36>:1:76' */
/* '<S36>:1:75' */
for (i = 0; i < 8; i++) {
    /* '<S36>:1:75' */
    /* '<S36>:1:76' */
    rtb_Gain1_d[0] = AirRefueling_Platform_B.p[3 * i] - AirRefueling_Platform_B.p[(i + 2) * 3];
    CkSum = 3 * i + 1;
    rtb_Gain1_d[1] = AirRefueling_Platform_B.p[CkSum] - AirRefueling_Platform_B.p[(i + 2) * 3 + 1];
    n_tmp = 3 * i + 2;
    rtb_Gain1_d[2] = AirRefueling_Platform_B.p[n_tmp] - AirRefueling_Platform_B.p[(i + 2) * 3 + 2];
    rtb_LowAltitudeScaleLength = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["rtb_Gain1_d"], 1, 34, 18))>;
    rtb_Gain1_d[0] /= rtb_LowAltitudeScaleLength;
    rtb_Gain1_d[1] /= rtb_LowAltitudeScaleLength;
    rtb_LimitFunction10ftto1000ft = rtb_Gain1_d[2] / rtb_LowAltitudeScaleLength;
    pY_idx_1 = AirRefueling_Platform_B.n[CkSum];
    rtb_UnitConversion_au = AirRefueling_Platform_B.n[3 * i];
    rtb_Fy = AirRefueling_Platform_B.n[n_tmp];
    n_tmp = (i + 1) * 3 + 1;
    pX_idx_2 = AirRefueling_Platform_B.n[n_tmp];
    CkSum = (i + 1) * 3;
    pY_idx_2 = AirRefueling_Platform_B.n[CkSum];
    idx = (i + 1) * 3 + 2;
    pZ_idx_0 = AirRefueling_Platform_B.n[idx];
    if (fabs(fabs((pX_idx_2 * pY_idx_1 + pY_idx_2 * rtb_UnitConversion_au) + pZ_idx_0 * rtb_Fy) - 1.0) != 0.0) {
        /* '<S36>:1:77' */
        /* '<S36>:1:78' */
        /* '<S36>:1:79' */
        rtb_UnitConversion_au = (pY_idx_1 * rtb_Gain1_d[1] + rtb_UnitConversion_au * rtb_Gain1_d[0]) + rtb_Fy * rtb_LimitFunction10ftto1000ft;
        pZ_idx_1 = (pX_idx_2 * rtb_Gain1_d[1] + pY_idx_2 * rtb_Gain1_d[0]) + pZ_idx_0 * rtb_LimitFunction10ftto1000ft;
        rtb_Fy = pZ_idx_1;
        rtb_u2rhoV2 = fabs(rtb_UnitConversion_au);
        if (rtb_u2rhoV2 >= 1.0) {
            /* '<S36>:1:80' */
            /* '<S36>:1:81' */
            rtb_UnitConversion_au /= rtb_u2rhoV2;
        }
        rtb_u2rhoV2 = fabs(pZ_idx_1);
        if (rtb_u2rhoV2 >= 1.0) {
            /* '<S36>:1:83' */
            /* '<S36>:1:84' */
            rtb_Fy = pZ_idx_1 / rtb_u2rhoV2;
        }
        /* '<S36>:1:87' */
        AirRefueling_Platform_B.fen_norm[i + 1] = (acos(rtb_UnitConversion_au) + acos(rtb_Fy)) * 116.27434773492978 / (rtb_LowAltitudeScaleLength * rtb_LowAltitudeScaleLength);
        /* '<S36>:1:88' */
        rtb_Sum_m2[0] = (pZ_idx_1 * rtb_Gain1_d[0] - pY_idx_2) * 1000.0;
        rtb_Sum_m2[1] = (pZ_idx_1 * rtb_Gain1_d[1] - pX_idx_2) * 1000.0;
        rtb_Sum_m2[2] = (pZ_idx_1 * rtb_LimitFunction10ftto1000ft - pZ_idx_0) * 1000.0;
        pY_idx_1 = AirRefueling_Platform_B.fen_norm[i + 1];
        rtb_UnitConversion_au = %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["rtb_Sum_m2"], 1, 34, 23))>;
        AirRefueling_Platform_B.fen[CkSum] = (pZ_idx_1 * rtb_Gain1_d[0] - pY_idx_2) * 1000.0 * pY_idx_1 / rtb_UnitConversion_au;
        AirRefueling_Platform_B.fen[n_tmp] = (pZ_idx_1 * rtb_Gain1_d[1] - pX_idx_2) * 1000.0 * pY_idx_1 / rtb_UnitConversion_au;
        AirRefueling_Platform_B.fen[idx] = (pZ_idx_1 * rtb_LimitFunction10ftto1000ft - pZ_idx_0) * 1000.0 * pY_idx_1 / rtb_UnitConversion_au;
    }
}
/* '<S36>:1:99' */
memset(&AirRefueling_Platform_B.Q[0], 0, 30U * sizeof(real_T));
/* '<S36>:1:100' */
AirRefueling_Platform_B.Q[0] = (AirRefueling_Platform_B.D[0] + AirRefueling_Platform_B.D[3]) * 0.5 + AirRefueling_Platform_B.fen[0];
AirRefueling_Platform_B.Q[1] = (AirRefueling_Platform_B.D[1] + AirRefueling_Platform_B.D[4]) * 0.5 + AirRefueling_Platform_B.fen[1];
AirRefueling_Platform_B.Q[2] = (rtb_jxi * 9.8 + (AirRefueling_Platform_B.D[2] + AirRefueling_Platform_B.D[5]) * 0.5) + AirRefueling_Platform_B.fen[2];
/* '<S36>:1:101' */
for (CkSum = 0; CkSum < 8; CkSum++) {
    /* '<S36>:1:101' */
    /* '<S36>:1:102' */
    i = (CkSum + 1) * 3;
    n_tmp = (CkSum + 2) * 3;
    AirRefueling_Platform_B.Q[i] = (AirRefueling_Platform_B.D[i] + AirRefueling_Platform_B.D[n_tmp]) * 0.5 + AirRefueling_Platform_B.fen[i];
    AirRefueling_Platform_B.Q[i + 1] = (AirRefueling_Platform_B.D[i + 1] + AirRefueling_Platform_B.D[n_tmp + 1]) * 0.5 + AirRefueling_Platform_B.fen[i + 1];
    AirRefueling_Platform_B.Q[i + 2] = ((AirRefueling_Platform_B.D[i + 2] + AirRefueling_Platform_B.D[n_tmp + 2]) * 0.5 + AirRefueling_Platform_l0 * AirRefueling_Platform_P.l_density * 9.8) + AirRefueling_Platform_B.fen[i + 2];
}
/* '<S36>:1:104' */
AirRefueling_Platform_B.Q[27] = (0.5 * AirRefueling_Platform_B.D[27] + AirRefueling_Platform_B.Ddr[0]) + (AirRefueling_Platform_B.F[0] + AirRefueling_Platform_B.y_g[3]);
AirRefueling_Platform_B.Q[28] = (0.5 * AirRefueling_Platform_B.D[28] + AirRefueling_Platform_B.Ddr[1]) + (AirRefueling_Platform_B.F[1] + AirRefueling_Platform_B.y_g[4]);
AirRefueling_Platform_B.Q[29] = (((0.72222222222222221 * AirRefueling_Platform_P.l_density + AirRefueling_Platform_P.Mdr) * 9.8 + 0.5 * AirRefueling_Platform_B.D[29]) + AirRefueling_Platform_B.Ddr[2]) + (AirRefueling_Platform_B.F[2] + AirRefueling_Platform_B.y_g[5]);
/* {S!d1050}MATLAB Function: '<S21>/MATLAB Function2' incorporates:
 *  MATLAB Function: '<S21>/MATLAB Function4'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Acceleration of the Links1/MATLAB Function4': '<S34>:1' */
/* '<S34>:1:13' */
/* '<S34>:1:12' */
memset(&Nik_u[0], 0, 10U * sizeof(real_T));
/* {S!d1052}MATLAB Function: '<S21>/MATLAB Function4' incorporates:
 *  Constant: '<S5>/tanker acceleration'
 *  Derivative: '<S23>/Derivative'
 *  Product: '<S21>/Product'
 */
/* '<S34>:1:13' */
rtb_LowAltitudeScaleLength = rtb_jxi * rtb_l1out;
/* '<S34>:1:14' */
Nik_u[0] = ((((rtb_LowAltitudeScaleLength * rtb_Derivative[0] * rtb_Derivative[0] + rtb_LowAltitudeScaleLength * rtb_Derivative[1] * rtb_Derivative[1]) + rtb_LowAltitudeScaleLength * rtb_Derivative[2] * rtb_Derivative[2]) - ((AirRefueling_Platform_B.Q[0] * AirRefueling_Platform_B.n[0] + AirRefueling_Platform_B.Q[1] * AirRefueling_Platform_B.n[1]) + AirRefueling_Platform_B.Q[2] * AirRefueling_Platform_B.n[2])) + ((rtb_jxi * AirRefueling_Platform_P.tankeracceleration_Value[0] * AirRefueling_Platform_B.n[0] + rtb_jxi * AirRefueling_Platform_P.tankeracceleration_Value[1] * AirRefueling_Platform_B.n[1]) + rtb_jxi * AirRefueling_Platform_P.tankeracceleration_Value[2] * AirRefueling_Platform_B.n[2])) - rtb_jxi * AirRefueling_Platform_B.ddl1out;
rtb_LowAltitudeScaleLength = 1.0 / rtb_jxi;
Nik_u[1] = (((rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.Q[0] - 0.16885553470919326 * AirRefueling_Platform_B.Q[3]) * AirRefueling_Platform_B.n[3] + (rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.Q[1] - 0.16885553470919326 * AirRefueling_Platform_B.Q[4]) * AirRefueling_Platform_B.n[4]) + (rtb_LowAltitudeScaleLength * AirRefueling_Platform_B.Q[2] - 0.16885553470919326 * AirRefueling_Platform_B.Q[5]) * AirRefueling_Platform_B.n[5]) + ((AirRefueling_Platform_l0 * rtb_Derivative[3] * rtb_Derivative[3] + AirRefueling_Platform_l0 * rtb_Derivative[4] * rtb_Derivative[4]) + AirRefueling_Platform_l0 * rtb_Derivative[5] * rtb_Derivative[5]);
/* '<S34>:1:15' */
for (i = 0; i < 8; i++) {
    /* '<S34>:1:15' */
    /* '<S34>:1:16' */
    CkSum = (i + 2) * 3 + 1;
    n_tmp = (i + 2) * 3;
    idx = (i + 2) * 3 + 2;
    rtb_u2rhoV2 = rtb_Derivative[CkSum];
    rtb_LowAltitudeScaleLength = rtb_Derivative[n_tmp];
    rtb_UnitConversion_au = rtb_Derivative[idx];
    Nik_u[i + 2] = (((AirRefueling_Platform_B.Q[(i + 1) * 3 + 1] * 0.16885553470919326 - AirRefueling_Platform_B.Q[CkSum] * 0.16885553470919326) * AirRefueling_Platform_B.n[CkSum] + (AirRefueling_Platform_B.Q[(i + 1) * 3] * 0.16885553470919326 - AirRefueling_Platform_B.Q[n_tmp] * 0.16885553470919326) * AirRefueling_Platform_B.n[n_tmp]) + (AirRefueling_Platform_B.Q[(i + 1) * 3 + 2] * 0.16885553470919326 - AirRefueling_Platform_B.Q[idx] * 0.16885553470919326) * AirRefueling_Platform_B.n[idx]) + ((rtb_u2rhoV2 * AirRefueling_Platform_l0 * rtb_u2rhoV2 + rtb_LowAltitudeScaleLength * AirRefueling_Platform_l0 * rtb_LowAltitudeScaleLength) + rtb_UnitConversion_au * AirRefueling_Platform_l0 * rtb_UnitConversion_au);
}
/* {S!d1054}MATLAB Function: '<S21>/MATLAB Function2' */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Acceleration of the Links1/MATLAB Function2': '<S32>:1' */
/* '<S32>:1:2' */
%<(SLibCGCallSubFcn("AirRefueling_Platform_xgetrfs", ["rtb_T", "Nik_u"], 1, 34, 9))>;
/* '<S32>:1:3' */
AirRefueling_Platform_B.t0 = Nik_u[0];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B129)
    /* {S!d1056}Scope: '<S10>/Scope38' */
%<tlcOutputsFcnOfS43B129>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B130)
    /* {S!d1058}ToWorkspace: '<S10>/To Workspace3' */
%<tlcOutputsFcnOfS43B130>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B131)
    /* {S!d1060}Scope: '<S16>/Scope1' */
%<tlcOutputsFcnOfS43B131>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B132)
    /* {S!d1062}Scope: '<S16>/Scope2' */
%<tlcOutputsFcnOfS43B132>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B133)
    /* {S!d1064}Scope: '<S16>/Scope3' */
%<tlcOutputsFcnOfS43B133>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B134)
    /* {S!d1066}Scope: '<S16>/Scope5' */
%<tlcOutputsFcnOfS43B134>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B135)
    /* {S!d1068}Scope: '<S16>/Scope7' */
%<tlcOutputsFcnOfS43B135>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B136)
    /* {S!d1070}Scope: '<S16>/Scope8' */
%<tlcOutputsFcnOfS43B136>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B137)
    /* {S!d1072}ToWorkspace: '<S16>/To Workspace3' */
%<tlcOutputsFcnOfS43B137>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B138)
    /* {S!d1074}Scope: '<S17>/Scope' */
%<tlcOutputsFcnOfS43B138>\
%endif
}
/* {S!d1076}MATLAB Function: '<S17>/MATLAB Function3' */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/MATLAB Function3': '<S24>:1' */
/* '<S24>:1:5' */
/* '<S24>:1:3' */
memset(&AirRefueling_Platform_B.alpha[0], 0, 10U * sizeof(real_T));
/* '<S24>:1:4' */
for (i = 0; i < 9; i++) {
    /* '<S24>:1:4' */
    /* '<S24>:1:5' */
    rtb_LowAltitudeScaleLength = (AirRefueling_Platform_B.n[(i + 1) * 3 + 1] * AirRefueling_Platform_B.n[3 * i + 1] + AirRefueling_Platform_B.n[(i + 1) * 3] * AirRefueling_Platform_B.n[3 * i]) + AirRefueling_Platform_B.n[(i + 1) * 3 + 2] * AirRefueling_Platform_B.n[3 * i + 2];
    pY_idx_1 = fabs(rtb_LowAltitudeScaleLength);
    if (pY_idx_1 > 1.0) {
        /* '<S24>:1:6' */
        /* '<S24>:1:7' */
        rtb_LowAltitudeScaleLength /= pY_idx_1;
    }
    /* '<S24>:1:9' */
    AirRefueling_Platform_B.alpha[i + 1] = acos(rtb_LowAltitudeScaleLength) / 3.1415926535897931 * 180.0;
}
/* {E!d1076}End of MATLAB Function: '<S17>/MATLAB Function3' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B140)
    /* {S!d1078}Scope: '<S17>/Scope1' */
%<tlcOutputsFcnOfS43B140>\
%endif
}
/* {S!d1080}MATLAB Function: '<S21>/MATLAB Function3' incorporates:
 *  Constant: '<S22>/Drogue Mass'
 *  Product: '<S21>/Product'
 */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Acceleration of the Links1/MATLAB Function3': '<S33>:1' */
/* '<S33>:1:3' */
/* '<S33>:1:2' */
memset(&AirRefueling_Platform_B.a[0], 0, 30U * sizeof(real_T));
/* '<S33>:1:3' */
AirRefueling_Platform_B.a[0] = ((Nik_u[0] * AirRefueling_Platform_B.n[0] - Nik_u[1] * AirRefueling_Platform_B.n[3]) + AirRefueling_Platform_B.Q[0]) / rtb_jxi;
AirRefueling_Platform_B.a[1] = ((Nik_u[0] * AirRefueling_Platform_B.n[1] - Nik_u[1] * AirRefueling_Platform_B.n[4]) + AirRefueling_Platform_B.Q[1]) / rtb_jxi;
AirRefueling_Platform_B.a[2] = ((Nik_u[0] * AirRefueling_Platform_B.n[2] - Nik_u[1] * AirRefueling_Platform_B.n[5]) + AirRefueling_Platform_B.Q[2]) / rtb_jxi;
/* '<S33>:1:4' */
for (i = 0; i < 8; i++) {
    /* '<S33>:1:4' */
    /* '<S33>:1:5' */
    rtb_LowAltitudeScaleLength = Nik_u[i + 1];
    rtb_u2rhoV2 = Nik_u[i + 2];
    CkSum = (i + 1) * 3;
    AirRefueling_Platform_B.a[CkSum] = ((AirRefueling_Platform_B.n[CkSum] * rtb_LowAltitudeScaleLength - AirRefueling_Platform_B.n[(i + 2) * 3] * rtb_u2rhoV2) + AirRefueling_Platform_B.Q[CkSum]) / 5.9222222222222216;
    CkSum = (i + 1) * 3 + 1;
    AirRefueling_Platform_B.a[CkSum] = ((AirRefueling_Platform_B.n[CkSum] * rtb_LowAltitudeScaleLength - AirRefueling_Platform_B.n[(i + 2) * 3 + 1] * rtb_u2rhoV2) + AirRefueling_Platform_B.Q[CkSum]) / 5.9222222222222216;
    CkSum = (i + 1) * 3 + 2;
    AirRefueling_Platform_B.a[CkSum] = ((AirRefueling_Platform_B.n[CkSum] * rtb_LowAltitudeScaleLength - AirRefueling_Platform_B.n[(i + 2) * 3 + 2] * rtb_u2rhoV2) + AirRefueling_Platform_B.Q[CkSum]) / 5.9222222222222216;
}
/* '<S33>:1:7' */
AirRefueling_Platform_B.a[27] = (Nik_u[9] * AirRefueling_Platform_B.n[27] + AirRefueling_Platform_B.Q[27]) / (AirRefueling_Platform_P.Mdr + 2.9611111111111108);
AirRefueling_Platform_B.a[28] = (Nik_u[9] * AirRefueling_Platform_B.n[28] + AirRefueling_Platform_B.Q[28]) / (AirRefueling_Platform_P.Mdr + 2.9611111111111108);
AirRefueling_Platform_B.a[29] = (Nik_u[9] * AirRefueling_Platform_B.n[29] + AirRefueling_Platform_B.Q[29]) / (AirRefueling_Platform_P.Mdr + 2.9611111111111108);
/* {E!d1080}End of MATLAB Function: '<S21>/MATLAB Function3' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B142)
    /* {S!d1082}Scope: '<S17>/Scope8' */
%<tlcOutputsFcnOfS43B142>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B143)
    /* {S!d1084}Scope: '<S22>/Scope' */
%<tlcOutputsFcnOfS43B143>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B144)
    /* {S!d1086}Scope: '<S22>/Scope1' */
%<tlcOutputsFcnOfS43B144>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B145)
    /* {S!d1088}Scope: '<S22>/Scope2' */
%<tlcOutputsFcnOfS43B145>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B146)
    /* {S!d1090}Scope: '<S22>/Scope3' */
%<tlcOutputsFcnOfS43B146>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B147)
    /* {S!d1092}Scope: '<S22>/Scope4' */
%<tlcOutputsFcnOfS43B147>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B148)
    /* {S!d1094}Scope: '<S22>/Scope5' */
%<tlcOutputsFcnOfS43B148>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B149)
    /* {S!d1096}Scope: '<S22>/Scope6' */
%<tlcOutputsFcnOfS43B149>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B150)
    /* {S!d1098}Scope: '<S22>/Scope7' */
%<tlcOutputsFcnOfS43B150>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B151)
    /* {S!d1100}Scope: '<S22>/Scope8' */
%<tlcOutputsFcnOfS43B151>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B152)
    /* {S!d1102}Scope: '<S22>/Scope9' */
%<tlcOutputsFcnOfS43B152>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B153)
    /* {S!d1104}Scope: '<S23>/Scope1' */
%<tlcOutputsFcnOfS43B153>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B154)
    /* {S!d1106}Scope: '<S23>/Scope10' */
%<tlcOutputsFcnOfS43B154>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B155)
    /* {S!d1108}ToWorkspace: '<S23>/To Workspace' */
%<tlcOutputsFcnOfS43B155>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B156)
    /* {S!d1110}ToWorkspace: '<S23>/To Workspace1' */
%<tlcOutputsFcnOfS43B156>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B157)
    /* {S!d1112}ToWorkspace: '<S23>/To Workspace2' */
%<tlcOutputsFcnOfS43B157>\
%endif
}
/* {S!d1114}Derivative: '<S23>/Derivative1' incorporates:
 *  Derivative: '<S23>/Derivative'
 */
if ((AirRefueling_Platform_DW.TimeStampA_l >= rtb_jxi_tmp) && (AirRefueling_Platform_DW.TimeStampB_b >= rtb_jxi_tmp)) {
    memset(&rtb_vr[0], 0, 30U * sizeof(real_T));
} else {
    rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampA_l;
    lastU = &AirRefueling_Platform_DW.LastUAtTimeA_g;
    if (AirRefueling_Platform_DW.TimeStampA_l < AirRefueling_Platform_DW.TimeStampB_b) {
        if (AirRefueling_Platform_DW.TimeStampB_b < rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_b;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB_f;
        }
    } else {
        if (AirRefueling_Platform_DW.TimeStampA_l >= rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_b;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB_f;
        }
    }
    rtb_u2rhoV2 = rtb_jxi_tmp - rtb_u2rhoV2;
    for (n_tmp = 0; n_tmp < 30; n_tmp++) {
        rtb_vr[n_tmp] = (AirRefueling_Platform_B.nd1[n_tmp] - (*lastU)[n_tmp]) / rtb_u2rhoV2;
    }
}
/* {E!d1114}End of Derivative: '<S23>/Derivative1' */

/* {S!d1116}Derivative: '<S23>/Derivative2' incorporates:
 *  Derivative: '<S23>/Derivative'
 */
if ((AirRefueling_Platform_DW.TimeStampA_l0 >= rtb_jxi_tmp) && (AirRefueling_Platform_DW.TimeStampB_j >= rtb_jxi_tmp)) {
    memset(&vn[0], 0, 30U * sizeof(real_T));
} else {
    rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampA_l0;
    lastU = &AirRefueling_Platform_DW.LastUAtTimeA_nv;
    if (AirRefueling_Platform_DW.TimeStampA_l0 < AirRefueling_Platform_DW.TimeStampB_j) {
        if (AirRefueling_Platform_DW.TimeStampB_j < rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_j;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB_nm;
        }
    } else {
        if (AirRefueling_Platform_DW.TimeStampA_l0 >= rtb_jxi_tmp) {
            rtb_u2rhoV2 = AirRefueling_Platform_DW.TimeStampB_j;
            lastU = &AirRefueling_Platform_DW.LastUAtTimeB_nm;
        }
    }
    rtb_u2rhoV2 = rtb_jxi_tmp - rtb_u2rhoV2;
    for (n_tmp = 0; n_tmp < 30; n_tmp++) {
        vn[n_tmp] = (AirRefueling_Platform_B.nd2[n_tmp] - (*lastU)[n_tmp]) / rtb_u2rhoV2;
    }
}
/* {E!d1116}End of Derivative: '<S23>/Derivative2' */
/* MATLAB Function 'Hose-Drogue System/DRdynamics/Hose-Drogue1/Calculate the Orientation of the Links1/MATLAB Function4': '<S38>:1' */
/* '<S38>:1:11' */
/* '<S38>:1:8' */
/* '<S38>:1:9' */
for (i = 0; i < 10; i++) {
    /* {S!d1118}Integrator: '<S23>/Integrator' */
    AirRefueling_Platform_B.Integrator_p[i] = AirRefueling_Platform_X.Integrator_CSTATE_p[i];
    /* {S!d1120}Integrator: '<S23>/Integrator2' */
    AirRefueling_Platform_B.Integrator2[i] = AirRefueling_Platform_X.Integrator2_CSTATE[i];
    /* {S!d1122}MATLAB Function: '<S23>/MATLAB Function4' */
    AirRefueling_Platform_B.ddtheta1[i] = 0.0;
    AirRefueling_Platform_B.ddtheta2[i] = 0.0;
}
/* {S!d1124}MATLAB Function: '<S23>/MATLAB Function4' incorporates:
 *  Constant: '<S5>/tanker acceleration'
 *  Derivative: '<S23>/Derivative'
 *  Derivative: '<S23>/Derivative1'
 *  Derivative: '<S23>/Derivative2'
 */
/* '<S38>:1:11' */
rtb_u2rhoV2 = 2.0 * rtb_dl1out;
rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[0] - AirRefueling_Platform_P.tankeracceleration_Value[0]);
rtb_dl1out = (rtb_vr[0] * AirRefueling_Platform_B.Integrator_p[0] + vn[0] * AirRefueling_Platform_B.Integrator2[0]) * rtb_l1out;
pY_idx_1 = ((rtb_LimitFunction10ftto1000ft - rtb_u2rhoV2 * rtb_Derivative[0]) - rtb_dl1out) * AirRefueling_Platform_B.nd1[0];
rtb_Gain1_d[0] = rtb_LimitFunction10ftto1000ft;
rtb_Sum_m2[0] = rtb_dl1out;
rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[1] - AirRefueling_Platform_P.tankeracceleration_Value[1]);
rtb_dl1out = (rtb_vr[1] * AirRefueling_Platform_B.Integrator_p[0] + vn[1] * AirRefueling_Platform_B.Integrator2[0]) * rtb_l1out;
pY_idx_1 += ((rtb_LimitFunction10ftto1000ft - rtb_u2rhoV2 * rtb_Derivative[1]) - rtb_dl1out) * AirRefueling_Platform_B.nd1[1];
rtb_Gain1_d[1] = rtb_LimitFunction10ftto1000ft;
rtb_Sum_m2[1] = rtb_dl1out;
rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[2] - AirRefueling_Platform_P.tankeracceleration_Value[2]);
rtb_dl1out = (rtb_vr[2] * AirRefueling_Platform_B.Integrator_p[0] + vn[2] * AirRefueling_Platform_B.Integrator2[0]) * rtb_l1out;
pY_idx_1 += ((rtb_LimitFunction10ftto1000ft - rtb_u2rhoV2 * rtb_Derivative[2]) - rtb_dl1out) * AirRefueling_Platform_B.nd1[2];
AirRefueling_Platform_B.ddtheta1[0] = pY_idx_1 / (rtb_l1out * %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&AirRefueling_Platform_B.nd1[0]"], 1, 34, 10))>);
/* '<S38>:1:14' */
pY_idx_1 = (((rtb_Gain1_d[0] - rtb_u2rhoV2 * rtb_Derivative[0]) - rtb_Sum_m2[0]) * AirRefueling_Platform_B.nd2[0] + ((rtb_Gain1_d[1] - rtb_u2rhoV2 * rtb_Derivative[1]) - rtb_Sum_m2[1]) * AirRefueling_Platform_B.nd2[1]) + ((rtb_LimitFunction10ftto1000ft - rtb_u2rhoV2 * rtb_Derivative[2]) - rtb_dl1out) * AirRefueling_Platform_B.nd2[2];
AirRefueling_Platform_B.ddtheta2[0] = pY_idx_1 / (rtb_l1out * %<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&AirRefueling_Platform_B.nd2[0]"], 1, 34, 11))>);
/* '<S38>:1:17' */
for (i = 0; i < 9; i++) {
    /* '<S38>:1:17' */
    /* '<S38>:1:18' */
    pY_idx_1 = AirRefueling_Platform_B.Integrator_p[i + 1];
    rtb_UnitConversion_au = AirRefueling_Platform_B.Integrator2[i + 1];
    /* '<S38>:1:21' */
    CkSum = (i + 1) * 3;
    rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[CkSum] - AirRefueling_Platform_B.a[3 * i]) - (rtb_vr[CkSum] * pY_idx_1 + vn[CkSum] * rtb_UnitConversion_au) * AirRefueling_Platform_l0;
    rtb_Fy = AirRefueling_Platform_B.nd1[CkSum] * rtb_LimitFunction10ftto1000ft;
    pX_idx_2 = AirRefueling_Platform_B.nd2[CkSum] * rtb_LimitFunction10ftto1000ft;
    n_tmp = (i + 1) * 3 + 1;
    rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[n_tmp] - AirRefueling_Platform_B.a[3 * i + 1]) - (rtb_vr[n_tmp] * pY_idx_1 + vn[n_tmp] * rtb_UnitConversion_au) * AirRefueling_Platform_l0;
    rtb_Fy += AirRefueling_Platform_B.nd1[n_tmp] * rtb_LimitFunction10ftto1000ft;
    pX_idx_2 += AirRefueling_Platform_B.nd2[n_tmp] * rtb_LimitFunction10ftto1000ft;
    n_tmp = (i + 1) * 3 + 2;
    rtb_LimitFunction10ftto1000ft = -(AirRefueling_Platform_B.a[n_tmp] - AirRefueling_Platform_B.a[3 * i + 2]) - (rtb_vr[n_tmp] * pY_idx_1 + vn[n_tmp] * rtb_UnitConversion_au) * AirRefueling_Platform_l0;
    rtb_Fy += AirRefueling_Platform_B.nd1[n_tmp] * rtb_LimitFunction10ftto1000ft;
    pX_idx_2 += AirRefueling_Platform_B.nd2[n_tmp] * rtb_LimitFunction10ftto1000ft;
    AirRefueling_Platform_B.ddtheta1[i + 1] = rtb_Fy / (%<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&AirRefueling_Platform_B.nd1[CkSum]"], 1, 34, 12))> * AirRefueling_Platform_l0);
    AirRefueling_Platform_B.ddtheta2[i + 1] = pX_idx_2 / (%<(SLibCGCallSubFcn("AirRefueling_Platform_norm", ["&AirRefueling_Platform_B.nd2[CkSum]"], 1, 34, 13))> * AirRefueling_Platform_l0);
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d1126}UnitConversion: '<S51>/Unit Conversion' incorporates:
 *  Constant: '<S41>/Wingspan'
 */
    /* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
    AirRefueling_Platform_B.UnitConversion_l = 3.280839895013123 * AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_j;
    /* {S!d513}Outputs for Enabled SubSystem: '<S48>/Hpgw' incorporates:
 *  EnablePort: '<S59>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* {S!d1132}Constant: '<S48>/Constant1' */
        if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
            if (!AirRefueling_Platform_DW.Hpgw_MODE) {
                /* {S!d1128}InitializeConditions for Integrator: '<S59>/pgw_p' */
                AirRefueling_Platform_X.pgw_p_CSTATE[0] = AirRefueling_Platform_P.pgw_p_IC;
                AirRefueling_Platform_X.pgw_p_CSTATE[1] = AirRefueling_Platform_P.pgw_p_IC;
                AirRefueling_Platform_DW.Hpgw_MODE = true;
            }
        } else {
            if (AirRefueling_Platform_DW.Hpgw_MODE) {
                /* {S!d1130}Disable for Product: '<S59>/sigma_w' incorporates:
 *  Outport: '<S59>/pgw'
 */
                AirRefueling_Platform_B.sigma_w[0] = AirRefueling_Platform_P.pgw_Y0;
                AirRefueling_Platform_B.sigma_w[1] = AirRefueling_Platform_P.pgw_Y0;
                AirRefueling_Platform_DW.Hpgw_MODE = false;
            }
        }
        /* {E!d1132}End of Constant: '<S48>/Constant1' */
    }
    /* {E!d513}End of Outputs for SubSystem: '<S48>/Hpgw' */
}
/* {S!d515}Outputs for Enabled SubSystem: '<S48>/Hpgw' incorporates:
 *  EnablePort: '<S59>/Enable'
 */
if (AirRefueling_Platform_DW.Hpgw_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 21))>) {
        /* {S!d1134}Product: '<S59>/w4' incorporates:
 *  Constant: '<S59>/Constant3'
 */
        rtb_u2rhoV2 = AirRefueling_Platform_P.Constant3_Value / AirRefueling_Platform_B.UnitConversion_l;
        /* {S!d1136}Math: '<S59>/u^1//6' incorporates:
 *  Constant: '<S59>/Constant2'
 */
        if ((rtb_u2rhoV2 < 0.0) && (AirRefueling_Platform_P.Constant2_Value > floor(AirRefueling_Platform_P.Constant2_Value))) {
            rtb_Fy = -%<(SLibCGCallSubFcn("rt_powd_snf", ["-rtb_u2rhoV2", "AirRefueling_Platform_P.Constant2_Value"], 1, 34, 34))>;
        } else {
            rtb_Fy = %<(SLibCGCallSubFcn("rt_powd_snf", ["rtb_u2rhoV2", "AirRefueling_Platform_P.Constant2_Value"], 1, 34, 33))>;
        }
        /* {E!d1136}End of Math: '<S59>/u^1//6' */

        /* {S!d1138}Fcn: '<S59>/sqrt(0.8//V)' */
        rtb_jxi = 0.8 / AirRefueling_Platform_B.UnitConversion_d;
        if (rtb_jxi < 0.0) {
            rtb_jxi = -sqrt(-rtb_jxi);
        } else {
            rtb_jxi = sqrt(rtb_jxi);
        }
        /* {S!d1140}Math: '<S59>/L^1//3' incorporates:
 *  Constant: '<S59>/Constant1'
 */
        pY_idx_1 = floor(AirRefueling_Platform_P.Constant1_Value);
        if ((rtb_Lw_idx_0 < 0.0) && (AirRefueling_Platform_P.Constant1_Value > pY_idx_1)) {
            rtb_Lw_idx_0 = -%<(SLibCGCallSubFcn("rt_powd_snf", ["-rtb_Lw_idx_0", "AirRefueling_Platform_P.Constant1_Value"], 1, 34, 41))>;
        } else {
            rtb_Lw_idx_0 = %<(SLibCGCallSubFcn("rt_powd_snf", ["rtb_Lw_idx_0", "AirRefueling_Platform_P.Constant1_Value"], 1, 34, 37))>;
        }
        /* {S!d1142}Product: '<S59>/Lug//V1' incorporates:
 *  Fcn: '<S59>/sqrt(0.8//V)'
 *  Product: '<S59>/w1'
 *  Product: '<S59>/w2'
 */
        AirRefueling_Platform_B.LugV1_l[0] = rtb_jxi / rtb_Lw_idx_0 * rtb_Fy * rtb_Divide[3];
        /* {S!d1144}Math: '<S59>/L^1//3' incorporates:
 *  Constant: '<S59>/Constant1'
 */
        if ((rtb_Lw_idx_1 < 0.0) && (AirRefueling_Platform_P.Constant1_Value > pY_idx_1)) {
            rtb_Lw_idx_1 = -%<(SLibCGCallSubFcn("rt_powd_snf", ["-rtb_Lw_idx_1", "AirRefueling_Platform_P.Constant1_Value"], 1, 34, 42))>;
        } else {
            rtb_Lw_idx_1 = %<(SLibCGCallSubFcn("rt_powd_snf", ["rtb_Lw_idx_1", "AirRefueling_Platform_P.Constant1_Value"], 1, 34, 38))>;
        }
        /* {S!d1146}Product: '<S59>/Lug//V1' incorporates:
 *  Fcn: '<S59>/sqrt(0.8//V)'
 *  Product: '<S59>/w1'
 *  Product: '<S59>/w2'
 */
        AirRefueling_Platform_B.LugV1_l[1] = rtb_jxi / rtb_Lw_idx_1 * rtb_Fy * rtb_Divide[3];
        /* {S!d1148}Product: '<S59>/w3' */
        AirRefueling_Platform_B.w3 = AirRefueling_Platform_B.UnitConversion_d * rtb_u2rhoV2;
    }
    /* {S!d1150}Product: '<S59>/sigma_w' incorporates:
 *  Integrator: '<S59>/pgw_p'
 */
    AirRefueling_Platform_B.sigma_w[0] = AirRefueling_Platform_B.sigma_wg * AirRefueling_Platform_X.pgw_p_CSTATE[0];
    AirRefueling_Platform_B.sigma_w[1] = AirRefueling_Platform_B.MediumHighAltitudeIntensity * AirRefueling_Platform_X.pgw_p_CSTATE[1];
    /* {S!d1152}Product: '<S59>/w' incorporates:
 *  Integrator: '<S59>/pgw_p'
 *  Sum: '<S59>/Sum'
 */
    AirRefueling_Platform_B.w_h0[0] = (AirRefueling_Platform_B.LugV1_l[0] - AirRefueling_Platform_X.pgw_p_CSTATE[0]) * AirRefueling_Platform_B.w3;
    AirRefueling_Platform_B.w_h0[1] = (AirRefueling_Platform_B.LugV1_l[1] - AirRefueling_Platform_X.pgw_p_CSTATE[1]) * AirRefueling_Platform_B.w3;
}
/* {E!d515}End of Outputs for SubSystem: '<S48>/Hpgw' */

/* {S!d517}Outputs for Enabled SubSystem: '<S48>/Hqgw' incorporates:
 *  EnablePort: '<S60>/Enable'
 */
if (%<(SLibCG_SE(SLibCGIRIsSampleHit(1, 43)))> && %<(SLibCG_SE(LibIsMajorTimeStep()))>) {
    /* {S!d1158}Constant: '<S48>/Constant2' */
    if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
        if (!AirRefueling_Platform_DW.Hqgw_MODE) {
            /* {S!d1154}InitializeConditions for Integrator: '<S60>/qgw_p' */
            AirRefueling_Platform_X.qgw_p_CSTATE[0] = AirRefueling_Platform_P.qgw_p_IC;
            AirRefueling_Platform_X.qgw_p_CSTATE[1] = AirRefueling_Platform_P.qgw_p_IC;
            AirRefueling_Platform_DW.Hqgw_MODE = true;
        }
    } else {
        if (AirRefueling_Platform_DW.Hqgw_MODE) {
            /* {S!d1156}Disable for Product: '<S60>/w' incorporates:
 *  Outport: '<S60>/qgw'
 */
            AirRefueling_Platform_B.w_h[0] = AirRefueling_Platform_P.qgw_Y0;
            AirRefueling_Platform_B.w_h[1] = AirRefueling_Platform_P.qgw_Y0;
            AirRefueling_Platform_DW.Hqgw_MODE = false;
        }
    }
    /* {E!d1158}End of Constant: '<S48>/Constant2' */
}
if (AirRefueling_Platform_DW.Hqgw_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 22))>) {
        /* {S!d1160}Gain: '<S60>/pi//4' */
        AirRefueling_Platform_B.pi4 = AirRefueling_Platform_P.pi4_Gain * AirRefueling_Platform_B.UnitConversion_d;
    }
    /* {S!d1162}Product: '<S60>/w' */
    rtb_l1out = AirRefueling_Platform_B.pi4 / AirRefueling_Platform_B.UnitConversion_l;
    /* {S!d1164}Product: '<S60>/w' incorporates:
 *  Integrator: '<S60>/qgw_p'
 *  Product: '<S60>/wg//V'
 *  Sum: '<S60>/Sum'
 */
    AirRefueling_Platform_B.w_h[0] = (AirRefueling_Platform_B.LwgV1[0] / AirRefueling_Platform_B.UnitConversion_d - AirRefueling_Platform_X.qgw_p_CSTATE[0]) * rtb_l1out;
    AirRefueling_Platform_B.w_h[1] = (AirRefueling_Platform_B.LwgV1[1] / AirRefueling_Platform_B.UnitConversion_d - AirRefueling_Platform_X.qgw_p_CSTATE[1]) * rtb_l1out;
}
/* {E!d517}End of Outputs for SubSystem: '<S48>/Hqgw' */

/* {S!d519}Outputs for Enabled SubSystem: '<S48>/Hrgw' incorporates:
 *  EnablePort: '<S61>/Enable'
 */
if (%<(SLibCG_SE(SLibCGIRIsSampleHit(1, 43)))> && %<(SLibCG_SE(LibIsMajorTimeStep()))>) {
    /* {S!d1170}Constant: '<S48>/Constant3' */
    if (AirRefueling_Platform_P.DrydenWindTurbulenceModelCont_i > 0.0) {
        if (!AirRefueling_Platform_DW.Hrgw_MODE) {
            /* {S!d1166}InitializeConditions for Integrator: '<S61>/rgw_p' */
            AirRefueling_Platform_X.rgw_p_CSTATE[0] = AirRefueling_Platform_P.rgw_p_IC;
            AirRefueling_Platform_X.rgw_p_CSTATE[1] = AirRefueling_Platform_P.rgw_p_IC;
            AirRefueling_Platform_DW.Hrgw_MODE = true;
        }
    } else {
        if (AirRefueling_Platform_DW.Hrgw_MODE) {
            /* {S!d1168}Disable for UnaryMinus: '<S61>/Unary Minus' incorporates:
 *  Outport: '<S61>/rgw'
 */
            AirRefueling_Platform_B.UnaryMinus[0] = AirRefueling_Platform_P.rgw_Y0;
            AirRefueling_Platform_B.UnaryMinus[1] = AirRefueling_Platform_P.rgw_Y0;
            AirRefueling_Platform_DW.Hrgw_MODE = false;
        }
    }
    /* {E!d1170}End of Constant: '<S48>/Constant3' */
}
if (AirRefueling_Platform_DW.Hrgw_MODE) {
    if (%<(SLibCGIRIsSampleHit(1, 23))>) {
        /* {S!d1172}Gain: '<S61>/pi//3' */
        AirRefueling_Platform_B.pi3 = AirRefueling_Platform_P.pi3_Gain * AirRefueling_Platform_B.UnitConversion_d;
    }
    /* {S!d1174}Product: '<S61>/w' */
    rtb_l1out = AirRefueling_Platform_B.pi3 / AirRefueling_Platform_B.UnitConversion_l;
    /* {S!d1176}Product: '<S61>/w' incorporates:
 *  Integrator: '<S61>/rgw_p'
 *  Product: '<S61>/vg//V'
 *  Sum: '<S61>/Sum'
 */
    AirRefueling_Platform_B.w_e[0] = (AirRefueling_Platform_B.w1[0] / AirRefueling_Platform_B.UnitConversion_d - AirRefueling_Platform_X.rgw_p_CSTATE[0]) * rtb_l1out;
    /* {S!d1178}UnaryMinus: '<S61>/Unary Minus' */
    AirRefueling_Platform_B.UnaryMinus[0] = -AirRefueling_Platform_B.w_e[0];
    /* {S!d1180}Product: '<S61>/w' incorporates:
 *  Integrator: '<S61>/rgw_p'
 *  Product: '<S61>/vg//V'
 *  Sum: '<S61>/Sum'
 */
    AirRefueling_Platform_B.w_e[1] = (AirRefueling_Platform_B.w1[1] / AirRefueling_Platform_B.UnitConversion_d - AirRefueling_Platform_X.rgw_p_CSTATE[1]) * rtb_l1out;
    /* {S!d1182}UnaryMinus: '<S61>/Unary Minus' */
    AirRefueling_Platform_B.UnaryMinus[1] = -AirRefueling_Platform_B.w_e[1];
}
/* {E!d519}End of Outputs for SubSystem: '<S48>/Hrgw' */
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d1212}If: '<S53>/if Height < Max low altitude  elseif Height > Min isotropic altitude ' */
    if (%<(LibIsMajorTimeStep())>) {
        if (rtb_UnitConversion <= 1000.0) {
            rtAction = 0;
        } else if (rtb_UnitConversion >= 2000.0) {
            rtAction = 1;
        } else {
            rtAction = 2;
        }
        AirRefueling_Platform_DW.ifHeightMaxlowaltitudeelseifH_e = rtAction;
    } else {
        rtAction = AirRefueling_Platform_DW.ifHeightMaxlowaltitudeelseifH_e;
    }
    switch (rtAction) {
      case 0:
        /* {S!d521}Outputs for IfAction SubSystem: '<S53>/Low altitude  rates' incorporates:
 *  ActionPort: '<S68>/Action Port'
 */
        /* {S!d1184}SignalConversion generated from: '<S73>/Vector Concatenate' */
        rtb_Gain1_d[2] = AirRefueling_Platform_B.UnaryMinus[0];
        /* {S!d1186}Trigonometry: '<S74>/Trigonometric Function1' */
        rtb_UnitConversion = sin(rtb_UnitConversion_f);
        rtb_UnitConversion_f = cos(rtb_UnitConversion_f);
        /* {S!d1188}Sum: '<S74>/Sum' incorporates:
 *  Product: '<S74>/Product1'
 *  Product: '<S74>/Product2'
 */
        rtb_Gain1_d[0] = AirRefueling_Platform_B.sigma_w[0] * rtb_UnitConversion_f - rtb_UnitConversion * AirRefueling_Platform_B.w_h[0];
        /* {S!d1190}Sum: '<S74>/Sum1' incorporates:
 *  Product: '<S74>/Product1'
 *  Product: '<S74>/Product2'
 */
        rtb_Gain1_d[1] = AirRefueling_Platform_B.w_h[0] * rtb_UnitConversion_f + rtb_UnitConversion * AirRefueling_Platform_B.sigma_w[0];
        for (n_tmp = 0; n_tmp < 3; n_tmp++) {
            /* {S!d1192}Merge: '<S70>/Merge' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Concatenate: '<S73>/Vector Concatenate'
 *  Product: '<S73>/Product'
 *  Reshape: '<S73>/Reshape1'
 */
            AirRefueling_Platform_B.Merge[n_tmp] = 0.0;
            AirRefueling_Platform_B.Merge[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[n_tmp] * rtb_Gain1_d[0];
            AirRefueling_Platform_B.Merge[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[n_tmp + 3] * rtb_Gain1_d[1];
            AirRefueling_Platform_B.Merge[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[n_tmp + 6] * rtb_Gain1_d[2];
        }
        /* {E!d521}End of Outputs for SubSystem: '<S53>/Low altitude  rates' */
        break;
      case 1:
        /* {S!d523}Outputs for IfAction SubSystem: '<S53>/Medium//High  altitude rates' incorporates:
 *  ActionPort: '<S69>/Action Port'
 */
        /* {S!d1194}Merge: '<S70>/Merge' incorporates:
 *  Gain: '<S69>/Gain'
 */
        AirRefueling_Platform_B.Merge[0] = AirRefueling_Platform_P.Gain_Gain * AirRefueling_Platform_B.sigma_w[1];
        AirRefueling_Platform_B.Merge[1] = AirRefueling_Platform_P.Gain_Gain * AirRefueling_Platform_B.w_h[1];
        AirRefueling_Platform_B.Merge[2] = AirRefueling_Platform_P.Gain_Gain * AirRefueling_Platform_B.UnaryMinus[1];
        /* {E!d523}End of Outputs for SubSystem: '<S53>/Medium//High  altitude rates' */
        break;
      case 2:
        /* {S!d525}Outputs for IfAction SubSystem: '<S53>/Interpolate  rates' incorporates:
 *  ActionPort: '<S67>/Action Port'
 */
        /* {S!d1196}Trigonometry: '<S72>/Trigonometric Function' */
        rtb_u2rhoV2 = sin(rtb_UnitConversion_f);
        rtb_UnitConversion_f = cos(rtb_UnitConversion_f);
        /* {S!d1198}Sum: '<S72>/Sum' incorporates:
 *  Product: '<S72>/Product1'
 *  Product: '<S72>/Product2'
 */
        rtb_Gain1_d[0] = AirRefueling_Platform_B.sigma_w[0] * rtb_UnitConversion_f - rtb_u2rhoV2 * AirRefueling_Platform_B.w_h[0];
        /* {S!d1200}Sum: '<S72>/Sum1' incorporates:
 *  Product: '<S72>/Product1'
 *  Product: '<S72>/Product2'
 */
        rtb_Gain1_d[1] = AirRefueling_Platform_B.w_h[0] * rtb_UnitConversion_f + rtb_u2rhoV2 * AirRefueling_Platform_B.sigma_w[0];
        /* {S!d1202}SignalConversion generated from: '<S71>/Vector Concatenate' */
        rtb_Gain1_d[2] = AirRefueling_Platform_B.UnaryMinus[0];
        /* {S!d1204}Product: '<S71>/Product' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Concatenate: '<S71>/Vector Concatenate'
 */
        for (n_tmp = 0; n_tmp < 3; n_tmp++) {
            rtb_Sum_m2[n_tmp] = AirRefueling_Platform_B.VectorConcatenate[n_tmp + 6] * rtb_Gain1_d[2] + (AirRefueling_Platform_B.VectorConcatenate[n_tmp + 3] * rtb_Gain1_d[1] + AirRefueling_Platform_B.VectorConcatenate[n_tmp] * rtb_Gain1_d[0]);
        }
        /* {E!d1204}End of Product: '<S71>/Product' */

        /* {S!d1206}Sum: '<S67>/Sum1' incorporates:
 *  Constant: '<S67>/max_height_low'
 */
        rtb_UnitConversion -= AirRefueling_Platform_P.max_height_low_Value;
        /* {S!d1208}Sum: '<S67>/Sum' incorporates:
 *  Constant: '<S67>/max_height_low'
 *  Constant: '<S67>/min_height_high'
 */
        rtb_UnitConversion_f = AirRefueling_Platform_P.min_height_high_Value - AirRefueling_Platform_P.max_height_low_Value;
        /* {S!d1210}Merge: '<S70>/Merge' incorporates:
 *  Product: '<S67>/Product1'
 *  Sum: '<S67>/Sum2'
 *  Sum: '<S67>/Sum3'
 */
        AirRefueling_Platform_B.Merge[0] = (AirRefueling_Platform_B.sigma_w[1] - rtb_Sum_m2[0]) * rtb_UnitConversion / rtb_UnitConversion_f + rtb_Sum_m2[0];
        AirRefueling_Platform_B.Merge[1] = (AirRefueling_Platform_B.w_h[1] - rtb_Sum_m2[1]) * rtb_UnitConversion / rtb_UnitConversion_f + rtb_Sum_m2[1];
        AirRefueling_Platform_B.Merge[2] = (AirRefueling_Platform_B.UnaryMinus[1] - rtb_Sum_m2[2]) * rtb_UnitConversion / rtb_UnitConversion_f + rtb_Sum_m2[2];
        /* {E!d525}End of Outputs for SubSystem: '<S53>/Interpolate  rates' */
        break;
    }
    /* {E!d1212}End of If: '<S53>/if Height < Max low altitude  elseif Height > Min isotropic altitude ' */
%if !WHITE_SPACE(tlcOutputsFcnOfS43B169)

    /* {S!d1214}Scope: '<S2>/Scope1' */
%<tlcOutputsFcnOfS43B169>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B170)
    /* {S!d1216}Scope: '<S2>/Scope2' */
%<tlcOutputsFcnOfS43B170>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B171)
    /* {S!d1218}Scope: '<S2>/Scope3' */
%<tlcOutputsFcnOfS43B171>\
%endif
}
for (n_tmp = 0; n_tmp < 18; n_tmp++) {
    /* {S!d1220}Gain: '<S3>/Unit Conversion' incorporates:
 *  Sum: '<S87>/Sum5'
 */
    AirRefueling_Platform_B.UnitConversion_g[n_tmp] = 0.0;
    for (CkSum = 0; CkSum < 18; CkSum++) {
        AirRefueling_Platform_B.UnitConversion_g[n_tmp] += AirRefueling_Platform_P.Kc[18 * n_tmp + CkSum] * rtb_Sum5[CkSum];
    }
    /* {E!d1220}End of Gain: '<S3>/Unit Conversion' */
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B172)
    /* {S!d1222}Scope: '<S3>/Scope' */
%<tlcOutputsFcnOfS43B172>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B173)
    /* {S!d1224}S-Function (slrealtimeUDPReceive): '<Root>/UDP Receive' */
%<tlcOutputsFcnOfS43B173>\
%endif
    /* {S!d1226}MATLAB Function: '<S6>/VehicleDataParse' incorporates:
 *  Constant: '<S6>/Checksum'
 *  Constant: '<S6>/Len'
 */
    /* MATLAB Function 'UDP_SIL_State_Receiver/VehicleDataParse': '<S154>:1' */
    if (!(AirRefueling_Platform_B.UDPReceive_o2 != AirRefueling_Platform_P.Len_Value)) {
        /* '<S154>:1:20' */
        memcpy((void *)&CkSum, (void *)&AirRefueling_Platform_B.UDPReceive_o1[0], (uint32_T)((size_t)1 * sizeof(int32_T)));
        if (CkSum == AirRefueling_Platform_P.Checksum_Value) {
            /* '<S154>:1:28' */
            memcpy((void *)&CkSum, (void *)&AirRefueling_Platform_B.UDPReceive_o1[4], (uint32_T)((size_t)1 * sizeof(int32_T)));
            /* '<S154>:1:29' */
            memcpy((void *)&y[0], (void *)&AirRefueling_Platform_B.UDPReceive_o1[8], (uint32_T)((size_t)16 * sizeof(real_T)));
            /* '<S154>:1:29' */
            /* '<S154>:1:31' */
            for (i = 0; i < 16; i++) {
                /* '<S154>:1:31' */
                /* '<S154>:1:32' */
                /* '<S154>:1:33' */
                memcpy((void *)&rtb_LowAltitudeScaleLength, (void *)&AirRefueling_Platform_B.UDPReceive_o1[(i << 3) + 8], (uint32_T)((size_t)1 * sizeof(real_T)));
                AirRefueling_Platform_DW.DataOut[i] = rtb_LowAltitudeScaleLength;
            }
            /* '<S154>:1:39' */
            /* '<S154>:1:40' */
            /* '<S154>:1:43' */
            AirRefueling_Platform_DW.cpID = CkSum;
            /* '<S154>:1:44' */
        } else {
            /* '<S154>:1:21' */
            /* '<S154>:1:22' */
            /* '<S154>:1:23' */
        }
    } else {
        /* '<S154>:1:14' */
        /* '<S154>:1:15' */
        /* '<S154>:1:16' */
    }
    /* {S!d1228}Sum: '<S3>/Sum4' incorporates:
 *  Constant: '<S3>/Constant1'
 *  MATLAB Function: '<S6>/VehicleDataParse'
 */
    AirRefueling_Platform_B.Sum4[0] = (-AirRefueling_Platform_P.d_pr_cam[0] + AirRefueling_Platform_P.came_err[0]) + AirRefueling_Platform_DW.DataOut[0];
    AirRefueling_Platform_B.Sum4[1] = (-AirRefueling_Platform_P.d_pr_cam[1] + AirRefueling_Platform_P.came_err[1]) + AirRefueling_Platform_DW.DataOut[1];
    AirRefueling_Platform_B.Sum4[2] = (-AirRefueling_Platform_P.d_pr_cam[2] + AirRefueling_Platform_P.came_err[2]) + AirRefueling_Platform_DW.DataOut[2];
}
for (i = 0; i < 3; i++) {
    /* {S!d1230}Gain: '<S3>/h2z' */
    rtb_dl1out = AirRefueling_Platform_P.h2z_Gain[i + 6] * AirRefueling_Platform_B.Pos_dr2tx[2] + (AirRefueling_Platform_P.h2z_Gain[i + 3] * AirRefueling_Platform_B.Pos_dr2tx[1] + AirRefueling_Platform_P.h2z_Gain[i] * AirRefueling_Platform_B.Pos_dr2tx[0]);
    /* {S!d1232}Sum: '<S3>/Sum7' incorporates:
 *  Constant: '<S3>/Constant6'
 *  Sum: '<S3>/Sum6'
 */
    AirRefueling_Platform_B.Sum7[i] = AirRefueling_Platform_B.Sum4[i] - ((rtb_dl1out - rtb_Sum[i]) - AirRefueling_Platform_P.d_pr_rc[i]);
    /* {S!d1234}Gain: '<S3>/h2z' */
    rtb_Sum_m2[i] = rtb_dl1out;
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B179)
    /* {S!d1236}Scope: '<S3>/Scope1' */
%<tlcOutputsFcnOfS43B179>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B180)
    /* {S!d1238}Scope: '<S3>/Scope2' */
%<tlcOutputsFcnOfS43B180>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B181)
    /* {S!d1240}Scope: '<S3>/Scope3' */
%<tlcOutputsFcnOfS43B181>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B182)
    /* {S!d1242}Scope: '<S3>/Scope4' */
%<tlcOutputsFcnOfS43B182>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B183)
    /* {S!d1244}Scope: '<S3>/Scope5' */
%<tlcOutputsFcnOfS43B183>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B184)
    /* {S!d1246}Scope: '<S3>/Scope6' */
%<tlcOutputsFcnOfS43B184>\
%endif
}
/* {S!d1248}Sum: '<S3>/Sum5' incorporates:
 *  Constant: '<S3>/Constant4'
 */
AirRefueling_Platform_B.Sum5_b[0] = rtb_Sum_m2[0] - (AirRefueling_Platform_P.p0_rc[0] + AirRefueling_Platform_P.d_pr_rc[0]);
AirRefueling_Platform_B.Sum5_b[1] = rtb_Sum_m2[1] - (AirRefueling_Platform_P.p0_rc[1] + AirRefueling_Platform_P.d_pr_rc[1]);
AirRefueling_Platform_B.Sum5_b[2] = rtb_Sum_m2[2] - (AirRefueling_Platform_P.p0_rc[2] + AirRefueling_Platform_P.d_pr_rc[2]);
/* {S!d1250}Clock: '<S3>/Clock' */
AirRefueling_Platform_B.Clock_a = rtb_jxi_tmp;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d1252}MATLAB Function: '<S3>/Navigator' */
    /* MATLAB Function 'Receiver System/Navigator': '<S89>:1' */
    /* '<S89>:1:43' */
    /* '<S89>:1:47' */
    rtb_UnitConversion = AirRefueling_Platform_B.Clock_a - AirRefueling_Platform_DW.tt;
    if (rtb_UnitConversion < 10.0) {
        /* '<S89>:1:48' */
        /* '<S89>:1:50' */
        rtb_y_p[0] = AirRefueling_Platform_B.UnitConversion[0];
        rtb_y_p[1] = AirRefueling_Platform_B.UnitConversion[1];
        rtb_y_p[2] = AirRefueling_Platform_B.UnitConversion[2];
    } else if (rtb_UnitConversion < 20.0) {
        /* '<S89>:1:51' */
        /* '<S89>:1:53' */
        /* '<S89>:1:55' */
        rtb_y_p[0] = 7.0;
        AirRefueling_Platform_DW.aa[0] = 7.0;
        rtb_y_p[1] = -1.8;
        AirRefueling_Platform_DW.aa[1] = -1.8;
        rtb_y_p[2] = -0.2;
        AirRefueling_Platform_DW.aa[2] = -0.2;
    } else if (rtb_UnitConversion < 30.0) {
        /* '<S89>:1:56' */
        /* '<S89>:1:57' */
        rtb_y_p[0] = AirRefueling_Platform_DW.aa[0];
        rtb_y_p[1] = AirRefueling_Platform_DW.aa[1];
        rtb_y_p[2] = AirRefueling_Platform_DW.aa[2];
        if ((rtb_UnitConversion > 24.0) && (rtb_UnitConversion < 25.0)) {
            /* '<S89>:1:58' */
            /* '<S89>:1:60' */
            AirRefueling_Platform_DW.dx[0] = AirRefueling_Platform_DW.aa[0] + AirRefueling_Platform_B.Sum4[0];
            AirRefueling_Platform_DW.dx[1] = AirRefueling_Platform_DW.aa[1] + AirRefueling_Platform_B.Sum4[1];
            AirRefueling_Platform_DW.dx[2] = AirRefueling_Platform_DW.aa[2] + AirRefueling_Platform_B.Sum4[2];
        }
        if (rtb_UnitConversion > 25.0) {
            /* '<S89>:1:62' */
            /* '<S89>:1:63' */
            AirRefueling_Platform_DW.dx[0] = (AirRefueling_Platform_DW.aa[0] + AirRefueling_Platform_B.Sum4[0]) * 0.25 + 0.75 * AirRefueling_Platform_DW.dx[0];
            AirRefueling_Platform_DW.dx[1] = (AirRefueling_Platform_DW.aa[1] + AirRefueling_Platform_B.Sum4[1]) * 0.25 + 0.75 * AirRefueling_Platform_DW.dx[1];
            AirRefueling_Platform_DW.dx[2] = (AirRefueling_Platform_DW.aa[2] + AirRefueling_Platform_B.Sum4[2]) * 0.25 + 0.75 * AirRefueling_Platform_DW.dx[2];
        }
    } else {
        /* '<S89>:1:70' */
        rtb_y_p[0] = 8.6;
        rtb_y_p[1] = -1.5854;
        rtb_y_p[2] = -1.79;
        rtb_jxi = fabs(AirRefueling_Platform_B.UnitConversion[0] - AirRefueling_Platform_DW.dx[0]);
        if (rtb_jxi < 0.01) {
            /* '<S89>:1:72' */
            /* '<S89>:1:74' */
            if (AirRefueling_Platform_B.Clock_a - AirRefueling_Platform_DW.t_dock >= 20.0) {
                /* '<S89>:1:77' */
                /* '<S89>:1:78' */
                /* '<S89>:1:82' */
                /* '<S89>:1:85' */
                rtb_UnitConversion = (AirRefueling_Platform_DW.aa[3] - AirRefueling_Platform_DW.aa[6]) / 0.6;
                if (!(fabs(rtb_UnitConversion) <= 1.0)) {
                    if (rtb_UnitConversion < 0.0) {
                        rtb_UnitConversion = -1.0;
                    } else if (rtb_UnitConversion > 0.0) {
                        rtb_UnitConversion = 1.0;
                    } else if (rtb_UnitConversion == 0.0) {
                        rtb_UnitConversion = 0.0;
                    } else {
                        rtb_UnitConversion = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                    }
                }
                rtb_UnitConversion_f = (AirRefueling_Platform_DW.aa[4] - AirRefueling_Platform_DW.aa[7]) / 0.6;
                if (!(fabs(rtb_UnitConversion_f) <= 1.0)) {
                    if (rtb_UnitConversion_f < 0.0) {
                        rtb_UnitConversion_f = -1.0;
                    } else if (rtb_UnitConversion_f > 0.0) {
                        rtb_UnitConversion_f = 1.0;
                    } else if (rtb_UnitConversion_f == 0.0) {
                        rtb_UnitConversion_f = 0.0;
                    } else {
                        rtb_UnitConversion_f = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                    }
                }
                rtb_u2rhoV2 = (AirRefueling_Platform_DW.aa[5] - AirRefueling_Platform_DW.aa[8]) / 0.6;
                if (!(fabs(rtb_u2rhoV2) <= 1.0)) {
                    if (rtb_u2rhoV2 < 0.0) {
                        rtb_u2rhoV2 = -1.0;
                    } else if (rtb_u2rhoV2 > 0.0) {
                        rtb_u2rhoV2 = 1.0;
                    } else if (rtb_u2rhoV2 == 0.0) {
                        rtb_u2rhoV2 = 0.0;
                    } else {
                        rtb_u2rhoV2 = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                    }
                }
                pY_idx_1 = AirRefueling_Platform_DW.nn[0];
                rtb_UnitConversion_au = AirRefueling_Platform_DW.nn[1];
                rtb_Fy = AirRefueling_Platform_DW.nn[2];
                AirRefueling_Platform_DW.nn[0] = 0.6 * rtb_UnitConversion + pY_idx_1;
                AirRefueling_Platform_DW.nn[1] = 0.6 * rtb_UnitConversion_f + rtb_UnitConversion_au;
                AirRefueling_Platform_DW.nn[2] = 0.6 * rtb_u2rhoV2 + rtb_Fy;
                /* '<S89>:1:91' */
                AirRefueling_Platform_DW.tt = (AirRefueling_Platform_B.Clock_a - 20.0) - 5.0;
            }
        } else if (rtb_jxi < 0.4) {
            /* '<S89>:1:99' */
            /* '<S89>:1:100' */
            /* '<S89>:1:101' */
            AirRefueling_Platform_DW.aa[3] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[3] + 0.33333333333333331 * AirRefueling_Platform_DW.dx[0];
            AirRefueling_Platform_DW.aa[6] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[6] + 0.33333333333333331 * AirRefueling_Platform_B.UnitConversion[0];
            AirRefueling_Platform_DW.aa[4] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[4] + 0.33333333333333331 * AirRefueling_Platform_DW.dx[1];
            AirRefueling_Platform_DW.aa[7] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[7] + 0.33333333333333331 * AirRefueling_Platform_B.UnitConversion[1];
            AirRefueling_Platform_DW.aa[5] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[5] + 0.33333333333333331 * AirRefueling_Platform_DW.dx[2];
            AirRefueling_Platform_DW.aa[8] = 0.66666666666666663 * AirRefueling_Platform_DW.aa[8] + 0.33333333333333331 * AirRefueling_Platform_B.UnitConversion[2];
        } else {
            if (rtb_jxi < 0.5) {
                /* '<S89>:1:104' */
                /* '<S89>:1:105' */
                /* '<S89>:1:106' */
                AirRefueling_Platform_DW.aa[3] = AirRefueling_Platform_DW.dx[0];
                AirRefueling_Platform_DW.aa[6] = AirRefueling_Platform_B.UnitConversion[0];
                AirRefueling_Platform_DW.aa[4] = AirRefueling_Platform_DW.dx[1];
                AirRefueling_Platform_DW.aa[7] = AirRefueling_Platform_B.UnitConversion[1];
                AirRefueling_Platform_DW.aa[5] = AirRefueling_Platform_DW.dx[2];
                AirRefueling_Platform_DW.aa[8] = AirRefueling_Platform_B.UnitConversion[2];
            }
        }
    }
    /* {E!d1252}End of MATLAB Function: '<S3>/Navigator' */
%if !WHITE_SPACE(tlcOutputsFcnOfS43B187)

    /* {S!d1254}Scope: '<S3>/Scope7' */
%<tlcOutputsFcnOfS43B187>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B188)
    /* {S!d1256}ToWorkspace: '<S3>/To Workspace' */
%<tlcOutputsFcnOfS43B188>\
%endif
}
/* {S!d1258}Sum: '<S3>/Subtract' incorporates:
 *  Constant: '<S3>/Constant2'
 *  Sum: '<S3>/Sum1'
 */
AirRefueling_Platform_B.Subtract[0] = (AirRefueling_Platform_P.d_pr_rc[0] + rtb_Sum[0]) - rtb_Sum_m2[0];
AirRefueling_Platform_B.Subtract[1] = (AirRefueling_Platform_P.d_pr_rc[1] + rtb_Sum[1]) - rtb_Sum_m2[1];
AirRefueling_Platform_B.Subtract[2] = (AirRefueling_Platform_P.d_pr_rc[2] + rtb_Sum[2]) - rtb_Sum_m2[2];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B190)
    /* {S!d1260}ToWorkspace: '<S3>/To Workspace1' */
%<tlcOutputsFcnOfS43B190>\
%endif
}
/* {S!d1262}Gain: '<S86>/C' */
for (n_tmp = 0; n_tmp < 3; n_tmp++) {
    rtb_Sum_m2[n_tmp] = 0.0;
    for (CkSum = 0; CkSum < 18; CkSum++) {
        rtb_Sum_m2[n_tmp] += AirRefueling_Platform_P.C[3 * CkSum + n_tmp] * rtb_Sum5[CkSum];
    }
}
/* {E!d1262}End of Gain: '<S86>/C' */

/* {S!d1264}Product: '<S142>/j x k' incorporates:
 *  Integrator: '<S86>/Integrator2'
 */
rtb_jxk = AirRefueling_Platform_X.Integrator2_CSTATE_l;
for (n_tmp = 0; n_tmp < 4; n_tmp++) {
    /* {S!d1266}Gain: '<S86>/Kp' */
    rtb_WhiteNoise[n_tmp] = 0.0;
    for (CkSum = 0; CkSum < 18; CkSum++) {
        rtb_WhiteNoise[n_tmp] += AirRefueling_Platform_P.Kp[(CkSum << 2) + n_tmp] * rtb_Sum5[CkSum];
    }
    /* {E!d1266}End of Gain: '<S86>/Kp' */

    /* {S!d1268}Sum: '<S86>/Sum3' incorporates:
 *  Gain: '<S86>/Ki'
 *  Integrator: '<S86>/Integrator'
 *  Integrator: '<S86>/Integrator1'
 *  SignalConversion generated from: '<S86>/Ki'
 */
    rtb_Divide[n_tmp] = (AirRefueling_Platform_P.Ki[n_tmp + 8] * rtb_jxk + (AirRefueling_Platform_P.Ki[n_tmp + 4] * AirRefueling_Platform_X.Integrator1_CSTATE_e + AirRefueling_Platform_P.Ki[n_tmp] * AirRefueling_Platform_X.Integrator_CSTATE_d)) - rtb_WhiteNoise[n_tmp];
}
/* {S!d1270}Gain: '<S86>/Gain' */
rtb_u2rhoV2 = AirRefueling_Platform_P.Gain_Gain_d * rtb_Divide[0];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
    for (n_tmp = 0; n_tmp < 3; n_tmp++) {
        /* {S!d1272}UnitConversion: '<S90>/Unit Conversion' incorporates:
 *  Constant: '<S3>/Constant7'
 *  Gain: '<S86>/Gain1'
 */
        AirRefueling_Platform_B.UnitConversion_fl[n_tmp] = 3.280839895013123 * (AirRefueling_Platform_P.Gain1_Gain_i[n_tmp + 6] * AirRefueling_Platform_P.Constant7_Value_k[2] + (AirRefueling_Platform_P.Gain1_Gain_i[n_tmp + 3] * AirRefueling_Platform_P.Constant7_Value_k[1] + AirRefueling_Platform_P.Gain1_Gain_i[n_tmp] * AirRefueling_Platform_P.Constant7_Value_k[0]));
    }
}
/* {S!d1274}Sum: '<S86>/Sum2' */
AirRefueling_Platform_B.Sum2[0] = AirRefueling_Platform_B.UnitConversion_fl[0] - rtb_Sum_m2[0];
AirRefueling_Platform_B.Sum2[1] = AirRefueling_Platform_B.UnitConversion_fl[1] - rtb_Sum_m2[1];
AirRefueling_Platform_B.Sum2[2] = AirRefueling_Platform_B.UnitConversion_fl[2] - rtb_Sum_m2[2];
/* {S!d1282}Saturate: '<S86>/Saturation' */
if (AirRefueling_Platform_B.Sum2[0] > AirRefueling_Platform_P.Saturation_UpperSat_it) {
    /* {S!d1276}Saturate: '<S86>/Saturation' */
    AirRefueling_Platform_B.Saturation_p = AirRefueling_Platform_P.Saturation_UpperSat_it;
} else if (AirRefueling_Platform_B.Sum2[0] < AirRefueling_Platform_P.Saturation_LowerSat_o) {
    /* {S!d1278}Saturate: '<S86>/Saturation' */
    AirRefueling_Platform_B.Saturation_p = AirRefueling_Platform_P.Saturation_LowerSat_o;
} else {
    /* {S!d1280}Saturate: '<S86>/Saturation' */
    AirRefueling_Platform_B.Saturation_p = AirRefueling_Platform_B.Sum2[0];
}
/* {E!d1282}End of Saturate: '<S86>/Saturation' */

/* {S!d1284}Sum: '<S86>/Sum' incorporates:
 *  Constant: '<S86>/Constant'
 */
rtb_jxi_tmp = rtb_Divide[1] + AirRefueling_Platform_P.trim_control[1];
rtb_l1out = rtb_Divide[2] + AirRefueling_Platform_P.trim_control[2];
rtb_Lw_idx_0 = rtb_Divide[3] + AirRefueling_Platform_P.trim_control[3];
rtb_Divide[0] = rtb_u2rhoV2 + AirRefueling_Platform_P.trim_control[0];
for (n_tmp = 0; n_tmp < 3; n_tmp++) {
    /* {S!d1286}Product: '<S104>/Product' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Integrator: '<S91>/ub,vb,wb'
 *  Math: '<S91>/Transpose'
 */
    AirRefueling_Platform_B.Product_p[n_tmp] = 0.0;
    AirRefueling_Platform_B.Product_p[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[3 * n_tmp] * AirRefueling_Platform_B.ubvbwb[0];
    AirRefueling_Platform_B.Product_p[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[3 * n_tmp + 1] * AirRefueling_Platform_B.ubvbwb[1];
    AirRefueling_Platform_B.Product_p[n_tmp] += AirRefueling_Platform_B.VectorConcatenate[3 * n_tmp + 2] * AirRefueling_Platform_B.ubvbwb[2];
}
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B193)
    /* {S!d1288}Scope: '<S87>/Scope2' */
%<tlcOutputsFcnOfS43B193>\
%endif
}
/* {S!d1290}Integrator: '<S91>/xe,ye,ze' */
AirRefueling_Platform_B.xeyeze[0] = AirRefueling_Platform_X.xeyeze_CSTATE[0];
AirRefueling_Platform_B.xeyeze[1] = AirRefueling_Platform_X.xeyeze_CSTATE[1];
AirRefueling_Platform_B.xeyeze[2] = AirRefueling_Platform_X.xeyeze_CSTATE[2];
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS43B194)
    /* {S!d1292}Scope: '<S87>/Scope3' */
%<tlcOutputsFcnOfS43B194>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B195)
    /* {S!d1294}Scope: '<S87>/Scope4' */
%<tlcOutputsFcnOfS43B195>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS43B196)
    /* {S!d1296}Scope: '<S87>/Scope5' */
%<tlcOutputsFcnOfS43B196>\
%endif
    for (n_tmp = 0; n_tmp < 3; n_tmp++) {
        /* {S!d1298}Selector: '<S99>/Selector' incorporates:
 *  Constant: '<S100>/Constant1'
 */
        AirRefueling_Platform_B.Selector[3 * n_tmp] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp];
        AirRefueling_Platform_B.Selector[3 * n_tmp + 1] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 1];
        AirRefueling_Platform_B.Selector[3 * n_tmp + 2] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 2];
    }
}
/* {S!d1300}Trigonometry: '<S106>/sincos' */
rtb_Sum_ah[0] = rtb_Lv_idx_1;
rtb_Sum_m2[1] = cos(rtb_Sum_ah[1]);
rtb_Sum_ah[1] = sin(rtb_Sum_ah[1]);
/* {S!d1302}Fcn: '<S106>/psidot' incorporates:
 *  Fcn: '<S106>/phidot'
 *  Integrator: '<S91>/p,q,r '
 */
rtb_UnitConversion = AirRefueling_Platform_X.pqr_CSTATE[1] * rtb_Sum_ah[0] + AirRefueling_Platform_X.pqr_CSTATE[2] * rtb_Lv_idx_0;
/* {S!d1304}Product: '<S142>/j x k' incorporates:
 *  Fcn: '<S106>/psidot'
 */
rtb_jxk = rtb_UnitConversion / rtb_Sum_m2[1];
/* {S!d1306}SignalConversion generated from: '<S98>/phi theta psi' incorporates:
 *  Fcn: '<S106>/phidot'
 *  Fcn: '<S106>/thetadot'
 *  Integrator: '<S91>/p,q,r '
 */
AirRefueling_Platform_B.TmpSignalConversionAtphithetaps[0] = rtb_UnitConversion * (rtb_Sum_ah[1] / rtb_Sum_m2[1]) + AirRefueling_Platform_X.pqr_CSTATE[0];
AirRefueling_Platform_B.TmpSignalConversionAtphithetaps[1] = AirRefueling_Platform_X.pqr_CSTATE[1] * rtb_Lv_idx_0 - AirRefueling_Platform_X.pqr_CSTATE[2] * rtb_Sum_ah[0];
AirRefueling_Platform_B.TmpSignalConversionAtphithetaps[2] = rtb_jxk;
/* {S!d1308}Product: '<S109>/Product' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Selector: '<S99>/Selector'
 *  Sum: '<S108>/Sum'
 */
for (n_tmp = 0; n_tmp < 3; n_tmp++) {
    rtb_Sum_m2[n_tmp] = AirRefueling_Platform_B.Selector[n_tmp + 6] * AirRefueling_Platform_X.pqr_CSTATE[2] + (AirRefueling_Platform_B.Selector[n_tmp + 3] * AirRefueling_Platform_X.pqr_CSTATE[1] + AirRefueling_Platform_B.Selector[n_tmp] * AirRefueling_Platform_X.pqr_CSTATE[0]);
}
/* {E!d1308}End of Product: '<S109>/Product' */

/* {S!d1310}Product: '<S142>/j x k' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S111>/k x i'
 */
rtb_jxk = AirRefueling_Platform_X.pqr_CSTATE[2] * rtb_Sum_m2[0];
/* {S!d1312}Product: '<S142>/k x i' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S112>/i x k'
 */
rtb_kxi = AirRefueling_Platform_X.pqr_CSTATE[0] * rtb_Sum_m2[2];
/* {S!d1314}Product: '<S111>/j x k' */
rtb_dl1out = rtb_Sum_m2[2];
/* {S!d1316}Product: '<S111>/i x j' */
rtb_UnitConversion = rtb_Sum_m2[1];
/* {S!d1318}Product: '<S112>/k x j' */
rtb_UnitConversion_f = rtb_Sum_m2[1];
/* {S!d1320}Product: '<S112>/j x i' */
rtb_Lw_idx_1 = rtb_Sum_m2[0];
/* {S!d1322}Sum: '<S108>/Sum' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S111>/i x j'
 *  Product: '<S111>/j x k'
 *  Product: '<S112>/j x i'
 *  Product: '<S112>/k x j'
 */
rtb_Sum_m2[0] = AirRefueling_Platform_X.pqr_CSTATE[1] * rtb_dl1out - AirRefueling_Platform_X.pqr_CSTATE[2] * rtb_UnitConversion_f;
rtb_Sum_m2[1] = rtb_jxk - rtb_kxi;
rtb_Sum_m2[2] = AirRefueling_Platform_X.pqr_CSTATE[0] * rtb_UnitConversion - AirRefueling_Platform_X.pqr_CSTATE[1] * rtb_Lw_idx_1;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    for (n_tmp = 0; n_tmp < 3; n_tmp++) {
        /* {S!d1324}Selector: '<S99>/Selector1' incorporates:
 *  Constant: '<S100>/Constant1'
 */
        AirRefueling_Platform_B.Selector1[3 * n_tmp] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 3];
        AirRefueling_Platform_B.Selector1[3 * n_tmp + 1] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 4];
        AirRefueling_Platform_B.Selector1[3 * n_tmp + 2] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 5];
    }
}
/* {S!d1326}MATLAB Function: '<S5>/ ' */
/* MATLAB Function 'Tanker System/ ': '<S151>:1' */
/* '<S151>:1:6' */
/* '<S151>:1:7' */
/* '<S151>:1:10' */
/* '<S151>:1:11' */
/* '<S151>:1:13' */
/* '<S151>:1:14' */
/* '<S151>:1:17' */
/* '<S151>:1:19' */
/* '<S151>:1:20' */
/* '<S151>:1:21' */
/* '<S151>:1:22' */
/* '<S151>:1:25' */
/* '<S151>:1:28' */
/* '<S151>:1:31' */
%<(SLibCGCallSubFcn("AirRefuel_TankerVortexWindField", ["rtb_Sum", "rtb_Gain1_d"], 1, 34, 14))>;
/* '<S151>:1:35' */
rtb_Sum_2[0] = rtb_Sum[0];
rtb_Sum_2[1] = rtb_Sum[1] + 4.0;
rtb_Sum_2[2] = rtb_Sum[2];
rtb_Sum_3[0] = rtb_Sum[0];
rtb_Sum_3[1] = rtb_Sum[1] + -4.0;
rtb_Sum_3[2] = rtb_Sum[2];
rtb_Sum_4[0] = rtb_Sum[0] + 4.0;
rtb_Sum_4[1] = rtb_Sum[1];
rtb_Sum_4[2] = rtb_Sum[2];
rtb_Sum_5[0] = rtb_Sum[0] + -4.0;
rtb_Sum_5[1] = rtb_Sum[1];
rtb_Sum_5[2] = rtb_Sum[2];
/* {S!d1328}Sum: '<S95>/Sum' incorporates:
 *  MATLAB Function: '<S5>/ '
 *  UnitConversion: '<S153>/Unit Conversion'
 */
/* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
rtb_Sum_ah[0] = 3.280839895013123 * rtb_Gain1_d[0];
/* {S!d1330}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  Sum: '<S3>/Sum3'
 */
rtb_InterpretedMATLABFunction[0] = rtb_Sum_ah[0] + AirRefueling_Platform_B.Sum_n[0];
/* {S!d1332}MATLAB Function: '<S5>/ ' */
%<(SLibCGCallSubFcn("AirRefuel_TankerVortexWindField", ["rtb_Sum_2", "rtb_Sum"], 1, 34, 45))>;
%<(SLibCGCallSubFcn("AirRefuel_TankerVortexWindField", ["rtb_Sum_3", "rtb_Sum_2"], 1, 34, 46))>;
/* {S!d1334}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  MATLAB Function: '<S5>/ '
 *  Sum: '<S3>/Sum3'
 */
rtb_InterpretedMATLABFunction[3] = -((rtb_Sum[2] - rtb_Sum_2[2]) / 4.0 / 4.0) + AirRefueling_Platform_B.Merge[0];
/* {S!d1336}Sum: '<S95>/Sum' incorporates:
 *  MATLAB Function: '<S5>/ '
 *  Sum: '<S92>/Sum'
 *  UnitConversion: '<S153>/Unit Conversion'
 */
rtb_Sum_ah[0] = AirRefueling_Platform_B.ubvbwb[0] - rtb_InterpretedMATLABFunction[0];
rtb_Sum_ah[1] = 3.280839895013123 * rtb_Gain1_d[1];
/* {S!d1338}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  Sum: '<S3>/Sum3'
 */
rtb_InterpretedMATLABFunction[1] = rtb_Sum_ah[1] + AirRefueling_Platform_B.Sum_n[1];
/* {S!d1340}MATLAB Function: '<S5>/ ' */
%<(SLibCGCallSubFcn("AirRefuel_TankerVortexWindField", ["rtb_Sum_4", "rtb_Sum"], 1, 34, 43))>;
%<(SLibCGCallSubFcn("AirRefuel_TankerVortexWindField", ["rtb_Sum_5", "rtb_Sum_2"], 1, 34, 44))>;
/* {S!d1342}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  MATLAB Function: '<S5>/ '
 *  Sum: '<S3>/Sum3'
 */
rtb_InterpretedMATLABFunction[4] = -(-(rtb_Sum[2] - rtb_Sum_2[2]) / 4.0 / 4.0) + AirRefueling_Platform_B.Merge[1];
/* {S!d1344}Sum: '<S95>/Sum' incorporates:
 *  MATLAB Function: '<S5>/ '
 *  Sum: '<S92>/Sum'
 *  UnitConversion: '<S153>/Unit Conversion'
 */
rtb_Sum_ah[1] = AirRefueling_Platform_B.ubvbwb[1] - rtb_InterpretedMATLABFunction[1];
rtb_Sum_ah[2] = 3.280839895013123 * rtb_Gain1_d[2];
/* {S!d1346}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  Sum: '<S3>/Sum3'
 */
rtb_InterpretedMATLABFunction[2] = rtb_Sum_ah[2] + AirRefueling_Platform_B.Sum_n[2];
rtb_InterpretedMATLABFunction[5] = AirRefueling_Platform_B.Merge[2];
/* {S!d1348}Sum: '<S95>/Sum' incorporates:
 *  Sum: '<S92>/Sum'
 */
rtb_Sum_ah[2] = AirRefueling_Platform_B.ubvbwb[2] - rtb_InterpretedMATLABFunction[2];
/* {S!d1350}Abs: '<S94>/z-->h' */
rtb_UnitConversion_f = fabs(AirRefueling_Platform_B.xeyeze[2]);
/* {S!d1352}UnitConversion: '<S129>/Unit Conversion' */
/* Unit Conversion - from: ft to: m
 Expression: output = (0.3048*input) + (0) */
AirRefueling_Platform_B.UnitConversion_i = 0.3048 * rtb_UnitConversion_f;
%if !WHITE_SPACE(tlcOutputsFcnOfS43B199)
/* {S!d1354}S-Function (saeroatmos): '<S126>/S-Function' */
%<tlcOutputsFcnOfS43B199>\
%endif
/* {S!d1356}UnitConversion: '<S128>/Unit Conversion' */
/* Unit Conversion - from: kg/m^3 to: slug/ft^3
 Expression: output = (0.00194032*input) + (0) */
rtb_UnitConversion = 0.0019403203319797156 * AirRefueling_Platform_B.SFunction_o4_e;
/* {S!d1358}Product: '<S118>/Product' incorporates:
 *  Product: '<S121>/Product'
 */
rtb_Fy = rtb_Sum_ah[0] * rtb_Sum_ah[0];
/* {S!d1360}Product: '<S118>/Product1' incorporates:
 *  Product: '<S121>/Product1'
 */
rtb_Lw_idx_1 = rtb_Sum_ah[1] * rtb_Sum_ah[1];
/* {S!d1362}Gain: '<S115>/1//2rhoV^2' incorporates:
 *  Product: '<S115>/Product2'
 *  Product: '<S118>/Product'
 *  Product: '<S118>/Product1'
 *  Product: '<S118>/Product2'
 *  Sum: '<S118>/Sum'
 */
rtb_u2rhoV2 = ((rtb_Fy + rtb_Lw_idx_1) + rtb_Sum_ah[2] * rtb_Sum_ah[2]) * rtb_UnitConversion * AirRefueling_Platform_P.u2rhoV2_Gain;
/* {S!d1364}Gain: '<S137>/reference area' */
rtb_jxi = AirRefueling_Platform_P.S_ref * rtb_u2rhoV2;
/* {S!d1366}Product: '<S142>/j x k' incorporates:
 *  Product: '<S121>/Product'
 */
rtb_jxk = rtb_Fy;
/* {S!d1368}Product: '<S142>/k x i' incorporates:
 *  Product: '<S121>/Product1'
 */
rtb_kxi = rtb_Lw_idx_1;
/* {S!d1370}Product: '<S142>/j x k' incorporates:
 *  Product: '<S121>/Product2'
 *  Sqrt: '<S116>/Airspeed'
 *  Sum: '<S121>/Sum'
 */
rtb_jxk = (rtb_jxk + rtb_kxi) + rtb_Sum_ah[2] * rtb_Sum_ah[2];
rtb_jxk = sqrt(rtb_jxk);
/* {S!d1372}Product: '<S142>/k x i' incorporates:
 *  Product: '<S116>/Product'
 */
rtb_kxi = rtb_Sum_ah[1] / rtb_jxk;
/* {S!d1374}Trigonometry: '<S116>/Sideslip' */
if (rtb_kxi > 1.0) {
    pY_idx_1 = 1.0;
} else if (rtb_kxi < -1.0) {
    pY_idx_1 = -1.0;
} else {
    pY_idx_1 = rtb_kxi;
}
/* {S!d1376}Product: '<S142>/k x i' incorporates:
 *  Trigonometry: '<S116>/Sideslip'
 */
rtb_kxi = asin(pY_idx_1);
/* {S!d1378}UnitConversion: '<S123>/Unit Conversion' incorporates:
 *  Trigonometry: '<S116>/Incidence'
 */
/* Unit Conversion - from: rad to: deg
 Expression: output = (57.2958*input) + (0) */
rtb_UnitConversion_n[0] = 57.295779513082323 * %<(SLibCGCallSubFcn("rt_atan2d_snf", ["rtb_Sum_ah[2]", "rtb_Sum_ah[0]"], 1, 34, 19))>;
rtb_UnitConversion_n[1] = 57.295779513082323 * rtb_kxi;
/* {S!d1380}Sum: '<S95>/Sum' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Sum: '<S92>/Sum1'
 */
rtb_Sum_ah[0] = AirRefueling_Platform_X.pqr_CSTATE[0] + rtb_InterpretedMATLABFunction[3];
rtb_Sum_ah[1] = AirRefueling_Platform_X.pqr_CSTATE[1] + rtb_InterpretedMATLABFunction[4];
rtb_Sum_ah[2] = AirRefueling_Platform_X.pqr_CSTATE[2] + rtb_InterpretedMATLABFunction[5];
/* {S!d1388}Saturate: '<S124>/lef Saturation' */
if (AirRefueling_Platform_X.Integrator_CSTATE_pf > AirRefueling_Platform_P.lefSaturation_UpperSat) {
    /* {S!d1382}Product: '<S142>/k x i' */
    rtb_kxi = AirRefueling_Platform_P.lefSaturation_UpperSat;
} else if (AirRefueling_Platform_X.Integrator_CSTATE_pf < AirRefueling_Platform_P.lefSaturation_LowerSat) {
    /* {S!d1384}Product: '<S142>/k x i' */
    rtb_kxi = AirRefueling_Platform_P.lefSaturation_LowerSat;
} else {
    /* {S!d1386}Product: '<S142>/k x i' */
    rtb_kxi = AirRefueling_Platform_X.Integrator_CSTATE_pf;
}
/* {E!d1388}End of Saturate: '<S124>/lef Saturation' */
%if !WHITE_SPACE(tlcOutputsFcnOfS43B201)

/* {S!d1390}MATLABFcn: '<S93>/Interpreted MATLAB Function' incorporates:
 *  Constant: '<S93>/flag'
 */
%<tlcOutputsFcnOfS43B201>\
%endif
/* {S!d1392}Sum: '<S95>/Sum' incorporates:
 *  Gain: '<S137>/coefAdjust'
 *  Product: '<S137>/Product'
 */
rtb_Sum_ah[0] = AirRefueling_Platform_P.coefAdjust_Gain[0] * rtb_InterpretedMATLABFunction[0];
rtb_Sum_ah[0] *= rtb_jxi;
rtb_Sum_ah[1] = AirRefueling_Platform_P.coefAdjust_Gain[1] * rtb_InterpretedMATLABFunction[1];
rtb_Sum_ah[1] *= rtb_jxi;
rtb_Sum_ah[2] = AirRefueling_Platform_P.coefAdjust_Gain[2] * rtb_InterpretedMATLABFunction[2];
rtb_Sum_ah[2] *= rtb_jxi;
if (%<(SLibCGIRIsSampleHit(1, 43))>) {
    /* {S!d1394}Sum: '<S137>/Sum' incorporates:
 *  Constant: '<S95>/Center of Gravity'
 *  Constant: '<S95>/Center of Pressure'
 */
    AirRefueling_Platform_B.Sum_b[0] = AirRefueling_Platform_P.CenterofGravity_Value[0] - AirRefueling_Platform_P.CenterofPressure_Value[0];
    AirRefueling_Platform_B.Sum_b[1] = AirRefueling_Platform_P.CenterofGravity_Value[1] - AirRefueling_Platform_P.CenterofPressure_Value[1];
    AirRefueling_Platform_B.Sum_b[2] = AirRefueling_Platform_P.CenterofGravity_Value[2] - AirRefueling_Platform_P.CenterofPressure_Value[2];
    for (n_tmp = 0; n_tmp < 3; n_tmp++) {
        /* {S!d1396}Selector: '<S99>/Selector2' incorporates:
 *  Constant: '<S100>/Constant1'
 */
        AirRefueling_Platform_B.Selector2[3 * n_tmp] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp];
        AirRefueling_Platform_B.Selector2[3 * n_tmp + 1] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 1];
        AirRefueling_Platform_B.Selector2[3 * n_tmp + 2] = AirRefueling_Platform_P.Constant1_Value_h[6 * n_tmp + 2];
    }
}
/* {S!d1398}Product: '<S142>/j x k' */
rtb_jxk = rtb_Sum_ah[1] * AirRefueling_Platform_B.Sum_b[2];
/* {S!d1400}Product: '<S142>/k x i' */
rtb_kxi = rtb_Sum_ah[2] * AirRefueling_Platform_B.Sum_b[0];
/* {S!d1402}Product: '<S113>/i x j' incorporates:
 *  Product: '<S143>/k x j'
 */
rtb_ixj = rtb_Sum_ah[2] * AirRefueling_Platform_B.Sum_b[1];
/* {S!d1404}Sum: '<S124>/Sum1' incorporates:
 *  Product: '<S143>/i x k'
 */
rtb_Sum1_m = rtb_Sum_ah[0] * AirRefueling_Platform_B.Sum_b[2];
/* {S!d1406}Gain: '<S150>/Gain' incorporates:
 *  Product: '<S143>/j x i'
 */
rtb_Gain_h = rtb_Sum_ah[1] * AirRefueling_Platform_B.Sum_b[0];
/* {S!d1408}Sum: '<S138>/Sum' incorporates:
 *  Product: '<S142>/i x j'
 */
rtb_Sum_2[0] = rtb_jxk;
rtb_Sum_2[1] = rtb_kxi;
rtb_Sum_2[2] = rtb_Sum_ah[0] * AirRefueling_Platform_B.Sum_b[1];
rtb_Sum[0] = rtb_ixj;
rtb_Sum[1] = rtb_Sum1_m;
rtb_Sum[2] = rtb_Gain_h;
/* {S!d1410}Product: '<S137>/Product1' incorporates:
 *  Constant: '<S137>/Constant'
 *  Constant: '<S137>/Constant1'
 *  Product: '<S137>/Product3'
 */
pY_idx_1 = AirRefueling_Platform_P.b_ref * rtb_jxi;
rtb_Gain1_d[0] = pY_idx_1 * rtb_InterpretedMATLABFunction[3];
rtb_Gain1_d[1] = AirRefueling_Platform_P.d_ref * rtb_jxi * rtb_InterpretedMATLABFunction[4];
rtb_Gain1_d[2] = pY_idx_1 * rtb_InterpretedMATLABFunction[5];
for (n_tmp = 0; n_tmp < 3; n_tmp++) {
    /* {S!d1412}Sum: '<S99>/Sum2' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S110>/Product'
 *  Selector: '<S99>/Selector1'
 *  Sum: '<S137>/Sum1'
 *  Sum: '<S138>/Sum'
 */
    rtb_Sum_3[n_tmp] = (((rtb_Sum_2[n_tmp] - rtb_Sum[n_tmp]) + rtb_Gain1_d[n_tmp]) - (AirRefueling_Platform_B.Selector1[n_tmp + 6] * AirRefueling_Platform_X.pqr_CSTATE[2] + (AirRefueling_Platform_B.Selector1[n_tmp + 3] * AirRefueling_Platform_X.pqr_CSTATE[1] + AirRefueling_Platform_B.Selector1[n_tmp] * AirRefueling_Platform_X.pqr_CSTATE[0]))) - rtb_Sum_m2[n_tmp];
}
/* {S!d1414}Product: '<S99>/Product2' incorporates:
 *  Selector: '<S99>/Selector2'
 */
%<(SLibCGCallSubFcn("rt_mrdivide_U1d1x3_U2d_9vOrDY9Z", ["rtb_Sum_3", "AirRefueling_Platform_B.Selector2", "AirRefueling_Platform_B.Product2"], 1, 34, 0))>;
/* {S!d1416}Sum: '<S95>/Sum' */
pY_idx_1 = rtb_Sum_ah[0];
rtb_UnitConversion_au = rtb_Sum_ah[1];
rtb_Fy = rtb_Sum_ah[2];
/* {S!d1418}Sum: '<S95>/Sum' incorporates:
 *  Constant: '<S97>/Ty'
 *  Constant: '<S97>/Tz'
 *  Integrator: '<S150>/Integrator '
 */
rtb_Sum_ah[0] = AirRefueling_Platform_X.Integrator_CSTATE + pY_idx_1;
rtb_Sum_ah[1] = AirRefueling_Platform_P.Ty_Value + rtb_UnitConversion_au;
rtb_Sum_ah[2] = AirRefueling_Platform_P.Tz_Value + rtb_Fy;
/* {S!d1420}Gain: '<S150>/Gain' incorporates:
 *  Constant: '<S94>/Latitude'
 *  Selector: '<S127>/Selector2'
 *  UnitConversion: '<S134>/Unit Conversion'
 */
rtb_Gain_h = AirRefueling_Platform_P.Latitude_Value;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
rtb_Gain_h *= 0.017453292519943295;
/* {S!d1422}Sum: '<S124>/Sum1' incorporates:
 *  Constant: '<S94>/Latitude'
 *  Selector: '<S127>/Selector1'
 *  UnitConversion: '<S136>/Unit Conversion'
 */
rtb_Sum1_m = AirRefueling_Platform_P.Latitude_Value;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
rtb_Sum1_m *= 0.017453292519943295;
/* {S!d1424}Product: '<S113>/i x j' incorporates:
 *  Selector: '<S127>/Selector'
 *  SignalConversion generated from: '<S127>/Selector'
 *  UnitConversion: '<S135>/Unit Conversion'
 */
rtb_ixj = rtb_UnitConversion_f;
/* Unit Conversion - from: ft to: m
 Expression: output = (0.3048*input) + (0) */
rtb_ixj *= 0.3048;
%if !WHITE_SPACE(tlcOutputsFcnOfS43B211)
/* {S!d1426}S-Function (saerogravity2): '<S127>/WGS84 Gravity S-Function' incorporates:
 *  Constant: '<S127>/Julian Date'
 */
%<tlcOutputsFcnOfS43B211>\
%endif
/* {S!d1428}Gain: '<S150>/Gain' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S113>/j x k'
 */
/* Unit Conversion - from: m/s^2 to: ft/s^2
 Expression: output = (3.28084*input) + (0) */
rtb_Gain_h = AirRefueling_Platform_B.ubvbwb[1] * AirRefueling_Platform_X.pqr_CSTATE[2];
/* {S!d1430}Sum: '<S124>/Sum1' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S113>/k x i'
 */
rtb_Sum1_m = AirRefueling_Platform_B.ubvbwb[2] * AirRefueling_Platform_X.pqr_CSTATE[0];
/* {S!d1432}Product: '<S113>/i x j' incorporates:
 *  Integrator: '<S91>/p,q,r '
 */
rtb_ixj = AirRefueling_Platform_B.ubvbwb[0] * AirRefueling_Platform_X.pqr_CSTATE[1];
/* {S!d1434}Sum: '<S101>/Sum' incorporates:
 *  Integrator: '<S91>/p,q,r '
 *  Product: '<S114>/i x k'
 *  Product: '<S114>/j x i'
 *  Product: '<S114>/k x j'
 */
rtb_Sum_2[0] = rtb_Gain_h;
rtb_Sum_2[1] = rtb_Sum1_m;
rtb_Sum_2[2] = rtb_ixj;
rtb_Sum[0] = AirRefueling_Platform_B.ubvbwb[2] * AirRefueling_Platform_X.pqr_CSTATE[1];
rtb_Sum[1] = AirRefueling_Platform_B.ubvbwb[0] * AirRefueling_Platform_X.pqr_CSTATE[2];
rtb_Sum[2] = AirRefueling_Platform_B.ubvbwb[1] * AirRefueling_Platform_X.pqr_CSTATE[0];
/* {S!d1436}Gain: '<S150>/Gain' incorporates:
 *  Gain: '<S124>/Gain'
 */
rtb_Gain_h = AirRefueling_Platform_P.Gain_Gain_o * rtb_UnitConversion_n[0];
/* {S!d1438}Sum: '<S124>/Sum1' incorporates:
 *  Integrator: '<S124>/LF_state'
 */
rtb_Sum1_m = AirRefueling_Platform_X.LF_state_CSTATE;
/* {S!d1440}Gain: '<S150>/Gain' incorporates:
 *  Sum: '<S124>/Sum2'
 */
rtb_Gain_h += rtb_Sum1_m;
/* {S!d1442}Sum: '<S124>/Sum1' */
rtb_Sum1_m = rtb_UnitConversion_n[0] - rtb_Gain_h;
/* {S!d1444}Gain: '<S124>/Gain1' */
AirRefueling_Platform_B.Gain1 = AirRefueling_Platform_P.Gain1_Gain_o * rtb_Sum1_m;
/* {S!d1446}Gain: '<S124>/Gain2' */
rtb_UnitConversion_f = AirRefueling_Platform_P.Gain2_Gain_c * rtb_Gain_h;
/* {S!d1448}Gain: '<S150>/Gain' incorporates:
 *  Constant: '<S124>/coeff1'
 *  Gain: '<S124>/r2d6'
 *  Gain: '<S94>/r2d5'
 *  Product: '<S87>/Product'
 *  Product: '<S94>/Product6'
 *  Sum: '<S124>/Sum'
 *  UnitConversion: '<S131>/Unit Conversion'
 */
/* Unit Conversion - from: K to: degR
 Expression: output = (1.8*input) + (0) */
rtb_Gain_h = 1.7999999999999998 * AirRefueling_Platform_B.SFunction_o1_b;
rtb_Gain_h = (rtb_UnitConversion_f - rtb_u2rhoV2 / (AirRefueling_Platform_P.r2d5_Gain * rtb_Gain_h * rtb_UnitConversion) * AirRefueling_Platform_P.r2d6_Gain) + AirRefueling_Platform_P.coeff1_Value;
/* {S!d1454}Saturate: '<S125>/Command Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.CommandSaturation_UpperSat) {
    /* {S!d1450}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_UpperSat;
} else {
    if (rtb_Gain_h < AirRefueling_Platform_P.CommandSaturation_LowerSat) {
        /* {S!d1452}Gain: '<S150>/Gain' */
        rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_LowerSat;
    }
}
/* {E!d1454}End of Saturate: '<S125>/Command Saturation' */

/* {S!d1456}Gain: '<S150>/Gain' incorporates:
 *  Gain: '<S125>/Gain3'
 *  Integrator: '<S125>/Integrator '
 *  Sum: '<S125>/Sum3'
 */
rtb_Gain_h = (rtb_Gain_h - AirRefueling_Platform_X.Integrator_CSTATE_pf) * AirRefueling_Platform_P.Gain3_Gain_p;
/* {S!d1464}Saturate: '<S125>/Rate Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.RateSaturation_UpperSat) {
    /* {S!d1458}Saturate: '<S125>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation = AirRefueling_Platform_P.RateSaturation_UpperSat;
} else if (rtb_Gain_h < AirRefueling_Platform_P.RateSaturation_LowerSat) {
    /* {S!d1460}Saturate: '<S125>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation = AirRefueling_Platform_P.RateSaturation_LowerSat;
} else {
    /* {S!d1462}Saturate: '<S125>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation = rtb_Gain_h;
}
/* {E!d1464}End of Saturate: '<S125>/Rate Saturation' */
for (i = 0; i < 3; i++) {
    /* {S!d1466}Sum: '<S91>/Sum' incorporates:
 *  Concatenate: '<S107>/Vector Concatenate'
 *  Concatenate: '<S127>/Matrix Concatenate'
 *  Constant: '<S100>/Constant'
 *  Gain: '<S94>/Gravity in Earth Axes'
 *  Product: '<S91>/Product'
 *  Product: '<S94>/Inertial to Body'
 *  Sum: '<S101>/Sum'
 *  Sum: '<S87>/Sum3'
 *  UnitConversion: '<S133>/Unit Conversion'
 */
    AirRefueling_Platform_B.Sum_o[i] = (((3.280839895013123 * AirRefueling_Platform_B.MatrixConcatenate[0] * AirRefueling_Platform_P.mass * AirRefueling_Platform_B.VectorConcatenate[i] + 3.280839895013123 * AirRefueling_Platform_B.MatrixConcatenate[1] * AirRefueling_Platform_P.mass * AirRefueling_Platform_B.VectorConcatenate[i + 3]) + 3.280839895013123 * AirRefueling_Platform_B.MatrixConcatenate[2] * AirRefueling_Platform_P.mass * AirRefueling_Platform_B.VectorConcatenate[i + 6]) + rtb_Sum_ah[i]) / AirRefueling_Platform_P.mass + (rtb_Sum_2[i] - rtb_Sum[i]);
    /* {S!d1468}Sum: '<S87>/Sum4' incorporates:
 *  Constant: '<S87>/TankerSpeed'
 */
    AirRefueling_Platform_B.Sum4_f[i] = AirRefueling_Platform_B.Product_p[i] - AirRefueling_Platform_P.TankerSpeed_Value[i];
}
/* {S!d1476}Saturate: '<S147>/Command Saturation' incorporates:
 *  Sum: '<S86>/Sum'
 */
if (rtb_l1out > AirRefueling_Platform_P.CommandSaturation_UpperSat_h) {
    /* {S!d1470}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_UpperSat_h;
} else if (rtb_l1out < AirRefueling_Platform_P.CommandSaturation_LowerSat_j) {
    /* {S!d1472}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_LowerSat_j;
} else {
    /* {S!d1474}Gain: '<S150>/Gain' */
    rtb_Gain_h = rtb_l1out;
}
/* {E!d1476}End of Saturate: '<S147>/Command Saturation' */

/* {S!d1478}Gain: '<S150>/Gain' incorporates:
 *  Gain: '<S147>/Gain'
 *  Sum: '<S147>/Sum'
 */
rtb_Gain_h = (rtb_Gain_h - rtb_Integrator_d) * AirRefueling_Platform_P.Gain_Gain_m;
/* {S!d1486}Saturate: '<S147>/Rate Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.RateSaturation_UpperSat_b) {
    /* {S!d1480}Saturate: '<S147>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_f = AirRefueling_Platform_P.RateSaturation_UpperSat_b;
} else if (rtb_Gain_h < AirRefueling_Platform_P.RateSaturation_LowerSat_o) {
    /* {S!d1482}Saturate: '<S147>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_f = AirRefueling_Platform_P.RateSaturation_LowerSat_o;
} else {
    /* {S!d1484}Saturate: '<S147>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_f = rtb_Gain_h;
}
/* {E!d1486}End of Saturate: '<S147>/Rate Saturation' */

/* {S!d1494}Saturate: '<S148>/Command Saturation' incorporates:
 *  Sum: '<S86>/Sum'
 */
if (rtb_jxi_tmp > AirRefueling_Platform_P.CommandSaturation_UpperSat_j) {
    /* {S!d1488}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_UpperSat_j;
} else if (rtb_jxi_tmp < AirRefueling_Platform_P.CommandSaturation_LowerSat_b) {
    /* {S!d1490}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_LowerSat_b;
} else {
    /* {S!d1492}Gain: '<S150>/Gain' */
    rtb_Gain_h = rtb_jxi_tmp;
}
/* {E!d1494}End of Saturate: '<S148>/Command Saturation' */

/* {S!d1496}Gain: '<S150>/Gain' incorporates:
 *  Gain: '<S148>/Gain'
 *  Sum: '<S148>/Sum'
 */
rtb_Gain_h = (rtb_Gain_h - rtb_Integrator_e) * AirRefueling_Platform_P.Gain_Gain_e;
/* {S!d1504}Saturate: '<S148>/Rate Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.RateSaturation_UpperSat_g) {
    /* {S!d1498}Saturate: '<S148>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_j = AirRefueling_Platform_P.RateSaturation_UpperSat_g;
} else if (rtb_Gain_h < AirRefueling_Platform_P.RateSaturation_LowerSat_a) {
    /* {S!d1500}Saturate: '<S148>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_j = AirRefueling_Platform_P.RateSaturation_LowerSat_a;
} else {
    /* {S!d1502}Saturate: '<S148>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_j = rtb_Gain_h;
}
/* {E!d1504}End of Saturate: '<S148>/Rate Saturation' */

/* {S!d1512}Saturate: '<S149>/Command Saturation' incorporates:
 *  Sum: '<S86>/Sum'
 */
if (rtb_Lw_idx_0 > AirRefueling_Platform_P.CommandSaturation_UpperSat_jm) {
    /* {S!d1506}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_UpperSat_jm;
} else if (rtb_Lw_idx_0 < AirRefueling_Platform_P.CommandSaturation_LowerSat_o) {
    /* {S!d1508}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_LowerSat_o;
} else {
    /* {S!d1510}Gain: '<S150>/Gain' */
    rtb_Gain_h = rtb_Lw_idx_0;
}
/* {E!d1512}End of Saturate: '<S149>/Command Saturation' */

/* {S!d1514}Gain: '<S150>/Gain' incorporates:
 *  Gain: '<S149>/Gain'
 *  Sum: '<S149>/Sum'
 */
rtb_Gain_h = (rtb_Gain_h - rtb_Integrator_k) * AirRefueling_Platform_P.Gain_Gain_g;
/* {S!d1522}Saturate: '<S149>/Rate Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.RateSaturation_UpperSat_h) {
    /* {S!d1516}Saturate: '<S149>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_d = AirRefueling_Platform_P.RateSaturation_UpperSat_h;
} else if (rtb_Gain_h < AirRefueling_Platform_P.RateSaturation_LowerSat_f) {
    /* {S!d1518}Saturate: '<S149>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_d = AirRefueling_Platform_P.RateSaturation_LowerSat_f;
} else {
    /* {S!d1520}Saturate: '<S149>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_d = rtb_Gain_h;
}
/* {E!d1522}End of Saturate: '<S149>/Rate Saturation' */

/* {S!d1530}Saturate: '<S150>/Command Saturation' */
if (rtb_Divide[0] > AirRefueling_Platform_P.CommandSaturation_UpperSat_d) {
    /* {S!d1524}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_UpperSat_d;
} else if (rtb_Divide[0] < AirRefueling_Platform_P.CommandSaturation_LowerSat_p) {
    /* {S!d1526}Gain: '<S150>/Gain' */
    rtb_Gain_h = AirRefueling_Platform_P.CommandSaturation_LowerSat_p;
} else {
    /* {S!d1528}Gain: '<S150>/Gain' */
    rtb_Gain_h = rtb_Divide[0];
}
/* {E!d1530}End of Saturate: '<S150>/Command Saturation' */

/* {S!d1532}Gain: '<S150>/Gain' incorporates:
 *  Integrator: '<S150>/Integrator '
 *  Sum: '<S150>/Sum'
 */
rtb_Gain_h = (rtb_Gain_h - AirRefueling_Platform_X.Integrator_CSTATE) * AirRefueling_Platform_P.Gain_Gain_mf;
/* {S!d1540}Saturate: '<S150>/Rate Saturation' */
if (rtb_Gain_h > AirRefueling_Platform_P.RateSaturation_UpperSat_d) {
    /* {S!d1534}Saturate: '<S150>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_p = AirRefueling_Platform_P.RateSaturation_UpperSat_d;
} else if (rtb_Gain_h < AirRefueling_Platform_P.RateSaturation_LowerSat_k) {
    /* {S!d1536}Saturate: '<S150>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_p = AirRefueling_Platform_P.RateSaturation_LowerSat_k;
} else {
    /* {S!d1538}Saturate: '<S150>/Rate Saturation' */
    AirRefueling_Platform_B.RateSaturation_p = rtb_Gain_h;
}
/* {E!d1540}End of Saturate: '<S150>/Rate Saturation' */
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput0LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS43B214 = OpaqueTLCBlockFcn("Outputs", 43, 214, 1, 35, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS43B214)
/* S-Function (saeroclockpacer): '<Root>/Simulation Pace' */
%<tlcOutputsFcnOfS43B214>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput2LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 34, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs1(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 35, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
